d\"})},function(e){u({type:\"error\",error:e})})):u({type:\"error\",error:\"Copy to clipboard is not supported in this browser\"}))},l[6]===Symbol.for(\"react.memo_cache_sentinel\")?(a=function(){u({type:\"reset\"})},l[6]=a):a=l[6],o=a,r=\"pending\"===c.state,l[1]=e,l[2]=c.state,l[3]=n,l[4]=r,l[5]=o):(n=l[3],r=l[4],o=l[5]),l[7]!==n||l[8]!==c||l[9]!==r||l[10]!==o?(i=[c,n,o,r],l[7]=n,l[8]=c,l[9]=r,l[10]=o,l[11]=i):i=l[11],i};function e6(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v=(0,A.c)(40);v[0]!==e?(i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"content\",\"getContent\",\"actionLabel\",\"successLabel\",\"icon\",\"disabled\"]),n=e.content,o=e.getContent,t=e.actionLabel,l=e.successLabel,a=e.icon,r=e.disabled,v[0]=e,v[1]=t,v[2]=n,v[3]=r,v[4]=o,v[5]=a,v[6]=i,v[7]=l):(t=v[1],n=v[2],r=v[3],o=v[4],a=v[5],i=v[6],l=v[7]),v[8]!==n||v[9]!==o?(s=function(){return n||(o?o():\"\")},v[8]=n,v[9]=o,v[10]=s):s=v[10];var w=s;v[11]!==w?(c=w(),v[11]=w,v[12]=c):c=v[12];var C=e1(e3(c),4),_=C[0],k=C[1],E=C[2],j=C[3],S=\"error\"===_.state?_.error:null;v[13]!==S?(u=function(){null!==S&&console.warn(S)},d=[S],v[13]=S,v[14]=u,v[15]=d):(u=v[14],d=v[15]),x.useEffect(u,d),v[16]!==_.state||v[17]!==E?(f=function(){if(\"success\"===_.state){var e=setTimeout(function(){E()},2e3);return function(){clearTimeout(e)}}},v[16]=_.state,v[17]=E,v[18]=f):f=v[18],v[19]!==_.state||v[20]!==j||v[21]!==E?(p=[j,_.state,E],v[19]=_.state,v[20]=j,v[21]=E,v[22]=p):p=v[22],x.useEffect(f,p);var O=!navigator.clipboard||j||r||!!S,B=\"success\"===_.state?l:t;v[23]!==_.state||v[24]!==a?(h=\"success\"===_.state?(0,b.jsx)(e8,{}):a||(0,b.jsx)(e9,{width:14,height:14,className:\"error-overlay-toolbar-button-icon\"}),v[23]=_.state,v[24]=a,v[25]=h):h=v[25];var P=h,I=\"nextjs-data-copy-button--\".concat(_.state);v[26]!==e.className||v[27]!==I?(m=eG(e.className,\"nextjs-data-copy-button\",I),v[26]=e.className,v[27]=I,v[28]=m):m=v[28],v[29]!==k||v[30]!==O?(g=function(){O||k()},v[29]=k,v[30]=O,v[31]=g):g=v[31];var z=\"error\"===_.state?\" \".concat(_.error):null;return v[32]!==O||v[33]!==B||v[34]!==P||v[35]!==i||v[36]!==z||v[37]!==m||v[38]!==g?(y=(0,b.jsxs)(\"button\",e0(eJ({},i),{type:\"button\",title:B,\"aria-label\":B,\"aria-disabled\":O,disabled:O,\"data-nextjs-copy-button\":!0,className:m,onClick:g,children:[P,z]})),v[32]=O,v[33]=B,v[34]=P,v[35]=i,v[36]=z,v[37]=m,v[38]=g,v[39]=y):y=v[39],y}function e9(e){var t,n,r=(0,A.c)(3);return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M2.406.438c-.845 0-1.531.685-1.531 1.53v6.563c0 .846.686 1.531 1.531 1.531H3.937V8.75H2.406a.219.219 0 0 1-.219-.219V1.97c0-.121.098-.219.22-.219h4.812c.12 0 .218.098.218.219v.656H8.75v-.656c0-.846-.686-1.532-1.531-1.532H2.406zm4.375 3.5c-.845 0-1.531.685-1.531 1.53v6.563c0 .846.686 1.531 1.531 1.531h4.813c.845 0 1.531-.685 1.531-1.53V5.468c0-.846-.686-1.532-1.531-1.532H6.78zm-.218 1.53c0-.12.097-.218.218-.218h4.813c.12 0 .219.098.219.219v6.562c0 .121-.098.219-.22.219H6.782a.219.219 0 0 1-.218-.219V5.47z\",fill:\"currentColor\"}),r[0]=t):t=r[0],r[1]!==e?(n=(0,b.jsx)(\"svg\",e0(eJ({width:\"14\",height:\"14\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),{children:t})),r[1]=e,r[2]=n):n=r[2],n}function e8(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{height:\"16\",xlinkTitle:\"copied\",viewBox:\"0 0 16 16\",width:\"16\",stroke:\"currentColor\",fill:\"currentColor\",children:(0,b.jsx)(\"path\",{d:\"M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z\"})}),t[0]=e):e=t[0],e}function e7(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function te(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}var tt=function(){if(\"undefined\"==typeof window)return!1;var e=\"chrome\"in window&&window.chrome,t=window.navigator.vendor;return null!=e&&\"Google Inc.\"===t}();function tn(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h=(0,A.c)(14);return h[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t={maskType:\"luminance\"},h[0]=t):t=h[0],h[1]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_a\",style:t,maskUnits:\"userSpaceOnUse\",x:\"0\",y:\"0\",width:\"14\",height:\"14\",children:(0,b.jsx)(\"path\",{d:\"M6.67.089 1.205 3.256a.663.663 0 0 0-.33.573v6.339c0 .237.126.455.33.574l5.466 3.17a.66.66 0 0 0 .66 0l5.465-3.17a.664.664 0 0 0 .329-.574V3.829a.663.663 0 0 0-.33-.573L7.33.089a.663.663 0 0 0-.661 0\",fill:\"#fff\"})}),h[1]=n):n=h[1],h[2]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_a)\",children:(0,b.jsx)(\"path\",{d:\"M18.648 2.717 3.248-4.86-4.648 11.31l15.4 7.58 7.896-16.174z\",fill:\"url(#nodejs_icon_linear_gradient_b)\"})}),h[2]=r):r=h[2],h[3]===Symbol.for(\"react.memo_cache_sentinel\")?(o={maskType:\"luminance\"},h[3]=o):o=h[3],h[4]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_c\",style:o,maskUnits:\"userSpaceOnUse\",x:\"1\",y:\"0\",width:\"12\",height:\"14\",children:(0,b.jsx)(\"path\",{d:\"M1.01 10.57a.663.663 0 0 0 .195.17l4.688 2.72.781.45a.66.66 0 0 0 .51.063l5.764-10.597a.653.653 0 0 0-.153-.122L9.216 1.18 7.325.087a.688.688 0 0 0-.171-.07L1.01 10.57z\",fill:\"#fff\"})}),h[4]=a):a=h[4],h[5]===Symbol.for(\"react.memo_cache_sentinel\")?(i=(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_c)\",children:(0,b.jsx)(\"path\",{d:\"M-5.647 4.958 5.226 19.734l14.38-10.667L8.734-5.71-5.647 4.958z\",fill:\"url(#nodejs_icon_linear_gradient_d)\"})}),h[5]=i):i=h[5],h[6]===Symbol.for(\"react.memo_cache_sentinel\")?(l={maskType:\"luminance\"},h[6]=l):l=h[6],h[7]===Symbol.for(\"react.memo_cache_sentinel\")?(s=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_e\",style:l,maskUnits:\"userSpaceOnUse\",x:\"1\",y:\"0\",width:\"13\",height:\"14\",children:(0,b.jsx)(\"path\",{d:\"M6.934.004A.665.665 0 0 0 6.67.09L1.22 3.247l5.877 10.746a.655.655 0 0 0 .235-.08l5.465-3.17a.665.665 0 0 0 .319-.453L7.126.015a.684.684 0 0 0-.189-.01\",fill:\"#fff\"})}),h[7]=s):s=h[7],h[8]===Symbol.for(\"react.memo_cache_sentinel\")?(c=(0,b.jsxs)(\"g\",{children:[s,(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_e)\",children:(0,b.jsx)(\"path\",{d:\"M1.22.002v13.992h11.894V.002H1.22z\",fill:\"url(#nodejs_icon_linear_gradient_f)\"})})]}),h[8]=c):c=h[8],h[9]===Symbol.for(\"react.memo_cache_sentinel\")?(u=(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_b\",x1:\"10.943\",y1:\"-1.084\",x2:\"2.997\",y2:\"15.062\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".3\",stopColor:\"#3E863D\"}),(0,b.jsx)(\"stop\",{offset:\".5\",stopColor:\"#55934F\"}),(0,b.jsx)(\"stop\",{offset:\".8\",stopColor:\"#5AAD45\"})]}),h[9]=u):u=h[9],h[10]===Symbol.for(\"react.memo_cache_sentinel\")?(d=(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_d\",x1:\"-.145\",y1:\"12.431\",x2:\"14.277\",y2:\"1.818\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".57\",stopColor:\"#3E863D\"}),(0,b.jsx)(\"stop\",{offset:\".72\",stopColor:\"#619857\"}),(0,b.jsx)(\"stop\",{offset:\"1\",stopColor:\"#76AC64\"})]}),h[10]=d):d=h[10],h[11]===Symbol.for(\"react.memo_cache_sentinel\")?(f=(0,b.jsxs)(\"defs\",{children:[u,d,(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_f\",x1:\"1.225\",y1:\"6.998\",x2:\"13.116\",y2:\"6.998\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".16\",stopColor:\"#6BBF47\"}),(0,b.jsx)(\"stop\",{offset:\".38\",stopColor:\"#79B461\"}),(0,b.jsx)(\"stop\",{offset:\".47\",stopColor:\"#75AC64\"}),(0,b.jsx)(\"stop\",{offset:\".7\",stopColor:\"#659E5A\"}),(0,b.jsx)(\"stop\",{offset:\".9\",stopColor:\"#3E863D\"})]})]}),h[11]=f):f=h[11],h[12]!==e?(p=(0,b.jsxs)(\"svg\",te(e7({width:\"14\",height:\"14\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),{children:[n,r,a,i,c,f]})),h[12]=e,h[13]=p):p=h[13],p}function tr(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h=(0,A.c)(14);return h[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t={maskType:\"luminance\"},h[0]=t):t=h[0],h[1]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_a\",style:t,maskUnits:\"userSpaceOnUse\",x:\"0\",y:\"0\",width:\"14\",height:\"14\",children:(0,b.jsx)(\"path\",{d:\"M6.67.089 1.205 3.256a.663.663 0 0 0-.33.573v6.339c0 .237.126.455.33.574l5.466 3.17a.66.66 0 0 0 .66 0l5.465-3.17a.664.664 0 0 0 .329-.574V3.829a.663.663 0 0 0-.33-.573L7.33.089a.663.663 0 0 0-.661 0\",fill:\"#fff\"})}),h[1]=n):n=h[1],h[2]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_a)\",children:(0,b.jsx)(\"path\",{d:\"M18.648 2.717 3.248-4.86-4.646 11.31l15.399 7.58 7.896-16.174z\",fill:\"url(#nodejs_icon_linear_gradient_b)\"})}),h[2]=r):r=h[2],h[3]===Symbol.for(\"react.memo_cache_sentinel\")?(o={maskType:\"luminance\"},h[3]=o):o=h[3],h[4]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_c\",style:o,maskUnits:\"userSpaceOnUse\",x:\"1\",y:\"0\",width:\"12\",height:\"15\",children:(0,b.jsx)(\"path\",{d:\"M1.01 10.571a.66.66 0 0 0 .195.172l4.688 2.718.781.451a.66.66 0 0 0 .51.063l5.764-10.597a.653.653 0 0 0-.153-.122L9.216 1.181 7.325.09a.688.688 0 0 0-.171-.07L1.01 10.572z\",fill:\"#fff\"})}),h[4]=a):a=h[4],h[5]===Symbol.for(\"react.memo_cache_sentinel\")?(i=(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_c)\",children:(0,b.jsx)(\"path\",{d:\"M-5.647 4.96 5.226 19.736 19.606 9.07 8.734-5.707-5.647 4.96z\",fill:\"url(#nodejs_icon_linear_gradient_d)\"})}),h[5]=i):i=h[5],h[6]===Symbol.for(\"react.memo_cache_sentinel\")?(l={maskType:\"luminance\"},h[6]=l):l=h[6],h[7]===Symbol.for(\"react.memo_cache_sentinel\")?(s=(0,b.jsx)(\"mask\",{id:\"nodejs_icon_mask_e\",style:l,maskUnits:\"userSpaceOnUse\",x:\"1\",y:\"0\",width:\"13\",height:\"14\",children:(0,b.jsx)(\"path\",{d:\"M6.935.003a.665.665 0 0 0-.264.085l-5.45 3.158 5.877 10.747a.653.653 0 0 0 .235-.082l5.465-3.17a.665.665 0 0 0 .319-.452L7.127.014a.684.684 0 0 0-.189-.01\",fill:\"#fff\"})}),h[7]=s):s=h[7],h[8]===Symbol.for(\"react.memo_cache_sentinel\")?(c=(0,b.jsxs)(\"g\",{children:[s,(0,b.jsx)(\"g\",{mask:\"url(#nodejs_icon_mask_e)\",children:(0,b.jsx)(\"path\",{d:\"M1.222.001v13.992h11.893V0H1.222z\",fill:\"url(#nodejs_icon_linear_gradient_f)\"})})]}),h[8]=c):c=h[8],h[9]===Symbol.for(\"react.memo_cache_sentinel\")?(u=(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_b\",x1:\"10.944\",y1:\"-1.084\",x2:\"2.997\",y2:\"15.062\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".3\",stopColor:\"#676767\"}),(0,b.jsx)(\"stop\",{offset:\".5\",stopColor:\"#858585\"}),(0,b.jsx)(\"stop\",{offset:\".8\",stopColor:\"#989A98\"})]}),h[9]=u):u=h[9],h[10]===Symbol.for(\"react.memo_cache_sentinel\")?(d=(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_d\",x1:\"-.145\",y1:\"12.433\",x2:\"14.277\",y2:\"1.819\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".57\",stopColor:\"#747474\"}),(0,b.jsx)(\"stop\",{offset:\".72\",stopColor:\"#707070\"}),(0,b.jsx)(\"stop\",{offset:\"1\",stopColor:\"#929292\"})]}),h[10]=d):d=h[10],h[11]===Symbol.for(\"react.memo_cache_sentinel\")?(f=(0,b.jsxs)(\"defs\",{children:[u,d,(0,b.jsxs)(\"linearGradient\",{id:\"nodejs_icon_linear_gradient_f\",x1:\"1.226\",y1:\"6.997\",x2:\"13.117\",y2:\"6.997\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{offset:\".16\",stopColor:\"#878787\"}),(0,b.jsx)(\"stop\",{offset:\".38\",stopColor:\"#A9A9A9\"}),(0,b.jsx)(\"stop\",{offset:\".47\",stopColor:\"#A5A5A5\"}),(0,b.jsx)(\"stop\",{offset:\".7\",stopColor:\"#8F8F8F\"}),(0,b.jsx)(\"stop\",{offset:\".9\",stopColor:\"#626262\"})]})]}),h[11]=f):f=h[11],h[12]!==e?(p=(0,b.jsxs)(\"svg\",te(e7({width:\"14\",height:\"14\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),{children:[n,r,a,i,c,f]})),h[12]=e,h[13]=p):p=h[13],p}var to=\"Learn more about enabling Node.js inspector for server code with Chrome DevTools\";function ta(e){var t,n,r,o=(0,A.c)(4),a=e.devtoolsFrontendUrl||\"\";return a&&tt?(o[1]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsx)(tn,{className:\"error-overlay-toolbar-button-icon\",width:14,height:14}),o[1]=n):n=o[1],o[2]!==a?(r=(0,b.jsx)(e6,{\"data-nextjs-data-runtime-error-copy-devtools-url\":!0,className:\"nodejs-inspector-button\",actionLabel:\"Copy Chrome DevTools URL\",successLabel:\"Copied\",content:a,icon:n}),o[2]=a,o[3]=r):r=o[3],r):(o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"a\",{title:to,\"aria-label\":to,className:\"nodejs-inspector-button\",href:\"https://nextjs.org/docs/app/building-your-application/configuring/debugging#server-side-code\",target:\"_blank\",rel:\"noopener noreferrer\",children:(0,b.jsx)(tr,{className:\"error-overlay-toolbar-button-icon\",width:14,height:14})}),o[0]=t):t=o[0],t)}function ti(e){var t,n=(0,A.c)(3),r=e.error,o=e.generateErrorInfo,a=!r;return n[0]!==o||n[1]!==a?(t=(0,b.jsx)(e6,{\"data-nextjs-data-runtime-error-copy-stack\":!0,className:\"copy-error-button\",actionLabel:\"Copy Error Info\",successLabel:\"Error Info Copied\",getContent:o,disabled:a}),n[0]=o,n[1]=a,n[2]=t):t=n[2],t}function tl(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function ts(e){if(Array.isArray(e))return e}function tc(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}function tu(e,t){return ts(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||tf(e,t)||tc()}function td(e){return ts(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||tf(e)||tc()}function tf(e,t){if(e){if(\"string\"==typeof e)return tl(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return tl(e,t)}}var tp=\"https://react.dev/link/hydration-mismatch\",th=\"https://nextjs.org/docs/messages/react-hydration-error\",tm=[/^In HTML, (.+?) cannot be a child of <(.+?)>\\.(.*)\\nThis will cause a hydration error\\.(.*)/,/^In HTML, (.+?) cannot be a descendant of <(.+?)>\\.\\nThis will cause a hydration error\\.(.*)/,/^In HTML, text nodes cannot be a child of <(.+?)>\\.\\nThis will cause a hydration error\\./,/^In HTML, whitespace text nodes cannot be a child of <(.+?)>\\. Make sure you don't have any extra whitespace between tags on each line of your source code\\.\\nThis will cause a hydration error\\./];function tg(e){return tm.some(function(t){return t.test(e)})}var ty=[\"https://nextjs.org\",\"https://react.dev\"];function tv(e){return ty.some(function(t){return e.startsWith(t)})}function tb(e){var t,n,r,o,a=(0,A.c)(6),i=e.errorMessage;a[0]!==i?(t=function(e){var t,n,r,o=(t=e,n=tv,r=Array.from(t.matchAll(/https?:\\/\\/[^\\s/$.?#].[^\\s)'\"]*/gi),function(e){return e[0]}),n?r.filter(function(e){return n(e)}):r);if(0===o.length)return null;var a=o[0];return a===tp?th:a}(i),a[0]=i,a[1]=t):t=a[1];var l=t;return l?(a[3]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(tA,{className:\"error-overlay-toolbar-button-icon\",width:14,height:14}),a[3]=r):r=a[3],a[4]!==l?(o=(0,b.jsx)(\"a\",{title:\"Go to related documentation\",\"aria-label\":\"Go to related documentation\",className:\"docs-link-button\",href:l,target:\"_blank\",rel:\"noopener noreferrer\",children:r}),a[4]=l,a[5]=o):o=a[5],o):(a[2]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsx)(\"button\",{title:\"No related documentation found\",\"aria-label\":\"No related documentation found\",className:\"docs-link-button\",disabled:!0,children:(0,b.jsx)(tA,{className:\"error-overlay-toolbar-button-icon\",width:14,height:14})}),a[2]=n):n=a[2],n)}function tA(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M0 .875h4.375C5.448.875 6.401 1.39 7 2.187A3.276 3.276 0 0 1 9.625.875H14v11.156H9.4c-.522 0-1.023.208-1.392.577l-.544.543h-.928l-.544-.543c-.369-.37-.87-.577-1.392-.577H0V.875zm6.344 3.281a1.969 1.969 0 0 0-1.969-1.968H1.312v8.53H4.6c.622 0 1.225.177 1.744.502V4.156zm1.312 7.064V4.156c0-1.087.882-1.968 1.969-1.968h3.063v8.53H9.4c-.622 0-1.225.177-1.744.502z\",fill:\"currentColor\"}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"14\",height:\"14\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}function tx(e){var t,n,r,o,a=(0,A.c)(12),i=e.error,l=e.debugInfo,s=e.feedbackButton,c=e.generateErrorInfo;a[0]!==i||a[1]!==c?(t=(0,b.jsx)(ti,{error:i,generateErrorInfo:c}),a[0]=i,a[1]=c,a[2]=t):t=a[2],a[3]!==i.message?(n=(0,b.jsx)(tb,{errorMessage:i.message}),a[3]=i.message,a[4]=n):n=a[4];var u=null==l?void 0:l.devtoolsFrontendUrl;return a[5]!==u?(r=(0,b.jsx)(ta,{devtoolsFrontendUrl:u}),a[5]=u,a[6]=r):r=a[6],a[7]!==s||a[8]!==t||a[9]!==n||a[10]!==r?(o=(0,b.jsxs)(\"span\",{className:\"error-overlay-toolbar\",children:[s,t,n,r]}),a[7]=s,a[8]=t,a[9]=n,a[10]=r,a[11]=o):o=a[11],o}function tw(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"g\",{id:\"thumb-up-16\",children:(0,b.jsx)(\"path\",{id:\"Union\",fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M6.89531 2.23959C6.72984 2.1214 6.5 2.23968 6.5 2.44303V5.24989C6.5 6.21639 5.7165 6.99989 4.75 6.99989H2.5V13.4999H12.1884C12.762 13.4999 13.262 13.1095 13.4011 12.5531L14.4011 8.55306C14.5984 7.76412 14.0017 6.99989 13.1884 6.99989H9.25H8.5V6.24989V3.51446C8.5 3.43372 8.46101 3.35795 8.39531 3.31102L6.89531 2.23959ZM5 2.44303C5 1.01963 6.6089 0.191656 7.76717 1.01899L9.26717 2.09042C9.72706 2.41892 10 2.94929 10 3.51446V5.49989H13.1884C14.9775 5.49989 16.2903 7.18121 15.8563 8.91686L14.8563 12.9169C14.5503 14.1411 13.4503 14.9999 12.1884 14.9999H1.75H1V14.2499V6.24989V5.49989H1.75H4.75C4.88807 5.49989 5 5.38796 5 5.24989V2.44303Z\",fill:\"currentColor\"})}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",className:\"thumbs-up-icon\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}function tC(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M5.89531 12.7603C5.72984 12.8785 5.5 12.7602 5.5 12.5569V9.75C5.5 8.7835 4.7165 8 3.75 8H1.5V1.5H11.1884C11.762 1.5 12.262 1.89037 12.4011 2.44683L13.4011 6.44683C13.5984 7.23576 13.0017 8 12.1884 8H8.25H7.5V8.75V11.4854C7.5 11.5662 7.46101 11.6419 7.39531 11.6889L5.89531 12.7603ZM4 12.5569C4 13.9803 5.6089 14.8082 6.76717 13.9809L8.26717 12.9095C8.72706 12.581 9 12.0506 9 11.4854V9.5H12.1884C13.9775 9.5 15.2903 7.81868 14.8563 6.08303L13.8563 2.08303C13.5503 0.858816 12.4503 0 11.1884 0H0.75H0V0.75V8.75V9.5H0.75H3.75C3.88807 9.5 4 9.61193 4 9.75V12.5569Z\",fill:\"currentColor\"}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",className:\"thumbs-down-icon\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}function t_(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function tk(e,t,n,r,o,a,i){try{var l=e[a](i),s=l.value}catch(e){n(e);return}l.done?t(s):Promise.resolve(s).then(r,o)}function tE(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function tj(e){var t,n,r=e.errorCode,o=e.className,a=(t=(0,x.useState)({}),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return t_(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t_(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),i=a[0],l=a[1],s=i[r],c=process.env.__NEXT_TELEMETRY_DISABLED,u=(0,x.useCallback)(function(e){var t;return(t=function(){return function(e,t){var n,r,o,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},i=Object.create((\"function\"==typeof Iterator?Iterator:Object).prototype);return i.next=l(0),i.throw=l(1),i.return=l(2),\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(l){return function(s){var c=[l,s];if(n)throw TypeError(\"Generator is already executing.\");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&c[0]?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[2&c[0],o.value]),c[0]){case 0:case 1:o=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,r=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===c[0]||2===c[0])){a=0;continue}if(3===c[0]&&(!o||c[1]>o[0]&&c[1]<o[3])){a.label=c[1];break}if(6===c[0]&&a.label<o[1]){a.label=o[1],o=c;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(c);break}o[2]&&a.ops.pop(),a.trys.pop();continue}c=t.call(e,a)}catch(e){c=[6,e],r=0}finally{n=o=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}}(this,function(t){switch(t.label){case 0:l(function(t){var n,o;return n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){tE(e,t,n[t])})}return e}({},t),o=null!=(o=tE({},r,e))?o:{},Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(o)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(o)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(o,e))}),n}),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,fetch(\"\".concat(process.env.__NEXT_ROUTER_BASEPATH||\"\",\"/__nextjs_error_feedback?\").concat(new URLSearchParams({errorCode:r,wasHelpful:e.toString()})))];case 2:return t.sent().ok||console.error(\"Failed to record feedback on the server.\"),[3,4];case 3:return console.error(\"Failed to record feedback:\",t.sent()),[3,4];case 4:return[2]}})},function(){var e=this,n=arguments;return new Promise(function(r,o){var a=t.apply(e,n);function i(e){tk(a,r,o,i,l,\"next\",e)}function l(e){tk(a,r,o,i,l,\"throw\",e)}i(void 0)})})()},[r]);return(0,b.jsx)(\"div\",{className:eG(\"error-feedback\",o),role:\"region\",\"aria-label\":\"Error feedback\",children:void 0!==s?(0,b.jsx)(\"p\",{className:\"error-feedback-thanks\",role:\"status\",\"aria-live\":\"polite\",children:\"Thanks for your feedback!\"}):(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(\"p\",{children:(0,b.jsx)(\"a\",{href:\"https://nextjs.org/telemetry#error-feedback\",rel:\"noopener noreferrer\",target:\"_blank\",children:\"Was this helpful?\"})}),(0,b.jsx)(\"button\",{\"aria-disabled\":c?\"true\":void 0,\"aria-label\":\"Mark as helpful\",onClick:c?void 0:function(){return u(!0)},className:eG(\"feedback-button\",!0===s&&\"voted\"),title:c?\"Feedback disabled due to setting NEXT_TELEMETRY_DISABLED\":void 0,type:\"button\",children:(0,b.jsx)(tw,{\"aria-hidden\":\"true\"})}),(0,b.jsx)(\"button\",{\"aria-disabled\":c?\"true\":void 0,\"aria-label\":\"Mark as not helpful\",onClick:c?void 0:function(){return u(!1)},className:eG(\"feedback-button\",!1===s&&\"voted\"),title:c?\"Feedback disabled due to setting NEXT_TELEMETRY_DISABLED\":void 0,type:\"button\",children:(0,b.jsx)(tC,{\"aria-hidden\":\"true\",style:{translate:\"1px 1px\"}})})]})})}function tS(e){var t,n,r=(0,A.c)(4),o=e.errorCode;return r[0]!==o?(t=o?(0,b.jsx)(tj,{className:\"error-feedback\",errorCode:o}):null,r[0]=o,r[1]=t):t=r[1],r[2]!==t?(n=(0,b.jsx)(\"footer\",{\"data-nextjs-error-overlay-footer\":!0,className:\"error-overlay-footer\",children:t}),r[2]=t,r[3]=n):n=r[3],n}var tO=\"\\n  .error-overlay-footer {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n\\n    gap: 8px;\\n    padding: 12px;\\n    background: var(--color-background-200);\\n    border-top: 1px solid var(--color-gray-400);\\n  }\\n\\n  .error-feedback {\\n    margin-left: auto;\\n\\n    p {\\n      font-size: var(--size-14);\\n      font-weight: 500;\\n      margin: 0;\\n    }\\n  }\\n\\n  \".concat(\"\\n  .error-feedback {\\n    display: flex;\\n    align-items: center;\\n    gap: 8px;\\n    white-space: nowrap;\\n    color: var(--color-gray-900);\\n  }\\n\\n  .error-feedback-thanks {\\n    height: var(--size-24);\\n    display: flex;\\n    align-items: center;\\n    padding-right: 4px; /* To match the 4px inner padding of the thumbs up and down icons */\\n  }\\n\\n  .feedback-button {\\n    background: none;\\n    border: none;\\n    border-radius: var(--rounded-md);\\n    width: var(--size-24);\\n    height: var(--size-24);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    cursor: pointer;\\n\\n    &:focus {\\n      outline: var(--focus-ring);\\n    }\\n\\n    &:hover {\\n      background: var(--color-gray-alpha-100);\\n    }\\n\\n    &:active {\\n      background: var(--color-gray-alpha-200);\\n    }\\n  }\\n\\n  .feedback-button[aria-disabled='true'] {\\n    opacity: 0.7;\\n    cursor: not-allowed;\\n  }\\n\\n  .feedback-button.voted {\\n    background: var(--color-gray-alpha-200);\\n  }\\n\\n  .thumbs-up-icon,\\n  .thumbs-down-icon {\\n    color: var(--color-gray-900);\\n    width: var(--size-16);\\n    height: var(--size-16);\\n  }\\n\",\"\\n\");function tB(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function tP(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return tB(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return tB(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function tI(e){var t,n,r,o,a,i=(0,A.c)(12),l=e.errorMessage,s=tP((0,x.useState)(!1),2),c=s[0],u=s[1],d=tP((0,x.useState)(!1),2),f=d[0],p=d[1],h=(0,x.useRef)(null);i[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=function(){h.current&&p(h.current.scrollHeight>200)},i[0]=t):t=i[0],i[1]!==l?(n=[l],i[1]=l,i[2]=n):n=i[2],(0,x.useLayoutEffect)(t,n);var m=\"nextjs__container_errors_desc \".concat(f&&!c?\"truncated\":\"\");return i[3]!==l||i[4]!==m?(r=(0,b.jsx)(\"p\",{ref:h,id:\"nextjs__container_errors_desc\",className:m,children:l}),i[3]=l,i[4]=m,i[5]=r):r=i[5],i[6]!==c||i[7]!==f?(o=f&&!c&&(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(\"div\",{className:\"nextjs__container_errors_gradient_overlay\"}),(0,b.jsx)(\"button\",{onClick:function(){return u(!0)},className:\"nextjs__container_errors_expand_button\",\"aria-expanded\":c,\"aria-controls\":\"nextjs__container_errors_desc\",children:\"Show More\"})]}),i[6]=c,i[7]=f,i[8]=o):o=i[8],i[9]!==r||i[10]!==o?(a=(0,b.jsxs)(\"div\",{className:\"nextjs__container_errors_wrapper\",children:[r,o]}),i[9]=r,i[10]=o,i[11]=a):a=i[11],a}function tz(e){var t,n=(0,A.c)(2),r=e.errorType;return n[0]!==r?(t=(0,b.jsx)(\"span\",{id:\"nextjs__container_errors_label\",className:\"nextjs__container_errors_label\",children:r}),n[0]=r,n[1]=t):t=n[1],t}function tT(e){var t,n,r=(0,A.c)(4),o=e.title,a=e.className;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.24996 12.0608L8.71963 11.5304L5.89641 8.70722C5.50588 8.3167 5.50588 7.68353 5.89641 7.29301L8.71963 4.46978L9.24996 3.93945L10.3106 5.00011L9.78029 5.53044L7.31062 8.00011L9.78029 10.4698L10.3106 11.0001L9.24996 12.0608Z\",fill:\"currentColor\"}),r[0]=t):t=r[0],r[1]!==a||r[2]!==o?(n=(0,b.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",\"aria-label\":o,className:a,children:t}),r[1]=a,r[2]=o,r[3]=n):n=r[3],n}function tD(e){var t,n,r=(0,A.c)(4),o=e.title,a=e.className;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M6.75011 3.93945L7.28044 4.46978L10.1037 7.29301C10.4942 7.68353 10.4942 8.3167 10.1037 8.70722L7.28044 11.5304L6.75011 12.0608L5.68945 11.0001L6.21978 10.4698L8.68945 8.00011L6.21978 5.53044L5.68945 5.00011L6.75011 3.93945Z\",fill:\"currentColor\"}),r[0]=t):t=r[0],r[1]!==a||r[2]!==o?(n=(0,b.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",className:a,\"aria-label\":o,children:t}),r[1]=a,r[2]=o,r[3]=n):n=r[3],n}function tL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function tN(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v=(0,A.c)(40),w=e.runtimeErrors,C=e.activeIdx,_=e.onActiveIndexChange;v[0]!==C||v[1]!==_?(r=function(){return(0,x.startTransition)(function(){C>0&&_(Math.max(0,C-1))})},v[0]=C,v[1]=_,v[2]=r):r=v[2];var k=r;v[3]!==C||v[4]!==_||v[5]!==w.length?(o=function(){return(0,x.startTransition)(function(){C<w.length-1&&_(Math.max(0,Math.min(w.length-1,C+1)))})},v[3]=C,v[4]=_,v[5]=w.length,v[6]=o):o=v[6];var E=o,j=(0,x.useRef)(null),S=(0,x.useRef)(null),O=(t=(0,x.useState)(null),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return tL(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return tL(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),B=O[0],P=O[1];v[7]===Symbol.for(\"react.memo_cache_sentinel\")?(a=function(e){P(e)},v[7]=a):a=v[7];var I=a;v[8]!==E||v[9]!==k||v[10]!==B?(i=function(){if(null!=B){var e=B.getRootNode(),t=self.document,n=function(e){\"ArrowLeft\"===e.key?(e.preventDefault(),e.stopPropagation(),k&&k()):\"ArrowRight\"===e.key&&(e.preventDefault(),e.stopPropagation(),E&&E())};return e.addEventListener(\"keydown\",n),e!==t&&t.addEventListener(\"keydown\",n),function(){e.removeEventListener(\"keydown\",n),e!==t&&t.removeEventListener(\"keydown\",n)}}},l=[B,E,k],v[8]=E,v[9]=k,v[10]=B,v[11]=i,v[12]=l):(i=v[11],l=v[12]),(0,x.useEffect)(i,l),v[13]!==C||v[14]!==B||v[15]!==w.length?(s=function(){if(null!=B){var e,t,n=B.getRootNode();if(e=n,null!=(t=ShadowRoot)&&\"undefined\"!=typeof Symbol&&t[Symbol.hasInstance]?!!t[Symbol.hasInstance](e):e instanceof t){var r=n.activeElement;0===C?j.current&&r===j.current&&j.current.blur():C===w.length-1&&S.current&&r===S.current&&S.current.blur()}}},c=[B,C,w.length],v[13]=C,v[14]=B,v[15]=w.length,v[16]=s,v[17]=c):(s=v[16],c=v[17]),(0,x.useEffect)(s,c);var z=0===C,T=0===C;v[18]===Symbol.for(\"react.memo_cache_sentinel\")?(u=(0,b.jsx)(tT,{title:\"previous\",className:\"error-overlay-pagination-button-icon\"}),v[18]=u):u=v[18],v[19]!==k||v[20]!==z||v[21]!==T?(d=(0,b.jsx)(\"button\",{ref:j,type:\"button\",disabled:z,\"aria-disabled\":T,onClick:k,\"data-nextjs-dialog-error-previous\":!0,className:\"error-overlay-pagination-button\",children:u}),v[19]=k,v[20]=z,v[21]=T,v[22]=d):d=v[22];var D=C+1;v[23]!==C||v[24]!==D?(f=(0,b.jsxs)(\"span\",{\"data-nextjs-dialog-error-index\":C,children:[D,\"/\"]}),v[23]=C,v[24]=D,v[25]=f):f=v[25];var L=w.length||1;v[26]!==L?(p=(0,b.jsx)(\"span\",{\"data-nextjs-dialog-header-total-count\":!0,children:L}),v[26]=L,v[27]=p):p=v[27],v[28]!==f||v[29]!==p?(h=(0,b.jsxs)(\"div\",{className:\"error-overlay-pagination-count\",children:[f,p]}),v[28]=f,v[29]=p,v[30]=h):h=v[30];var N=C>=w.length-1,R=C>=w.length-1;return v[31]===Symbol.for(\"react.memo_cache_sentinel\")?(m=(0,b.jsx)(tD,{title:\"next\",className:\"error-overlay-pagination-button-icon\"}),v[31]=m):m=v[31],v[32]!==E||v[33]!==N||v[34]!==R?(g=(0,b.jsx)(\"button\",{ref:S,type:\"button\",disabled:N,\"aria-disabled\":R,onClick:E,\"data-nextjs-dialog-error-next\":!0,className:\"error-overlay-pagination-button\",children:m}),v[32]=E,v[33]=N,v[34]=R,v[35]=g):g=v[35],v[36]!==d||v[37]!==h||v[38]!==g?(y=(0,b.jsxs)(\"nav\",{className:\"error-overlay-pagination dialog-exclude-closing-from-outside-click\",ref:I,children:[d,h,g]}),v[36]=d,v[37]=h,v[38]=g,v[39]=y):y=v[39],y}function tR(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"circle\",{cx:\"7\",cy:\"7\",r:\"5.5\",strokeWidth:\"3\"}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"14\",height:\"14\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}function tM(e){var t,n,r,o,a,i=(0,A.c)(31),l=e.versionInfo,s=e.bundlerName,c=l.staleness;if(i[0]!==s||i[1]!==c||i[2]!==l){v=Symbol.for(\"react.early_return_sentinel\");n:{var u=function(e){var t=e.installed,n=e.staleness,r=e.expected,o=\"\",a=\"\",i=\"\",l=\"Next.js \".concat(t);switch(n){case\"newer-than-npm\":case\"fresh\":o=l,a=\"Latest available version is detected (\".concat(t,\").\"),i=\"fresh\";break;case\"stale-patch\":case\"stale-minor\":o=\"\".concat(l,\" (stale)\"),a=\"There is a newer version (\".concat(r,\") available, upgrade recommended! \"),i=\"stale\";break;case\"stale-major\":o=\"\".concat(l,\" (outdated)\"),a=\"An outdated version detected (latest is \".concat(r,\"), upgrade is highly recommended!\"),i=\"outdated\";break;case\"stale-prerelease\":o=\"\".concat(l,\" (stale)\"),a=\"There is a newer canary version (\".concat(r,\") available, please upgrade! \"),i=\"stale\";break;case\"unknown\":o=\"\".concat(l,\" (unknown)\"),a=\"No Next.js version data was found.\",i=\"unknown\"}return{text:o,indicatorClass:i,title:a}}(l),d=u.text,f=u.indicatorClass,p=u.title;if(x=d,w=p,m=\"Turbopack\"===s,c.startsWith(\"stale\")){var h,m,g,y,v,x,w,C,_,k=m&&\"turbopack-text\";i[10]!==k?(C=eG(k),i[10]=k,i[11]=C):C=i[11],i[12]!==s||i[13]!==C?(_=(0,b.jsx)(\"span\",{className:C,children:s}),i[12]=s,i[13]=C,i[14]=_):_=i[14],v=(0,b.jsxs)(\"a\",{className:\"nextjs-container-build-error-version-status dialog-exclude-closing-from-outside-click\",target:\"_blank\",rel:\"noopener noreferrer\",href:\"https://nextjs.org/docs/messages/version-staleness\",children:[(0,b.jsx)(tR,{className:eG(\"version-staleness-indicator\",f)}),(0,b.jsx)(\"span\",{\"data-nextjs-version-checker\":!0,title:w,children:x}),_]});break n}y=\"nextjs-container-build-error-version-status dialog-exclude-closing-from-outside-click\",h=tR,g=eG(\"version-staleness-indicator\",f)}i[0]=s,i[1]=c,i[2]=l,i[3]=h,i[4]=m,i[5]=g,i[6]=y,i[7]=v,i[8]=x,i[9]=w}else h=i[3],m=i[4],g=i[5],y=i[6],v=i[7],x=i[8],w=i[9];if(v!==Symbol.for(\"react.early_return_sentinel\"))return v;i[15]!==h||i[16]!==g?(t=(0,b.jsx)(h,{className:g}),i[15]=h,i[16]=g,i[17]=t):t=i[17],i[18]!==x||i[19]!==w?(n=(0,b.jsx)(\"span\",{\"data-nextjs-version-checker\":!0,title:w,children:x}),i[18]=x,i[19]=w,i[20]=n):n=i[20];var E=m&&\"turbopack-text\";return i[21]!==E?(r=eG(E),i[21]=E,i[22]=r):r=i[22],i[23]!==s||i[24]!==r?(o=(0,b.jsx)(\"span\",{className:r,children:s}),i[23]=s,i[24]=r,i[25]=o):o=i[25],i[26]!==y||i[27]!==t||i[28]!==n||i[29]!==o?(a=(0,b.jsxs)(\"span\",{className:y,children:[t,n,o]}),i[26]=y,i[27]=t,i[28]=n,i[29]=o,i[30]=a):a=i[30],a}function tZ(e){var t,n,r,o,a=(0,A.c)(11),i=e.runtimeErrors,l=e.activeIdx,s=e.setActiveIndex,c=e.versionInfo,u=process.env.__NEXT_BUNDLER||\"Webpack\";a[0]!==i?(t=null!=i?i:[],a[0]=i,a[1]=t):t=a[1];var d=null!=l?l:0,f=null!=s?s:tU;return a[2]!==t||a[3]!==d||a[4]!==f?(n=(0,b.jsx)(tF,{side:\"left\",children:(0,b.jsx)(tN,{runtimeErrors:t,activeIdx:d,onActiveIndexChange:f})}),a[2]=t,a[3]=d,a[4]=f,a[5]=n):n=a[5],a[6]!==c?(r=c&&(0,b.jsx)(tF,{side:\"right\",children:(0,b.jsx)(tM,{versionInfo:c,bundlerName:u})}),a[6]=c,a[7]=r):r=a[7],a[8]!==n||a[9]!==r?(o=(0,b.jsxs)(\"div\",{\"data-nextjs-error-overlay-nav\":!0,children:[n,r]}),a[8]=n,a[9]=r,a[10]=o):o=a[10],o}function tU(){}function tF(e){var t,n,r=(0,A.c)(4),o=e.children,a=e.side,i=void 0===a?\"left\":a;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(tq,{}),r[0]=t):t=r[0],r[1]!==o||r[2]!==i?(n=(0,b.jsxs)(\"div\",{className:\"error-overlay-notch\",\"data-side\":i,children:[o,t]}),r[1]=o,r[2]=i,r[3]=n):n=r[3],n}function tq(){var e,t,n,r=(0,A.c)(3);return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e={maskType:\"alpha\"},r[0]=e):e=r[0],r[1]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsxs)(\"mask\",{id:\"error_overlay_nav_mask0_2667_14687\",style:e,maskUnits:\"userSpaceOnUse\",x:\"0\",y:\"-1\",width:\"60\",height:\"43\",children:[(0,b.jsxs)(\"mask\",{id:\"error_overlay_nav_path_1_outside_1_2667_14687\",maskUnits:\"userSpaceOnUse\",x:\"0\",y:\"-1\",width:\"60\",height:\"43\",fill:\"black\",children:[(0,b.jsx)(\"rect\",{fill:\"white\",y:\"-1\",width:\"60\",height:\"43\"}),(0,b.jsx)(\"path\",{d:\"M1 0L8.0783 0C15.772 0 22.7836 4.41324 26.111 11.3501L34.8889 29.6498C38.2164 36.5868 45.228 41 52.9217 41H60H1L1 0Z\"})]}),(0,b.jsx)(\"path\",{d:\"M1 0L8.0783 0C15.772 0 22.7836 4.41324 26.111 11.3501L34.8889 29.6498C38.2164 36.5868 45.228 41 52.9217 41H60H1L1 0Z\",fill:\"white\"}),(0,b.jsx)(\"path\",{d:\"M1 0V-1H0V0L1 0ZM1 41H0V42H1V41ZM34.8889 29.6498L33.9873 30.0823L34.8889 29.6498ZM26.111 11.3501L27.0127 10.9177L26.111 11.3501ZM1 1H8.0783V-1H1V1ZM60 40H1V42H60V40ZM2 41V0L0 0L0 41H2ZM25.2094 11.7826L33.9873 30.0823L35.7906 29.2174L27.0127 10.9177L25.2094 11.7826ZM52.9217 42H60V40H52.9217V42ZM33.9873 30.0823C37.4811 37.3661 44.8433 42 52.9217 42V40C45.6127 40 38.9517 35.8074 35.7906 29.2174L33.9873 30.0823ZM8.0783 1C15.3873 1 22.0483 5.19257 25.2094 11.7826L27.0127 10.9177C23.5188 3.6339 16.1567 -1 8.0783 -1V1Z\",fill:\"black\",mask:\"url(#error_overlay_nav_path_1_outside_1_2667_14687)\"})]}),r[1]=t):t=r[1],r[2]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsxs)(\"svg\",{width:\"60\",height:\"42\",viewBox:\"0 0 60 42\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",className:\"error-overlay-notch-tail\",preserveAspectRatio:\"none\",children:[t,(0,b.jsxs)(\"g\",{mask:\"url(#error_overlay_nav_mask0_2667_14687)\",children:[(0,b.jsxs)(\"mask\",{id:\"error_overlay_nav_path_3_outside_2_2667_14687\",maskUnits:\"userSpaceOnUse\",x:\"-1\",y:\"0.0244141\",width:\"60\",height:\"43\",fill:\"black\",children:[(0,b.jsx)(\"rect\",{fill:\"white\",x:\"-1\",y:\"0.0244141\",width:\"60\",height:\"43\"}),(0,b.jsx)(\"path\",{d:\"M0 1.02441H7.0783C14.772 1.02441 21.7836 5.43765 25.111 12.3746L33.8889 30.6743C37.2164 37.6112 44.228 42.0244 51.9217 42.0244H59H0L0 1.02441Z\"})]}),(0,b.jsx)(\"path\",{d:\"M0 1.02441H7.0783C14.772 1.02441 21.7836 5.43765 25.111 12.3746L33.8889 30.6743C37.2164 37.6112 44.228 42.0244 51.9217 42.0244H59H0L0 1.02441Z\",fill:\"var(--background-color)\"}),(0,b.jsx)(\"path\",{d:\"M0 1.02441L0 0.0244141H-1V1.02441H0ZM0 42.0244H-1V43.0244H0L0 42.0244ZM33.8889 30.6743L32.9873 31.1068L33.8889 30.6743ZM25.111 12.3746L26.0127 11.9421L25.111 12.3746ZM0 2.02441H7.0783V0.0244141H0L0 2.02441ZM59 41.0244H0L0 43.0244H59V41.0244ZM1 42.0244L1 1.02441H-1L-1 42.0244H1ZM24.2094 12.8071L32.9873 31.1068L34.7906 30.2418L26.0127 11.9421L24.2094 12.8071ZM51.9217 43.0244H59V41.0244H51.9217V43.0244ZM32.9873 31.1068C36.4811 38.3905 43.8433 43.0244 51.9217 43.0244V41.0244C44.6127 41.0244 37.9517 36.8318 34.7906 30.2418L32.9873 31.1068ZM7.0783 2.02441C14.3873 2.02441 21.0483 6.21699 24.2094 12.8071L26.0127 11.9421C22.5188 4.65831 15.1567 0.0244141 7.0783 0.0244141V2.02441Z\",fill:\"var(--stroke-color)\",mask:\"url(#error_overlay_nav_path_3_outside_2_2667_14687)\"})]})]}),r[2]=n):n=r[2],n}function tH(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var tV=[\"[data-next-mark]\",\"[data-issues-open]\",\"#nextjs-dev-tools-menu\",\"[data-nextjs-error-overlay-nav]\",\"[data-info-popover]\",\"[data-nextjs-devtools-panel-overlay]\",\"[data-nextjs-devtools-panel-footer]\",\"[data-nextjs-error-overlay-footer]\"],t$=function(e){var t,n,r,o,a,i,l,s,c,u,d=e.children,f=e.className,p=e.onClose,h=e[\"aria-labelledby\"],m=e[\"aria-describedby\"],g=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\",\"className\",\"onClose\",\"aria-labelledby\",\"aria-describedby\"]),y=x.useRef(null),v=(t=x.useState(\"undefined\"!=typeof document&&document.hasFocus()?\"dialog\":void 0),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return tH(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return tH(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),w=v[0],C=v[1];return r=y.current,o=tV,a=function(e){return e.preventDefault(),null==p?void 0:p()},(s=(0,A.c)(5))[0]!==o||s[1]!==r||s[2]!==a?(i=function(){if(null!=r&&null!=a){var e=function(e){!(!r||r.contains(e.target))&&(o.some(function(t){return e.target.closest(t)})||a(e))},t=r.getRootNode();return t.addEventListener(\"mouseup\",e),t.addEventListener(\"touchend\",e,{passive:!1}),function(){t.removeEventListener(\"mouseup\",e),t.removeEventListener(\"touchend\",e)}}},l=[a,r,o],s[0]=o,s[1]=r,s[2]=a,s[3]=i,s[4]=l):(i=s[3],l=s[4]),x.useEffect(i,l),x.useEffect(function(){var e=function(){C(document.hasFocus()?\"dialog\":void 0)};if(null!=y.current)return window.addEventListener(\"focus\",e),window.addEventListener(\"blur\",e),function(){window.removeEventListener(\"focus\",e),window.removeEventListener(\"blur\",e)}},[]),x.useEffect(function(){var e,t,n=y.current,r=null==n?void 0:n.getRootNode(),o=(e=r,null!=(t=ShadowRoot)&&\"undefined\"!=typeof Symbol&&t[Symbol.hasInstance]?!!t[Symbol.hasInstance](e):e instanceof t)?null==r?void 0:r.activeElement:null;return null==n||n.focus(),function(){null==n||n.blur(),null==o||o.focus()}},[]),(0,b.jsx)(\"div\",(c=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({ref:y,tabIndex:-1,\"data-nextjs-dialog\":!0,\"data-nextjs-scrollable-content\":!0,role:w,\"aria-labelledby\":h,\"aria-describedby\":m,\"aria-modal\":\"true\",className:f,onKeyDown:function(e){\"Escape\"===e.key&&(null==p||p())}},g),u=u={children:d},Object.getOwnPropertyDescriptors?Object.defineProperties(c,Object.getOwnPropertyDescriptors(u)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(u)).forEach(function(e){Object.defineProperty(c,e,Object.getOwnPropertyDescriptor(u,e))}),c))};function tW(e){var t,n,r,o,a,i,l,s,c=(0,A.c)(12);return(c[0]!==e?(i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\",\"onClose\",\"footer\"]),r=e.children,a=e.onClose,o=e.footer,c[0]=e,c[1]=r,c[2]=o,c[3]=a,c[4]=i):(r=c[1],o=c[2],a=c[3],i=c[4]),c[5]!==r||c[6]!==a||c[7]!==i)?(l=(0,b.jsx)(t$,(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"aria-labelledby\":\"nextjs__container_errors_label\",\"aria-describedby\":\"nextjs__container_errors_desc\",className:\"error-overlay-dialog-scroll\",onClose:a},i),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),c[5]=r,c[6]=a,c[7]=i,c[8]=l):l=c[8],c[9]!==o||c[10]!==l?(s=(0,b.jsxs)(\"div\",{className:\"error-overlay-dialog-container\",children:[l,o]}),c[9]=o,c[10]=l,c[11]=s):s=c[11],s}function tY(e){var t,n,r,o=(0,A.c)(2);return o[0]!==e?(r=(0,b.jsx)(\"div\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"data-nextjs-dialog-header\":!0},e),n=n={children:e.children},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),o[0]=e,o[1]=r):r=o[1],r}function tK(e){var t,n=(0,A.c)(2),r=e.children;return n[0]!==r?(t=(0,b.jsx)(tY,{className:\"nextjs-container-errors-header\",children:r}),n[0]=r,n[1]=t):t=n[1],t}function tX(e){var t,n=(0,A.c)(2),r=e.children;return n[0]!==r?(t=(0,b.jsx)(eW,{className:\"nextjs-container-errors-body\",children:r}),n[0]=r,n[1]=t):t=n[1],t}var tG=0,tQ=function(e){var t,n,r,o,a,i,l,s=(0,A.c)(9);return(s[0]!==e?(a=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"className\",\"children\"]),o=e.className,r=e.children,s[0]=e,s[1]=r,s[2]=o,s[3]=a):(r=s[1],o=s[2],a=s[3]),s[4]===Symbol.for(\"react.memo_cache_sentinel\")?(i=[],s[4]=i):i=s[4],x.useEffect(t0,i),s[5]!==r||s[6]!==o||s[7]!==a)?(l=(0,b.jsx)(\"div\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"data-nextjs-dialog-overlay\":!0,className:o},a),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),s[5]=r,s[6]=o,s[7]=a,s[8]=l):l=s[8],l};function tJ(){setTimeout(function(){0!==tG&&0==--tG&&(void 0!==t&&(document.body.style.paddingRight=t,t=void 0),void 0!==n&&(document.body.style.overflow=n,n=void 0))})}function t0(){return setTimeout(function(){if(!(tG++>0)){var e=window.innerWidth-document.documentElement.clientWidth;e>0&&(t=document.body.style.paddingRight,document.body.style.paddingRight=\"\".concat(e,\"px\")),n=document.body.style.overflow,document.body.style.overflow=\"hidden\"}}),tJ}function t1(){var e,t,n=(e=[\"\\n  [data-nextjs-dialog-overlay] {\\n    padding: initial;\\n    top: 10vh;\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return t1=function(){return n},n}function t2(e){var t,n,r,o,a,i=(0,A.c)(6);return(i[0]!==e?(o=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\"]),r=e.children,i[0]=e,i[1]=r,i[2]=o):(r=i[1],o=i[2]),i[3]!==r||i[4]!==o)?(a=(0,b.jsx)(tQ,(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},o),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),i[3]=r,i[4]=o,i[5]=a):a=i[5],a}var t4=es(t1());function t5(e){var t,n,r,o=(0,A.c)(4),a=Math.min(e.errorCount-e.activeIdx-1,2);return o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"div\",{className:\"error-overlay-bottom-stack-layer error-overlay-bottom-stack-layer-1\",children:\"1\"}),n=(0,b.jsx)(\"div\",{className:\"error-overlay-bottom-stack-layer error-overlay-bottom-stack-layer-2\",children:\"2\"}),o[0]=t,o[1]=n):(t=o[0],n=o[1]),o[2]!==a?(r=(0,b.jsx)(\"div\",{\"aria-hidden\":!0,className:\"error-overlay-bottom-stack\",children:(0,b.jsxs)(\"div\",{className:\"error-overlay-bottom-stack-stack\",\"data-stack-count\":a,children:[t,n]})}),o[2]=a,o[3]=r):r=o[3],r}function t3(e){var t,n=(0,A.c)(2),r=e.environmentName;return n[0]!==r?(t=(0,b.jsx)(\"span\",{\"data-nextjs-environment-name-label\":!0,children:r}),n[0]=r,n[1]=t):t=n[1],t}function t6(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function t9(e){var t,n,r=null==e?void 0:e.getRootNode();return(t=r,null!=(n=ShadowRoot)&&\"undefined\"!=typeof Symbol&&n[Symbol.hasInstance]?!!n[Symbol.hasInstance](t):t instanceof n)?null==r?void 0:r.activeElement:null}function t8(e,t,n,r,o){var a,i,l=(0,A.c)(7);l[0]!==n||l[1]!==r||l[2]!==o||l[3]!==e||l[4]!==t?(a=function(){if(n){var a,i=o||(null==(a=e.current)?void 0:a.ownerDocument),l=function(n){var o,a,i=n.target;!(e.current&&e.current.contains(i))&&(null!=(o=e.current)&&o.getBoundingClientRect()&&n.clientX>=e.current.getBoundingClientRect().left-10&&n.clientX<=e.current.getBoundingClientRect().right+10&&n.clientY>=e.current.getBoundingClientRect().top-10&&n.clientY<=e.current.getBoundingClientRect().bottom+10||null!=(a=t.current)&&a.getBoundingClientRect()&&n.clientX>=t.current.getBoundingClientRect().left-10&&n.clientX<=t.current.getBoundingClientRect().right+10&&n.clientY>=t.current.getBoundingClientRect().top-10&&n.clientY<=t.current.getBoundingClientRect().bottom+10||r(\"outside\"))},s=function(e){\"Escape\"===e.key&&r(\"escape\")};return null==i||i.addEventListener(\"mousedown\",l),null==i||i.addEventListener(\"keydown\",s),function(){null==i||i.removeEventListener(\"mousedown\",l),null==i||i.removeEventListener(\"keydown\",s)}}},i=[n,r,o,e,t],l[0]=n,l[1]=r,l[2]=o,l[3]=e,l[4]=t,l[5]=a,l[6]=i):(a=l[5],i=l[6]),(0,x.useEffect)(a,i)}var t7=\"cubic-bezier(0.175, 0.885, 0.32, 1.1)\",ne=(0,x.forwardRef)(function(e,t){var n,r,o=(0,A.c)(9),a=e.stop,i=e.blur,l=e.side,s=e.style,c=e.height,u=\"\".concat(c,\"px\");o[0]!==i||o[1]!==a||o[2]!==s||o[3]!==u?(n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"--stop\":a,\"--blur\":i,\"--height\":u},s),o[0]=i,o[1]=a,o[2]=s,o[3]=u,o[4]=n):n=o[4];var d=n;return o[5]!==t||o[6]!==l||o[7]!==d?(r=(0,b.jsx)(\"div\",{ref:t,\"aria-hidden\":!0,\"data-nextjs-scroll-fader\":!0,className:\"nextjs-scroll-fader\",\"data-side\":l,style:d}),o[5]=t,o[6]=l,o[7]=d,o[8]=r):r=o[8],r});function nt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function nn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return nt(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return nt(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var nr=(0,x.forwardRef)(function(e,t){var n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v,w,C,_,k=(0,A.c)(13);k[0]!==e?(v=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\",\"measure\"]),g=e.children,y=e.measure,k[0]=e,k[1]=g,k[2]=y,k[3]=v):(g=k[1],y=k[2],v=k[3]);var E=nn((0,x.useState)(null),2),j=E[0],S=E[1],O=nn((n=j,r=y,l=(0,A.c)(7),c=(s=nn((0,x.useState)(0),2))[0],u=s[1],f=(d=nn((0,x.useState)(!0),2))[0],p=d[1],l[0]!==n||l[1]!==r?(o=function(){if(r&&n){var e,t=new ResizeObserver(function(t){var n=nn(t,1)[0].contentRect;clearTimeout(e),e=window.setTimeout(function(){p(!1)},100),u(n.height)});return t.observe(n),function(){return t.disconnect()}}},a=[r,n],l[0]=n,l[1]=r,l[2]=o,l[3]=a):(o=l[2],a=l[3]),(0,x.useEffect)(o,a),l[4]!==c||l[5]!==f?(i=[c,f],l[4]=c,l[5]=f,l[6]=i):i=l[6],i),2),B=O[0],P=O[1]?\"auto\":B;return(k[4]!==P?(w={height:P,transition:\"height 250ms var(--timing-swift)\"},k[4]=P,k[5]=w):w=k[5],k[6]!==g?(C=(0,b.jsx)(\"div\",{ref:S,children:g}),k[6]=g,k[7]=C):C=k[7],k[8]!==v||k[9]!==t||k[10]!==w||k[11]!==C)?(_=(0,b.jsx)(\"div\",(h=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},v),m=m={ref:t,style:w,children:C},Object.getOwnPropertyDescriptors?Object.defineProperties(h,Object.getOwnPropertyDescriptors(m)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(m)).forEach(function(e){Object.defineProperty(h,e,Object.getOwnPropertyDescriptor(m,e))}),h)),k[8]=v,k[9]=t,k[10]=w,k[11]=C,k[12]=_):_=k[12],_});function no(e){var t,n,r,o=(0,A.c)(6);o[0]!==e?(n=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"fixed\"]),t=e.fixed,o[0]=e,o[1]=t,o[2]=n):(t=o[1],n=o[2]);var a=!!t||void 0;return o[3]!==n||o[4]!==a?(r=(0,b.jsx)(\"div\",function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"data-nextjs-dialog-backdrop\":!0,\"data-nextjs-dialog-backdrop-fixed\":a},n)),o[3]=n,o[4]=a,o[5]=r):r=o[5],r}function na(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function ni(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function nl(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function ns(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return na(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return na(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function nc(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v,w,C,_,k,E,j,S=(0,A.c)(65),O=e.errorMessage,B=e.errorType,P=e.children,I=e.errorCode,z=e.errorCount,T=e.error,D=e.debugInfo,L=e.isBuildError,N=e.onClose,R=e.versionInfo,M=e.runtimeErrors,Z=e.activeIdx,U=e.setActiveIndex,F=e.isTurbopack,q=e.dialogResizerRef,H=e.generateErrorInfo,V=e.rendered,$=e.transitionDurationMs,W=void 0===V||V,Y=\"\".concat($,\"ms\");S[0]!==Y?(r={\"--transition-duration\":Y},S[0]=Y,S[1]=r):r=S[1];var K=r;S[2]!==W||S[3]!==K?(o={\"data-rendered\":W,style:K},S[2]=W,S[3]=K,S[4]=o):o=S[4];var X=o,G=ns(x.useState(!!$),2),Q=G[0],J=G[1],ee=x.useRef(null),et=!!I,en=x.useRef(null);t=en,n=W,(0,x.useEffect)(function(){var e=function(e){if(\"Tab\"===e.key&&null!==r){var t,n,o,a=(n=(t=r.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'))?[t[0],t[t.length-1]]:[],o=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(n,2)||function(e,t){if(e){if(\"string\"==typeof e)return t6(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t6(e,t)}}(n,o)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),i=a[0],l=a[1],s=t9(r);e.shiftKey?s===i&&(null==l||l.focus(),e.preventDefault()):s===l&&(null==i||i.focus(),e.preventDefault())}},r=null,o=setTimeout(function(){if(r=t.current,n)null==r||r.focus(),null==r||r.addEventListener(\"keydown\",e);else t9(r)});return function(){clearTimeout(o),null==r||r.removeEventListener(\"keydown\",e)}},[n]),S[5]===Symbol.for(\"react.memo_cache_sentinel\")?(a=function(e){if(ee.current){var t,n,r=(t=e.currentTarget.scrollTop/17,Math.min(Math.max(t,(n=ns([0,1],2))[0]),n[1]));ee.current.style.opacity=String(r)}},S[5]=a):a=S[5];var er=a;S[6]===Symbol.for(\"react.memo_cache_sentinel\")?(i=function(e){var t=e.propertyName,n=e.target;\"scale\"===t&&n===en.current&&J(!1)},S[6]=i):i=S[6];var eo=i;S[7]!==L?(l=(0,b.jsx)(no,{fixed:L}),S[7]=L,S[8]=l):l=S[8],S[9]!==Z||S[10]!==F||S[11]!==M||S[12]!==U||S[13]!==R?(s=(0,b.jsx)(tZ,{runtimeErrors:M,activeIdx:Z,setActiveIndex:U,versionInfo:R,isTurbopack:F}),S[9]=Z,S[10]=F,S[11]=M,S[12]=U,S[13]=R,S[14]=s):s=S[14],S[15]!==I||S[16]!==et?(c=et&&(0,b.jsx)(tS,{errorCode:I}),S[15]=I,S[16]=et,S[17]=c):c=S[17];var ea=!Q;S[18]!==B?(u=(0,b.jsx)(tz,{errorType:B}),S[18]=B,S[19]=u):u=S[19],S[20]!==T.environmentName?(d=T.environmentName&&(0,b.jsx)(t3,{environmentName:T.environmentName}),S[20]=T.environmentName,S[21]=d):d=S[21],S[22]!==u||S[23]!==d?(f=(0,b.jsxs)(\"span\",{\"data-nextjs-error-label-group\":!0,children:[u,d]}),S[22]=u,S[23]=d,S[24]=f):f=S[24],S[25]!==D||S[26]!==T||S[27]!==H?(p=(0,b.jsx)(tx,{error:T,debugInfo:D,generateErrorInfo:H}),S[25]=D,S[26]=T,S[27]=H,S[28]=p):p=S[28],S[29]!==I||S[30]!==f||S[31]!==p?(h=(0,b.jsxs)(\"div\",{className:\"nextjs__container_errors__error_title\",\"data-nextjs-error-code\":I,children:[f,p]}),S[29]=I,S[30]=f,S[31]=p,S[32]=h):h=S[32],S[33]!==O?(m=(0,b.jsx)(tI,{errorMessage:O}),S[33]=O,S[34]=m):m=S[34],S[35]!==h||S[36]!==m?(g=(0,b.jsxs)(tK,{children:[h,m]}),S[35]=h,S[36]=m,S[37]=g):g=S[37],S[38]!==P?(y=(0,b.jsx)(tX,{children:P}),S[38]=P,S[39]=y):y=S[39],S[40]!==g||S[41]!==y?(v=(0,b.jsxs)(eY,{children:[g,y]}),S[40]=g,S[41]=y,S[42]=v):v=S[42],S[43]!==q||S[44]!==ea||S[45]!==v?(w=(0,b.jsx)(nr,{ref:q,measure:ea,\"data-nextjs-dialog-sizer\":!0,children:v}),S[43]=q,S[44]=ea,S[45]=v,S[46]=w):w=S[46];var ei=null!=Z?Z:0;return S[47]!==z||S[48]!==ei?(C=(0,b.jsx)(t5,{errorCount:z,activeIdx:ei}),S[47]=z,S[48]=ei,S[49]=C):C=S[49],S[50]!==et||S[51]!==N||S[52]!==c||S[53]!==w||S[54]!==C?(_=(0,b.jsxs)(tW,{onClose:N,\"data-has-footer\":et,onScroll:er,footer:c,children:[w,C]}),S[50]=et,S[51]=N,S[52]=c,S[53]=w,S[54]=C,S[55]=_):_=S[55],S[56]===Symbol.for(\"react.memo_cache_sentinel\")?(k=(0,b.jsx)(ne,{ref:ee,side:\"top\",stop:\"50%\",blur:\"4px\",height:48}),S[56]=k):k=S[56],S[57]!==X||S[58]!==_||S[59]!==s?(E=(0,b.jsxs)(\"div\",nl(ni({\"data-nextjs-dialog-root\":!0,onTransitionEnd:eo,ref:en},X),{children:[s,_,k]})),S[57]=X,S[58]=_,S[59]=s,S[60]=E):E=S[60],S[61]!==X||S[62]!==E||S[63]!==l?(j=(0,b.jsxs)(t2,nl(ni({},X),{children:[l,E]})),S[61]=X,S[62]=E,S[63]=l,S[64]=j):j=S[64],j}var nu=\"\\n  \".concat(t4,\"\\n  \").concat(\"\\n  .error-overlay-dialog-container {\\n    display: flex;\\n    flex-direction: column;\\n    background: var(--color-background-100);\\n    background-clip: padding-box;\\n    border: var(--next-dialog-border-width) solid var(--color-gray-400);\\n    border-radius: 0 0 var(--next-dialog-radius) var(--next-dialog-radius);\\n    box-shadow: var(--shadow-menu);\\n    position: relative;\\n    overflow: hidden;\\n  }\\n\\n  .error-overlay-dialog-scroll {\\n    overflow-y: auto;\\n    height: 100%;\\n  }\\n\",\"\\n  \").concat(\"\\n  .nextjs-container-errors-header {\\n    position: relative;\\n  }\\n  .nextjs-container-errors-header > h1 {\\n    font-size: var(--size-20);\\n    line-height: var(--size-24);\\n    font-weight: bold;\\n    margin: calc(16px * 1.5) 0;\\n    color: var(--color-title-h1);\\n  }\\n  .nextjs-container-errors-header small {\\n    font-size: var(--size-14);\\n    color: var(--color-accents-1);\\n    margin-left: 16px;\\n  }\\n  .nextjs-container-errors-header small > span {\\n    font-family: var(--font-stack-monospace);\\n  }\\n  .nextjs-container-errors-header > div > small {\\n    margin: 0;\\n    margin-top: 4px;\\n  }\\n  .nextjs-container-errors-header > p > a {\\n    color: inherit;\\n    font-weight: bold;\\n  }\\n  .nextjs-container-errors-header\\n    > .nextjs-container-build-error-version-status {\\n    position: absolute;\\n    top: 16px;\\n    right: 16px;\\n  }\\n\",\"\\n  \").concat(\"\",\"\\n\\n  \").concat(\"\\n  [data-nextjs-error-overlay-nav] {\\n    --stroke-color: var(--color-gray-400);\\n    --background-color: var(--color-background-100);\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n\\n    width: 100%;\\n\\n    position: relative;\\n    z-index: 2;\\n    outline: none;\\n    translate: var(--next-dialog-border-width) var(--next-dialog-border-width);\\n    max-width: var(--next-dialog-max-width);\\n\\n    .error-overlay-notch {\\n      translate: calc(var(--next-dialog-border-width) * -1);\\n      width: auto;\\n      height: var(--next-dialog-notch-height);\\n      padding: 12px;\\n      background: var(--background-color);\\n      border: var(--next-dialog-border-width) solid var(--stroke-color);\\n      border-bottom: none;\\n      position: relative;\\n\\n      &[data-side='left'] {\\n        padding-right: 0;\\n        border-radius: var(--next-dialog-radius) 0 0 0;\\n\\n        .error-overlay-notch-tail {\\n          right: -54px;\\n        }\\n\\n        > *:not(.error-overlay-notch-tail) {\\n          margin-right: -10px;\\n        }\\n      }\\n\\n      &[data-side='right'] {\\n        padding-left: 0;\\n        border-radius: 0 var(--next-dialog-radius) 0 0;\\n\\n        .error-overlay-notch-tail {\\n          left: -54px;\\n          transform: rotateY(180deg);\\n        }\\n\\n        > *:not(.error-overlay-notch-tail) {\\n          margin-left: -12px;\\n        }\\n      }\\n\\n      .error-overlay-notch-tail {\\n        position: absolute;\\n        top: calc(var(--next-dialog-border-width) * -1);\\n        pointer-events: none;\\n        z-index: -1;\\n        height: calc(100% + var(--next-dialog-border-width));\\n      }\\n    }\\n  }\\n\\n  @media (max-width: 600px) {\\n    [data-nextjs-error-overlay-nav] {\\n      background: var(--background-color);\\n      border-radius: var(--next-dialog-radius) var(--next-dialog-radius) 0 0;\\n      border: var(--next-dialog-border-width) solid var(--stroke-color);\\n      border-bottom: none;\\n      overflow: hidden;\\n      translate: 0 var(--next-dialog-border-width);\\n      \\n      .error-overlay-notch {\\n        border-radius: 0;\\n        border: 0;\\n\\n        &[data-side=\\\"left\\\"], &[data-side=\\\"right\\\"] {\\n          border-radius: 0;\\n        }\\n\\n        .error-overlay-notch-tail {\\n          display: none;\\n        }\\n      }\\n    }\\n  }\\n\",\"\\n  \").concat(\"\\n  .nextjs__container_errors_label {\\n    padding: 2px 6px;\\n    margin: 0;\\n    border-radius: var(--rounded-md-2);\\n    background: var(--color-red-100);\\n    font-weight: 600;\\n    font-size: var(--size-12);\\n    color: var(--color-red-900);\\n    font-family: var(--font-stack-monospace);\\n    line-height: var(--size-20);\\n  }\\n\",\"\\n  \").concat(\"\\n  .nextjs__container_errors_wrapper {\\n    position: relative;\\n  }\\n\\n  .nextjs__container_errors_desc {\\n    margin: 0;\\n    margin-left: 4px;\\n    color: var(--color-red-900);\\n    font-weight: 500;\\n    font-size: var(--size-16);\\n    letter-spacing: -0.32px;\\n    line-height: var(--size-24);\\n    overflow-wrap: break-word;\\n    white-space: pre-wrap;\\n  }\\n\\n  .nextjs__container_errors_desc.truncated {\\n    max-height: 200px;\\n    overflow: hidden;\\n  }\\n\\n  .nextjs__container_errors_gradient_overlay {\\n    position: absolute;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    height: 85px;\\n    background: linear-gradient(\\n      180deg,\\n      rgba(250, 250, 250, 0) 0%,\\n      var(--color-background-100) 100%\\n    );\\n  }\\n\\n  .nextjs__container_errors_expand_button {\\n    position: absolute;\\n    bottom: 10px;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    display: flex;\\n    align-items: center;\\n    padding: 6px 8px;\\n    background: var(--color-background-100);\\n    border: 1px solid var(--color-gray-alpha-400);\\n    border-radius: 999px;\\n    box-shadow:\\n      0px 2px 2px var(--color-gray-alpha-100),\\n      0px 8px 8px -8px var(--color-gray-alpha-100);\\n    font-size: var(--size-13);\\n    cursor: pointer;\\n    color: var(--color-gray-900);\\n    font-weight: 500;\\n    transition: background-color 0.2s ease;\\n  }\\n\\n  .nextjs__container_errors_expand_button:hover {\\n    background: var(--color-gray-100);\\n  }\\n\",\"\\n  \").concat(\"\\n  .error-overlay-toolbar {\\n    display: flex;\\n    gap: 6px;\\n  }\\n\\n  .nodejs-inspector-button,\\n  .copy-error-button,\\n  .docs-link-button {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: var(--size-28);\\n    height: var(--size-28);\\n    background: var(--color-background-100);\\n    background-clip: padding-box;\\n    border: 1px solid var(--color-gray-alpha-400);\\n    box-shadow: var(--shadow-small);\\n    border-radius: var(--rounded-full);\\n\\n    svg {\\n      width: var(--size-14);\\n      height: var(--size-14);\\n    }\\n\\n    &:focus {\\n      outline: var(--focus-ring);\\n    }\\n\\n    &:not(:disabled):hover {\\n      background: var(--color-gray-alpha-100);\\n    }\\n\\n    &:not(:disabled):active {\\n      background: var(--color-gray-alpha-200);\\n    }\\n\\n    &:disabled {\\n      background-color: var(--color-gray-100);\\n      cursor: not-allowed;\\n    }\\n  }\\n\\n  .error-overlay-toolbar-button-icon {\\n    color: var(--color-gray-900);\\n  }\\n\",\"\\n\\n  [data-nextjs-error-label-group] {\\n    display: flex;\\n    align-items: center;\\n    gap: 8px;\\n  }\\n\");function nd(){var e,t,n=(e=[\"\\n  [data-nextjs-dialog-overlay] {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    /* secondary z-index, -1 than toast z-index */\\n    z-index: 2147483646;\\n\\n    display: flex;\\n    align-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n    padding: 10vh 15px 0;\\n  }\\n\\n  @media (max-height: 812px) {\\n    [data-nextjs-dialog-overlay] {\\n      padding: 15px 15px 0;\\n    }\\n  }\\n\\n  [data-nextjs-dialog-backdrop] {\\n    position: fixed;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    background-color: var(--color-backdrop);\\n    backdrop-filter: blur(10px);\\n    pointer-events: all;\\n    z-index: -1;\\n  }\\n\\n  [data-nextjs-dialog-backdrop-fixed] {\\n    cursor: not-allowed;\\n    -webkit-backdrop-filter: blur(8px);\\n    backdrop-filter: blur(8px);\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return nd=function(){return n},n}var nf=es(nd());function np(e){var t,n,r,o,a,i=(0,A.c)(9),l=e.file,s=e.location,c=null!=(t=null==s?void 0:s.line)?t:1,u=null!=(n=null==s?void 0:s.column)?n:1;i[0]!==l||i[1]!==c||i[2]!==u?(r={file:l,line1:c,column1:u},i[0]=l,i[1]=c,i[2]=u,i[3]=r):r=i[3];var d=eS(r),f=s?\":\".concat(s.line,\":\").concat(s.column):null;return i[4]===Symbol.for(\"react.memo_cache_sentinel\")?(o=(0,b.jsxs)(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 24 24\",fill:\"none\",stroke:\"currentColor\",strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\",children:[(0,b.jsx)(\"path\",{d:\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"}),(0,b.jsx)(\"polyline\",{points:\"15 3 21 3 21 9\"}),(0,b.jsx)(\"line\",{x1:\"10\",y1:\"14\",x2:\"21\",y2:\"3\"})]}),i[4]=o):o=i[4],i[5]!==l||i[6]!==d||i[7]!==f?(a=(0,b.jsxs)(\"div\",{\"data-with-open-in-editor-link\":!0,\"data-with-open-in-editor-link-import-trace\":!0,role:\"link\",onClick:d,title:\"Click to open in your editor\",children:[l,f,o]}),i[5]=l,i[6]=d,i[7]=f,i[8]=a):a=i[8],a}function nh(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var nm=function(e){var t,n,r,o,a,i,l,s,c,u,d=e.content,f=x.useMemo(function(){var e,t,n;return t=function(e){var t,n,r=e.shift();if(!r)return null;var o=(t=r.split(\":\",3),n=3,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,3)||function(e,t){if(e){if(\"string\"==typeof e)return nh(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return nh(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),a=o[0],i=o[1],l=o[2],s=Number(i),c=Number(l),u=!Number.isNaN(s)&&!Number.isNaN(c);return{fileName:u?a:r,location:u?{line1:s,column1:c}:void 0}}(e=d.split(\"\\n\")),n=function(e){if(e.some(function(e){return/ReactServerComponentsError:/.test(e)})||e.some(function(e){return/Import trace for requested module:/.test(e)})){for(var t=[];/.+\\..+/.test(e[e.length-1])&&!e[e.length-1].includes(\":\");){var n=e.pop().trim();t.unshift(n)}return t}return[]}(e),{file:t,source:e.join(\"\\n\"),importTraceFiles:n}},[d]),p=f.file,h=f.source,m=f.importTraceFiles,g=x.useMemo(function(){return eU().ansiToJson(h,{json:!0,use_classes:!0,remove_empty:!0})},[h]);console.log({file:p});var y=eS({file:null==p?void 0:p.fileName,line1:null!=(i=null==p||null==(t=p.location)?void 0:t.line1)?i:1,column1:null!=(l=null==p||null==(n=p.location)?void 0:n.column1)?l:1}),v={file:null!=(s=null==p?void 0:p.fileName)?s:null,methodName:\"\",arguments:[],line1:null!=(c=null==p||null==(r=p.location)?void 0:r.line1)?c:null,column1:null!=(u=null==p||null==(o=p.location)?void 0:o.column1)?u:null},A=null==v||null==(a=v.file)?void 0:a.split(\".\").pop();return(0,b.jsxs)(\"div\",{\"data-nextjs-codeframe\":!0,children:[(0,b.jsx)(\"div\",{className:\"code-frame-header\",children:(0,b.jsxs)(\"div\",{className:\"code-frame-link\",children:[(0,b.jsx)(\"span\",{className:\"code-frame-icon\",children:(0,b.jsx)(eT,{lang:A})}),(0,b.jsx)(\"span\",{\"data-text\":!0,children:ej(v)}),(0,b.jsx)(\"button\",{\"aria-label\":\"Open in editor\",\"data-with-open-in-editor-link-source-file\":!0,onClick:y,children:(0,b.jsx)(\"span\",{className:\"code-frame-icon\",\"data-icon\":\"right\",children:(0,b.jsx)(eI,{width:16,height:16})})})]})}),(0,b.jsx)(\"pre\",{className:\"code-frame-pre\",children:(0,b.jsxs)(\"div\",{className:\"code-frame-lines\",children:[g.map(function(e,t){return(0,b.jsx)(\"span\",{style:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({color:e.fg?\"var(--color-\".concat(e.fg,\")\"):void 0},\"bold\"===e.decoration?{fontWeight:500}:\"italic\"===e.decoration?{fontStyle:\"italic\"}:void 0),children:(0,b.jsx)(ev,{text:e.content})},\"terminal-entry-\".concat(t))}),m.map(function(e){return(0,b.jsx)(np,{isSourceFile:!1,file:e},e)})]})})]})},ng=function(e){var t=e.split(\"\\n\");return eq()(t[1]||\"\").replace(/^Error: /,\"\")},ny=function(e){var t,n,r,o,a,i,l,s,c,u,d=(0,A.c)(19);d[0]!==e?(o=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"message\"]),r=e.message,d[0]=e,d[1]=r,d[2]=o):(r=d[1],o=d[2]),d[3]!==r?(a=Error(r),d[3]=r,d[4]=a):a=d[4];var f=a;d[5]!==r?(l=ng(r)||\"Failed to compile\",d[5]=r,d[6]=l):l=d[6],i=l,d[7]!==i||d[8]!==r||d[9]!==o.versionInfo.installed?(s=function(){var e=[];if(e.push(\"## Error Type\\nBuild Error\"),i&&e.push(\"## Error Message\\n\".concat(i)),r){var t=eq()(r);e.push(\"## Build Output\\n\".concat(t))}return\"\".concat(e.join(\"\\n\\n\"),\"\\n\\nNext.js version: \").concat(o.versionInfo.installed,\" (\").concat(process.env.__NEXT_BUNDLER,\")\\n\")},d[7]=i,d[8]=r,d[9]=o.versionInfo.installed,d[10]=s):s=d[10];var p=s;return(d[11]!==r?(c=(0,b.jsx)(nm,{content:r}),d[11]=r,d[12]=c):c=d[12],d[13]!==f||d[14]!==i||d[15]!==p||d[16]!==o||d[17]!==c)?(u=(0,b.jsx)(nc,(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({errorType:\"Build Error\",errorMessage:i,onClose:nv,error:f,generateErrorInfo:p},o),n=n={children:c},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),d[13]=f,d[14]=i,d[15]=p,d[16]=o,d[17]=c,d[18]=u):u=d[18],u};function nv(){}var nb=function(e){var t,n,r,o,a,i,l,s,c,u,d,f=(0,A.c)(26),p=e.frame,h=null!=(t=p.originalStackFrame)?t:p.sourceStackFrame,m=!!p.originalCodeFrame;f[0]!==h||f[1]!==m?(n=m?{file:h.file,line1:null!=(r=h.line1)?r:1,column1:null!=(o=h.column1)?o:1}:void 0,f[0]=h,f[1]=m,f[2]=n):n=f[2];var g=eS(n);f[3]!==h?(a=ej(h),f[3]=h,f[4]=a):a=f[4];var y=a;if(!y)return null;var v=!m;return f[5]!==h.methodName?(i=(0,b.jsx)(ev,{text:h.methodName}),f[5]=h.methodName,f[6]=i):i=f[6],f[7]!==h.methodName||f[8]!==m||f[9]!==g?(l=m&&(0,b.jsx)(\"button\",{onClick:g,className:\"open-in-editor-button\",\"aria-label\":\"Open \".concat(h.methodName,\" in editor\"),children:(0,b.jsx)(eI,{width:16,height:16})}),f[7]=h.methodName,f[8]=m,f[9]=g,f[10]=l):l=f[10],f[11]!==p.error||f[12]!==p.reason?(s=p.error?(0,b.jsx)(\"button\",{className:\"source-mapping-error-button\",onClick:function(){return console.error(p.reason)},title:\"Sourcemapping failed. Click to log cause of error.\",children:(0,b.jsx)(ez,{width:16,height:16})}):null,f[11]=p.error,f[12]=p.reason,f[13]=s):s=f[13],f[14]!==i||f[15]!==l||f[16]!==s?(c=(0,b.jsxs)(\"div\",{className:\"call-stack-frame-method-name\",children:[i,l,s]}),f[14]=i,f[15]=l,f[16]=s,f[17]=c):c=f[17],f[18]!==y||f[19]!==m?(u=(0,b.jsx)(\"span\",{className:\"call-stack-frame-file-source\",\"data-has-source\":m,children:y}),f[18]=y,f[19]=m,f[20]=u):u=f[20],f[21]!==p.ignored||f[22]!==v||f[23]!==c||f[24]!==u?(d=(0,b.jsxs)(\"div\",{\"data-nextjs-call-stack-frame\":!0,\"data-nextjs-call-stack-frame-no-source\":v,\"data-nextjs-call-stack-frame-ignored\":p.ignored,children:[c,u]}),f[21]=p.ignored,f[22]=v,f[23]=c,f[24]=u,f[25]=d):d=f[25],d};function nA(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M8.70722 2.39641C8.3167 2.00588 7.68353 2.00588 7.29301 2.39641L4.46978 5.21963L3.93945 5.74996L5.00011 6.81062L5.53044 6.28029L8.00011 3.81062L10.4698 6.28029L11.0001 6.81062L12.0608 5.74996L11.5304 5.21963L8.70722 2.39641ZM5.53044 9.71963L5.00011 9.1893L3.93945 10.25L4.46978 10.7803L7.29301 13.6035C7.68353 13.994 8.3167 13.994 8.70722 13.6035L11.5304 10.7803L12.0608 10.25L11.0001 9.1893L10.4698 9.71963L8.00011 12.1893L5.53044 9.71963Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}function nx(){var e,t,n=(e=[\"\\n  [data-nextjs-call-stack-container] {\\n    position: relative;\\n    margin-top: 8px;\\n  }\\n\\n  [data-nextjs-call-stack-header] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    min-height: var(--size-28);\\n    padding: 8px 8px 12px 4px;\\n    width: 100%;\\n  }\\n\\n  [data-nextjs-call-stack-title] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    gap: 8px;\\n\\n    margin: 0;\\n\\n    color: var(--color-gray-1000);\\n    font-size: var(--size-16);\\n    font-weight: 500;\\n  }\\n\\n  [data-nextjs-call-stack-count] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: var(--size-20);\\n    height: var(--size-20);\\n    gap: 4px;\\n\\n    color: var(--color-gray-1000);\\n    text-align: center;\\n    font-size: var(--size-11);\\n    font-weight: 500;\\n    line-height: var(--size-16);\\n\\n    border-radius: var(--rounded-full);\\n    background: var(--color-gray-300);\\n  }\\n\\n  [data-nextjs-call-stack-ignored-list-toggle-button] {\\n    all: unset;\\n    display: flex;\\n    align-items: center;\\n    gap: 6px;\\n    color: var(--color-gray-900);\\n    font-size: var(--size-14);\\n    line-height: var(--size-20);\\n    border-radius: 6px;\\n    padding: 4px 6px;\\n    margin-right: -6px;\\n    transition: background 150ms ease;\\n\\n    &:hover {\\n      background: var(--color-gray-100);\\n    }\\n\\n    &:focus {\\n      outline: var(--focus-ring);\\n    }\\n\\n    svg {\\n      width: var(--size-16);\\n      height: var(--size-16);\\n    }\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return nx=function(){return n},n}function nw(e){var t,n,r,o,a,i,l=(0,A.c)(17),s=e.frames,c=e.isIgnoreListOpen,u=e.ignoredFramesTally,d=e.onToggleIgnoreList;return l[0]!==s.length?(t=(0,b.jsxs)(\"p\",{\"data-nextjs-call-stack-title\":!0,children:[\"Call Stack \",(0,b.jsx)(\"span\",{\"data-nextjs-call-stack-count\":!0,children:s.length})]}),l[0]=s.length,l[1]=t):t=l[1],l[2]!==u||l[3]!==c||l[4]!==d?(n=u>0&&(0,b.jsxs)(\"button\",{\"data-nextjs-call-stack-ignored-list-toggle-button\":c,onClick:d,children:[\"\".concat(c?\"Hide\":\"Show\",\" \").concat(u,\" ignore-listed frame(s)\"),(0,b.jsx)(nA,{})]}),l[2]=u,l[3]=c,l[4]=d,l[5]=n):n=l[5],l[6]!==t||l[7]!==n?(r=(0,b.jsxs)(\"div\",{\"data-nextjs-call-stack-header\":!0,children:[t,n]}),l[6]=t,l[7]=n,l[8]=r):r=l[8],l[9]!==s||l[10]!==c?(l[12]!==c?(a=function(e,t){return!e.ignored||c?(0,b.jsx)(nb,{frame:e},t):null},l[12]=c,l[13]=a):a=l[13],o=s.map(a),l[9]=s,l[10]=c,l[11]=o):o=l[11],l[14]!==r||l[15]!==o?(i=(0,b.jsxs)(\"div\",{\"data-nextjs-call-stack-container\":!0,children:[r,o]}),l[14]=r,l[15]=o,l[16]=i):i=l[16],i}var nC=es(nx());function n_(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function nk(e){var t,n,r=e.frames,o=e.dialogResizerRef,a=(0,x.useRef)(NaN),i=(t=(0,x.useState)(!1),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return n_(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return n_(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),l=i[0],s=i[1],c=(0,x.useMemo)(function(){return r.reduce(function(e,t){return e+ +!!t.ignored},0)},[r]);return(0,b.jsx)(nw,{frames:r,isIgnoreListOpen:l,onToggleIgnoreList:function(){var e=null==o?void 0:o.current;if(e){var t=(null==e?void 0:e.getBoundingClientRect()).height;a.current||(a.current=t),l?(e.style.height=\"\".concat(a.current,\"px\"),e.addEventListener(\"transitionend\",function t(){e.removeEventListener(\"transitionend\",t),s(!1)})):s(!0)}},ignoredFramesTally:c})}function nE(e){var t,n,r,o,a,i,l=(0,A.c)(8);l[0]!==e?(r=void 0===e?{}:e,l[0]=e,l[1]=r):r=l[1];var s=r.collapsed;return(l[2]!==s?(o=\"boolean\"==typeof s?{style:{transform:s?void 0:\"rotate(90deg)\"}}:{},l[2]=s,l[3]=o):o=l[3],l[4]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsx)(\"path\",{style:{fill:\"var(--color-font)\"},fillRule:\"evenodd\",d:\"m6.75 3.94.53.53 2.824 2.823a1 1 0 0 1 0 1.414L7.28 11.53l-.53.53L5.69 11l.53-.53L8.69 8 6.22 5.53 5.69 5l1.06-1.06Z\",clipRule:\"evenodd\"}),l[4]=a):a=l[4],l[5]!==s||l[6]!==o)?(i=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"data-nextjs-call-stack-chevron-icon\":!0,\"data-collapsed\":s,width:\"16\",height:\"16\",fill:\"none\"},o),n=n={children:a},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),l[5]=s,l[6]=o,l[7]=i):i=l[7],i}function nj(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function nS(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return nj(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return nj(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function nO(e){var t,n,r,o,a,i,l,s=(0,A.c)(15),c=e.reactOutputComponentDiff,u=nS((0,x.useState)(!0),2),d=u[0],f=u[1];s[0]!==c?(n=[],c.split(\"\\n\").forEach(function(e,t){var r,o,a=\"+\"===e[0]||\"-\"===e[0],i=\">\"===e[0],l=a||i,s=l?e[0]:\"\",c=l?e.indexOf(s):-1,u=nS(l?[e.slice(0,c),e.slice(c+1)]:[e,\"\"],2),d=u[0],f=u[1];a?n.push((0,b.jsx)(\"span\",{\"data-nextjs-container-errors-pseudo-html-line\":!0,\"data-nextjs-container-errors-pseudo-html--diff\":\"+\"===s?\"add\":\"remove\",children:(0,b.jsxs)(\"span\",{children:[d,(0,b.jsx)(\"span\",{\"data-nextjs-container-errors-pseudo-html-line-sign\":!0,children:s}),f,\"\\n\"]})},\"comp-diff\"+t)):n.push((0,b.jsxs)(\"span\",(r=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({\"data-nextjs-container-errors-pseudo-html-line\":!0},i?{\"data-nextjs-container-errors-pseudo-html--diff\":\"error\"}:void 0),o=o={children:[d,(0,b.jsx)(\"span\",{\"data-nextjs-container-errors-pseudo-html-line-sign\":!0,children:s}),f,\"\\n\"]},Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(o)).forEach(function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}),r),\"comp-diff\"+t))}),s[0]=c,s[1]=n):n=s[1],t=n;var p=!d;return s[2]!==d?(r=function(){return f(!d)},o=(0,b.jsx)(nE,{collapsed:d}),s[2]=d,s[3]=r,s[4]=o):(r=s[3],o=s[4]),s[5]!==p||s[6]!==r||s[7]!==o?(a=(0,b.jsx)(\"button\",{\"aria-expanded\":p,\"aria-label\":\"complete Component Stack\",\"data-nextjs-container-errors-pseudo-html-collapse-button\":!0,onClick:r,children:o}),s[5]=p,s[6]=r,s[7]=o,s[8]=a):a=s[8],s[9]!==t?(i=(0,b.jsx)(\"pre\",{className:\"nextjs__container_errors__component-stack\",children:(0,b.jsx)(\"code\",{children:t})}),s[9]=t,s[10]=i):i=s[10],s[11]!==d||s[12]!==a||s[13]!==i?(l=(0,b.jsxs)(\"div\",{\"data-nextjs-container-errors-pseudo-html\":!0,\"data-nextjs-container-errors-pseudo-html-collapse\":d,children:[a,i]}),s[11]=d,s[12]=a,s[13]=i,s[14]=l):l=s[14],l}var nB=Symbol.for(\"NextjsError\");function nP(e){return e[nB]||null}function nI(e,t,n,r,o,a,i){try{var l=e[a](i),s=l.value}catch(e){n(e);return}l.done?t(s):Promise.resolve(s).then(r,o)}function nz(e){return function(){var t=this,n=arguments;return new Promise(function(r,o){var a=e.apply(t,n);function i(e){nI(a,r,o,i,l,\"next\",e)}function l(e){nI(a,r,o,i,l,\"throw\",e)}i(void 0)})}}function nT(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function nD(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function nL(e,t){var n,r,o,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},i=Object.create((\"function\"==typeof Iterator?Iterator:Object).prototype);return i.next=l(0),i.throw=l(1),i.return=l(2),\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(l){return function(s){var c=[l,s];if(n)throw TypeError(\"Generator is already executing.\");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&c[0]?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[2&c[0],o.value]),c[0]){case 0:case 1:o=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,r=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===c[0]||2===c[0])){a=0;continue}if(3===c[0]&&(!o||c[1]>o[0]&&c[1]<o[3])){a.label=c[1];break}if(6===c[0]&&a.label<o[1]){a.label=o[1],o=c;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(c);break}o[2]&&a.ops.pop(),a.trys.pop();continue}c=t.call(e,a)}catch(e){c=[6,e],r=0}finally{n=o=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}}var nN=function(e){if(!e)return[];if(\"use\"in x){var t=e.frames;if(\"function\"!=typeof t)throw Error(\"Invariant: frames must be a function when the React version has React.use. This is a bug in Next.js.\");return x.use(t())}if(!Array.isArray(e.frames))throw Error(\"Invariant: frames must be an array when the React version does not have React.use. This is a bug in Next.js.\");return e.frames};function nR(e){var t,n,r,o,a,i=(0,A.c)(8),l=e.error,s=e.dialogResizerRef,c=nN(l),u=c.findIndex(nM);return t=null!=(n=c[u])?n:null,i[0]!==t?(r=t&&(0,b.jsx)(e$,{stackFrame:t.originalStackFrame,codeFrame:t.originalCodeFrame}),i[0]=t,i[1]=r):r=i[1],i[2]!==s||i[3]!==c?(o=c.length>0&&(0,b.jsx)(nk,{dialogResizerRef:s,frames:c}),i[2]=s,i[3]=c,i[4]=o):o=i[4],i[5]!==r||i[6]!==o?(a=(0,b.jsxs)(b.Fragment,{children:[r,o]}),i[5]=r,i[6]=o,i[7]=a):a=i[7],a}function nM(e){return!e.ignored&&!!e.originalCodeFrame&&!!e.originalStackFrame}var nZ=\"\\n  \".concat(\"\\n  [data-nextjs-container-errors-pseudo-html] {\\n    padding: 8px 0;\\n    margin: 8px 0;\\n    border: 1px solid var(--color-gray-400);\\n    background: var(--color-background-200);\\n    color: var(--color-syntax-constant);\\n    font-family: var(--font-stack-monospace);\\n    font-size: var(--size-12);\\n    line-height: 1.33em; /* 16px in 12px font size */\\n    border-radius: var(--rounded-md-2);\\n  }\\n  [data-nextjs-container-errors-pseudo-html-line] {\\n    display: inline-block;\\n    width: 100%;\\n    padding-left: 40px;\\n    line-height: calc(5 / 3);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='error'] {\\n    background: var(--color-amber-100);\\n    box-shadow: 2px 0 0 0 var(--color-amber-900) inset;\\n    font-weight: bold;\\n  }\\n  [data-nextjs-container-errors-pseudo-html-collapse-button] {\\n    all: unset;\\n    margin-left: 12px;\\n    &:focus {\\n      outline: none;\\n    }\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='add'] {\\n    background: var(--color-green-300);\\n  }\\n  [data-nextjs-container-errors-pseudo-html-line-sign] {\\n    margin-left: calc(24px * -1);\\n    margin-right: 24px;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='add']\\n    [data-nextjs-container-errors-pseudo-html-line-sign] {\\n    color: var(--color-green-900);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='remove'] {\\n    background: var(--color-red-300);\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='remove']\\n    [data-nextjs-container-errors-pseudo-html-line-sign] {\\n    color: var(--color-red-900);\\n    margin-left: calc(24px * -1);\\n    margin-right: 24px;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff='error']\\n    [data-nextjs-container-errors-pseudo-html-line-sign] {\\n    color: var(--color-amber-900);\\n  }\\n  \\n  [data-nextjs-container-errors-pseudo-html--hint] {\\n    display: inline-block;\\n    font-size: 0;\\n    height: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--tag-adjacent='false'] {\\n    color: var(--color-accents-1);\\n  }\\n  .nextjs__container_errors__component-stack {\\n    margin: 0;\\n  }\\n  [data-nextjs-container-errors-pseudo-html-collapse='true']\\n    .nextjs__container_errors__component-stack\\n    code {\\n    max-height: 120px;\\n    mask-image: linear-gradient(to bottom,rgba(0,0,0,0) 0%,black 10%);\\n    padding-bottom: 40px;\\n  }\\n  .nextjs__container_errors__component-stack code {\\n    display: block;\\n    width: 100%;\\n    white-space: pre-wrap;\\n    scroll-snap-type: y mandatory;\\n    overflow-y: hidden;\\n  }\\n  [data-nextjs-container-errors-pseudo-html--diff] {\\n    scroll-snap-align: center;\\n  }\\n  .error-overlay-hydration-error-diff-plus-icon {\\n    color: var(--color-green-900);\\n  }\\n  .error-overlay-hydration-error-diff-minus-icon {\\n    color: var(--color-red-900);\\n  }\\n\",\"\\n\");function nU(e){return e&&\"undefined\"!=typeof Symbol&&e.constructor===Symbol?\"symbol\":typeof e}function nF(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function nq(e){return e.startsWith(\"https://nextjs.org\")}function nH(e){var t,n=(0,A.c)(2),r=e.message;return n[0]!==r?(t=(0,b.jsx)(ev,{text:r,matcher:nq}),n[0]=r,n[1]=t):t=n[1],t}function nV(e){var t,n,r=(0,A.c)(5),o=e.error,a=\"environmentName\"in o?o.environmentName:\"\",i=a?\"[ \".concat(a,\" ] \"):\"\",l=o.message;return l.startsWith(i)&&(r[0]!==i.length||r[1]!==l?(t=l.slice(i.length),r[0]=i.length,r[1]=l,r[2]=t):t=r[2],l=t),r[3]!==l?(n=(0,b.jsx)(b.Fragment,{children:(0,b.jsx)(ev,{text:l,matcher:nq})}),r[3]=l,r[4]=n):n=r[4],n}var n$={hydrationWarning:null,notes:null,reactOutputComponentDiff:null};function nW(e){var t,n,r=e.getSquashedHydrationErrorDetails,o=e.runtimeErrors,a=e.debugInfo,i=e.onClose,l=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"getSquashedHydrationErrorDetails\",\"runtimeErrors\",\"debugInfo\",\"onClose\"]),s=(0,x.useRef)(null),c=function(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m=(0,A.c)(17),g=e.runtimeErrors,y=e.getSquashedHydrationErrorDetails,v=(a=(0,x.useState)(0),i=2,function(e){if(Array.isArray(e))return e}(a)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(a,2)||function(e,t){if(e){if(\"string\"==typeof e)return nF(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return nF(e,t)}}(a,i)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),b=v[0],w=v[1];s=0===g.length;var C=(t=null==(c=null!=(u=g[b])?u:null)?void 0:c.error,n=y,(0,x.useMemo)(function(){if(void 0===t)return n$;var e,r,o,a=n(t);if(null!==a)return{hydrationWarning:null!=(r=a.warning)?r:null,notes:null,reactOutputComponentDiff:null!=(o=a.reactOutputComponentDiff)?o:null};if(!(tg((e=t).message)||/Hydration failed because the server rendered (text|HTML) didn't match the client\\./.test(e.message)||/A tree hydrated but some attributes of the server rendered HTML didn't match the client properties./.test(e.message)))return n$;var i=function(e){var t=e.message;if(tg(t)){var n=tu(t.split(\"\\n\\n\"),2),r=n[0],o=n[1],a=(void 0===o?\"\":o).trim();return{message:\"\"===a?t.trim():r.trim(),diff:a,notes:null}}var i=tu(t.split(\"\".concat(tp)),2),l=i[0],s=i[1],c=l.trim();if(void 0!==s&&s.length>1){var u=[];s.split(\"\\n\").forEach(function(e){\"\"!==e.trim()&&(e.trim().startsWith(\"at \")||u.push(e))});var d=td(c.split(\"\\n\\n\")),f=d[0],p=d.slice(1);return{message:f,diff:u.join(\"\\n\"),notes:p.join(\"\\n\\n\")||null}}var h=td(c.split(\"\\n\\n\"));return{message:h[0],diff:null,notes:h.slice(1).join(\"\\n\\n\")}}(t),l=i.message,s=i.notes,c=i.diff;return null===l?n$:{hydrationWarning:l,notes:s,reactOutputComponentDiff:c}},[t,n]));if(s||!c)return m[0]!==b||m[1]!==s?(d={isLoading:s,activeIdx:b,setActiveIndex:w,activeError:null,errorDetails:null,errorCode:null,errorType:null,notes:null,hydrationWarning:null},m[0]=b,m[1]=s,m[2]=d):d=m[2],d;var _=c.error;m[3]!==_?(f=(void 0===(l=_)?\"undefined\":nU(l))===\"object\"&&null!==l&&\"__NEXT_ERROR_CODE\"in l&&\"string\"==typeof l.__NEXT_ERROR_CODE?l.__NEXT_ERROR_CODE:(void 0===l?\"undefined\":nU(l))===\"object\"&&null!==l&&\"digest\"in l&&\"string\"==typeof l.digest?l.digest.split(\"@\").find(function(e){return e.startsWith(\"E\")}):void 0,m[3]=_,m[4]=f):f=m[4];var k=f;m[5]!==c.type||m[6]!==_?(r=_,p=\"recoverable\"===(o=c.type)?\"Recoverable \".concat(r.name):\"console\"===o?\"Console \".concat(r.name):\"Runtime \".concat(r.name),m[5]=c.type,m[6]=_,m[7]=p):p=m[7];var E=p,j=C.notes,S=C.hydrationWarning;return m[8]!==c||m[9]!==b||m[10]!==k||m[11]!==C||m[12]!==E||m[13]!==S||m[14]!==s||m[15]!==j?(h={isLoading:s,activeIdx:b,setActiveIndex:w,activeError:c,errorDetails:C,errorCode:k,errorType:E,notes:j,hydrationWarning:S},m[8]=c,m[9]=b,m[10]=k,m[11]=C,m[12]=E,m[13]=S,m[14]=s,m[15]=j,m[16]=h):h=m[16],h}({runtimeErrors:o,getSquashedHydrationErrorDetails:r}),u=c.isLoading,d=c.errorCode,f=c.errorType,p=c.notes,h=c.hydrationWarning,m=c.activeIdx,g=c.errorDetails,y=c.activeError,v=c.setActiveIndex,w=nN(y),C=(0,x.useMemo)(function(){var e,t=w.findIndex(function(e){return!e.ignored&&!!e.originalCodeFrame&&!!e.originalStackFrame});return null!=(e=w[t])?e:null},[w]),_=(0,x.useCallback)(function(){if(!y)return\"\";var e=[];f&&e.push(\"## Error Type\\n\".concat(f));var t=y.error,n=t.message;if(\"environmentName\"in t&&t.environmentName){var r=\"[ \".concat(t.environmentName,\" ] \");n.startsWith(r)&&(n=n.slice(r.length))}if(n&&e.push(\"## Error Message\\n\".concat(n)),w.length>0){var o=w.filter(function(e){return!e.ignored});if(o.length>0){var a=o.map(function(e){if(e.originalStackFrame){var t=e.originalStackFrame,n=t.methodName,r=t.file,o=t.line1,a=t.column1;return\"    at \".concat(n,\" (\").concat(r,\":\").concat(o,\":\").concat(a,\")\")}if(e.sourceStackFrame){var i=e.sourceStackFrame,l=i.methodName,s=i.file,c=i.line1,u=i.column1;return\"    at \".concat(l,\" (\").concat(s,\":\").concat(c,\":\").concat(u,\")\")}return\"\"}).filter(Boolean);a.length>0&&e.push(\"\\n\".concat(a.join(\"\\n\")))}}if(null==C?void 0:C.originalCodeFrame){var i=eq()(eH(C.originalCodeFrame));e.push(\"## Code Frame\\n\".concat(i))}return\"\".concat(e.join(\"\\n\\n\"),\"\\n\\nNext.js version: \").concat(l.versionInfo.installed,\" (\").concat(process.env.__NEXT_BUNDLER,\")\\n\")},[y,f,C,w,l.versionInfo]);if(u)return(0,b.jsx)(tQ,{children:(0,b.jsx)(no,{})});if(!y)return null;var k=y.error,E=[\"server\",\"edge-server\"].includes(nP(k)||\"\");return(0,b.jsxs)(nc,(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({errorCode:d,errorType:f,errorMessage:h?(0,b.jsx)(nH,{message:h}):(0,b.jsx)(nV,{error:k}),onClose:E?void 0:i,debugInfo:a,error:k,runtimeErrors:o,activeIdx:m,setActiveIndex:v,dialogResizerRef:s,generateErrorInfo:_},l),n=n={children:[(0,b.jsxs)(\"div\",{className:\"error-overlay-notes-container\",children:[p?(0,b.jsx)(b.Fragment,{children:(0,b.jsx)(\"p\",{id:\"nextjs__container_errors__notes\",className:\"nextjs__container_errors__notes\",children:p})}):null,h?(0,b.jsx)(\"p\",{id:\"nextjs__container_errors__link\",className:\"nextjs__container_errors__link\",children:(0,b.jsx)(ev,{text:\"See more info here: \".concat(th)})}):null]}),g.reactOutputComponentDiff?(0,b.jsx)(nO,{reactOutputComponentDiff:g.reactOutputComponentDiff||\"\"}):null,(0,b.jsx)(x.Suspense,{fallback:(0,b.jsx)(\"div\",{\"data-nextjs-error-suspended\":!0}),children:(0,b.jsx)(nR,{error:y,dialogResizerRef:s},y.id.toString())})]},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t))}function nY(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v,x,w=(0,A.c)(19);return(w[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"pages\"}),w[0]=r):r=w[0],w[1]===Symbol.for(\"react.memo_cache_sentinel\")?(o=(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"Turbopack is an incremental bundler optimized for JavaScript and TypeScript, written in Rust, and built into Next.js. Turbopack can be used in Next.js in both the\",\" \",r,\" and\",\" \",(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"app\"}),\" directories for faster local development.\"]}),w[1]=o):o=w[1],w[2]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"To enable Turbopack, use the\",\" \",(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"--turbopack\"}),\" flag when running the Next.js development server.\"]}),w[2]=a):a=w[2],w[3]!==e)?(i=(0,b.jsxs)(\"article\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({className:\"dev-tools-info-article\"},e),n=n={children:[o,a]},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),w[3]=e,w[4]=i):i=w[4],w[5]===Symbol.for(\"react.memo_cache_sentinel\")?(l=(0,b.jsx)(e6,{actionLabel:\"Copy Next.js Turbopack Command\",successLabel:\"Next.js Turbopack Command Copied\",content:\"--turbopack\",className:\"dev-tools-info-copy-button\"}),w[5]=l):l=w[5],w[6]===Symbol.for(\"react.memo_cache_sentinel\")?(s=(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-line\",children:\"  \"}),c=(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-line\",children:\"{\"}),w[6]=s,w[7]=c):(s=w[6],c=w[7]),w[8]===Symbol.for(\"react.memo_cache_sentinel\")?(u=(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block-line\",children:[\"  \",(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-key\",children:'\"scripts\"'}),\": \",\"{\"]}),w[8]=u):u=w[8],w[9]===Symbol.for(\"react.memo_cache_sentinel\")?(d=(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-key\",children:'\"dev\"'}),w[9]=d):d=w[9],w[10]===Symbol.for(\"react.memo_cache_sentinel\")?(f=(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block-line dev-tools-info-highlight\",children:[\"    \",d,\":\",\" \",(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-value\",children:'\"next dev --turbopack\"'}),\",\"]}),w[10]=f):f=w[10],w[11]===Symbol.for(\"react.memo_cache_sentinel\")?(p=(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-key\",children:'\"build\"'}),w[11]=p):p=w[11],w[12]===Symbol.for(\"react.memo_cache_sentinel\")?(h=(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block-line\",children:[\"    \",p,\":\",\" \",(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-value\",children:'\"next build\"'}),\",\"]}),w[12]=h):h=w[12],w[13]===Symbol.for(\"react.memo_cache_sentinel\")?(m=(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-key\",children:'\"start\"'}),w[13]=m):m=w[13],w[14]===Symbol.for(\"react.memo_cache_sentinel\")?(g=(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block-line\",children:[\"    \",m,\":\",\" \",(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-value\",children:'\"next start\"'}),\",\"]}),w[14]=g):g=w[14],w[15]===Symbol.for(\"react.memo_cache_sentinel\")?(y=(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-key\",children:'\"lint\"'}),w[15]=y):y=w[15],w[16]===Symbol.for(\"react.memo_cache_sentinel\")?(v=(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-container\",children:(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block\",children:[l,(0,b.jsx)(\"pre\",{className:\"dev-tools-info-code-block-pre\",children:(0,b.jsxs)(\"code\",{children:[s,c,u,f,h,g,(0,b.jsxs)(\"div\",{className:\"dev-tools-info-code-block-line\",children:[\"    \",y,\":\",\" \",(0,b.jsx)(\"span\",{className:\"dev-tools-info-code-block-json-value\",children:'\"next lint\"'})]}),(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-line\",children:\"  }\"}),(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-line\",children:\"}\"}),(0,b.jsx)(\"div\",{className:\"dev-tools-info-code-block-line\",children:\"  \"})]})})]})}),w[16]=v):v=w[16],w[17]!==i?(x=(0,b.jsxs)(b.Fragment,{children:[i,v]}),w[17]=i,w[18]=x):x=w[18],x}function nK(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function nX(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function nG(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function nQ(e){var t,n,r,o,a,i,l=(0,A.c)(10);l[0]!==e?(t=nG(e,[\"routerType\"]),n=e.routerType,l[0]=e,l[1]=t,l[2]=n):(t=l[1],n=l[2]),l[3]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"The path\",\" \",(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:window.location.pathname}),\" \",'is marked as \"static\" since it will be prerendered during the build time.']}),l[3]=r):r=l[3];var s=\"pages\"===n?\"https://nextjs.org/docs/pages/building-your-application/data-fetching/incremental-static-regeneration\":\"https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration\";return l[4]!==s?(o=(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"With Static Rendering, routes are rendered at build time, or in the background after\",\" \",(0,b.jsx)(\"a\",{className:\"dev-tools-info-link\",href:s,target:\"_blank\",rel:\"noopener noreferrer\",children:\"data revalidation\"}),\".\"]}),l[4]=s,l[5]=o):o=l[5],l[6]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsx)(\"p\",{className:\"dev-tools-info-paragraph\",children:\"Static rendering is useful when a route has data that is not personalized to the user and can be known at build time, such as a static blog post or a product page.\"}),l[6]=a):a=l[6],l[7]!==t||l[8]!==o?(i=(0,b.jsxs)(\"article\",nX(nK({className:\"dev-tools-info-article\"},t),{children:[r,o,a]})),l[7]=t,l[8]=o,l[9]=i):i=l[9],i}function nJ(e){var t,n,r,o,a,i,l,s=(0,A.c)(11);return s[0]!==e?(t=nG(e,[\"routerType\"]),n=e.routerType,s[0]=e,s[1]=t,s[2]=n):(t=s[1],n=s[2]),s[3]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:window.location.pathname}),s[3]=r):r=s[3],s[4]===Symbol.for(\"react.memo_cache_sentinel\")?(o=(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"The path\",\" \",r,\" \",'is marked as \"dynamic\" since it will be rendered for each user at',\" \",(0,b.jsx)(\"strong\",{children:\"request time\"}),\".\"]}),a=(0,b.jsx)(\"p\",{className:\"dev-tools-info-paragraph\",children:\"Dynamic rendering is useful when a route has data that is personalized to the user or has information that can only be known at request time, such as cookies or the URL's search params.\"}),s[4]=o,s[5]=a):(o=s[4],a=s[5]),s[6]!==n?(i=\"pages\"===n?(0,b.jsxs)(\"p\",{className:\"dev-tools-info-pagraph\",children:[\"Exporting the\",\" \",(0,b.jsx)(\"a\",{className:\"dev-tools-info-link\",href:\"https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"getServerSideProps\"}),\" \",\"function will opt the route into dynamic rendering. This function will be called by the server on every request.\"]}):(0,b.jsxs)(\"p\",{className:\"dev-tools-info-paragraph\",children:[\"During rendering, if a\",\" \",(0,b.jsx)(\"a\",{className:\"dev-tools-info-link\",href:\"https://nextjs.org/docs/app/building-your-application/rendering/server-components#dynamic-apis\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Dynamic API\"}),\" \",\"or a\",\" \",(0,b.jsx)(\"a\",{className:\"dev-tools-info-link\",href:\"https://nextjs.org/docs/app/api-reference/functions/fetch\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"fetch\"}),\" \",\"option of\",\" \",(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"{ cache: 'no-store' }\"}),\" \",\"is discovered, Next.js will switch to dynamically rendering the whole route.\"]}),s[6]=n,s[7]=i):i=s[7],s[8]!==t||s[9]!==i?(l=(0,b.jsxs)(\"article\",nX(nK({className:\"dev-tools-info-article\"},t),{children:[o,a,i]})),s[8]=t,s[9]=i,s[10]=l):l=s[10],l}var n0={pages:{static:\"https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation\",dynamic:\"https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering\"},app:{static:\"https://nextjs.org/docs/app/building-your-application/rendering/server-components#static-rendering-default\",dynamic:\"https://nextjs.org/docs/app/building-your-application/rendering/server-components#dynamic-rendering\"}};function n1(e){var t,n,r,o,a=(0,A.c)(8);return a[0]!==e?(n=nG(e,[\"routerType\",\"isStaticRoute\"]),r=e.routerType,t=e.isStaticRoute,a[0]=e,a[1]=t,a[2]=n,a[3]=r):(t=a[1],n=a[2],r=a[3]),a[4]!==t||a[5]!==n||a[6]!==r?(o=t?(0,b.jsx)(nQ,nK({routerType:r},n)):(0,b.jsx)(nJ,nK({routerType:r},n)),a[4]=t,a[5]=n,a[6]=r,a[7]=o):o=a[7],o}function n2(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",fill:\"none\",children:(0,b.jsx)(\"path\",{fill:\"currentColor\",fillRule:\"evenodd\",d:\"m.191 2.063.56.498 13.5 12 .561.498.997-1.121-.56-.498-1.81-1.608 2.88-3.342v-.98l-3.204-3.72C10.645.923 6.365.686 3.594 3.08L1.748 1.44 1.188.94.19 2.063ZM14.761 8l-2.442 2.836-1.65-1.466a3.001 3.001 0 0 0-4.342-3.86l-1.6-1.422a5.253 5.253 0 0 1 7.251.682L14.76 8ZM7.526 6.576l1.942 1.727a1.499 1.499 0 0 0-1.942-1.727Zm-7.845.935 1.722-2 1.137.979L1.24 8l2.782 3.23A5.25 5.25 0 0 0 9.9 12.703l.54 1.4a6.751 6.751 0 0 1-7.555-1.892L-.318 8.49v-.98Z\",clipRule:\"evenodd\"})}),t[0]=e):e=t[0],e}function n4(){var e,t,n=(0,A.c)(2);return n[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"g\",{clipPath:\"url(#light_icon_clip_path)\",children:(0,b.jsx)(\"path\",{fill:\"currentColor\",fillRule:\"evenodd\",d:\"M8.75.75V0h-1.5v2h1.5V.75ZM3.26 4.32l-.53-.53-.354-.353-.53-.53 1.06-1.061.53.53.354.354.53.53-1.06 1.06Zm8.42-1.06.53-.53.353-.354.53-.53 1.061 1.06-.53.53-.354.354-.53.53-1.06-1.06ZM8 11.25a3.25 3.25 0 1 0 0-6.5 3.25 3.25 0 0 0 0 6.5Zm0 1.5a4.75 4.75 0 1 0 0-9.5 4.75 4.75 0 0 0 0 9.5Zm6-5.5h2v1.5h-2v-1.5Zm-13.25 0H0v1.5h2v-1.5H.75Zm1.62 5.32-.53.53 1.06 1.06.53-.53.354-.353.53-.53-1.06-1.061-.53.53-.354.354Zm10.2 1.06.53.53 1.06-1.06-.53-.53-.354-.354-.53-.53-1.06 1.06.53.53.353.354ZM8.75 14v2h-1.5v-2h1.5Z\",clipRule:\"evenodd\"})}),n[0]=e):e=n[0],n[1]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsxs)(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"20\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",children:[e,(0,b.jsx)(\"defs\",{children:(0,b.jsx)(\"clipPath\",{id:\"light_icon_clip_path\",children:(0,b.jsx)(\"path\",{fill:\"currentColor\",d:\"M0 0h16v16H0z\"})})})]}),n[1]=t):t=n[1],t}function n5(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{\"data-testid\":\"geist-icon\",height:\"16\",strokeLinejoin:\"round\",viewBox:\"0 0 16 16\",width:\"16\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M1.5 8.00005C1.5 5.53089 2.99198 3.40932 5.12349 2.48889C4.88136 3.19858 4.75 3.95936 4.75 4.7501C4.75 8.61609 7.88401 11.7501 11.75 11.7501C11.8995 11.7501 12.048 11.7454 12.1953 11.7361C11.0955 13.1164 9.40047 14.0001 7.5 14.0001C4.18629 14.0001 1.5 11.3138 1.5 8.00005ZM6.41706 0.577759C2.78784 1.1031 0 4.22536 0 8.00005C0 12.1422 3.35786 15.5001 7.5 15.5001C10.5798 15.5001 13.2244 13.6438 14.3792 10.9921L13.4588 9.9797C12.9218 10.155 12.3478 10.2501 11.75 10.2501C8.71243 10.2501 6.25 7.78767 6.25 4.7501C6.25 3.63431 6.58146 2.59823 7.15111 1.73217L6.41706 0.577759ZM13.25 1V1.75V2.75L14.25 2.75H15V4.25H14.25H13.25V5.25V6H11.75V5.25V4.25H10.75L10 4.25V2.75H10.75L11.75 2.75V1.75V1H13.25Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}function n3(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"16\",height:\"16\",strokeLinejoin:\"round\",children:(0,b.jsx)(\"path\",{fill:\"currentColor\",fillRule:\"evenodd\",d:\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v8.5a1 1 0 0 1-1 1H8.75v3h1.75V16h-5v-1.5h1.75v-3H1a1 1 0 0 1-1-1V2Zm1.5.5V10h13V2.5h-13Z\",clipRule:\"evenodd\"})}),t[0]=e):e=t[0],e}function n6(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function n9(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||n7(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function n8(e){return function(e){if(Array.isArray(e))return n6(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||n7(e)||function(){throw TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function n7(e,t){if(e){if(\"string\"==typeof e)return n6(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return n6(e,t)}}function re(){var e,t,n=(e=[\"\\n  .shortcut-recorder {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 8px;\\n    position: relative;\\n    font-family: var(--font-stack-sans);\\n\\n    .shortcut-recorder-button {\\n      display: flex;\\n      align-items: center;\\n      gap: 4px;\\n      background: transparent;\\n      border: 1px dashed var(--color-gray-500);\\n      border-radius: var(--rounded-lg);\\n      padding: 6px 8px;\\n      font-weight: 400;\\n      font-size: var(--size-14);\\n      color: var(--color-gray-1000);\\n      transition: border-color 150ms var(--timing-swift);\\n\\n      &[data-has-shortcut='true'] {\\n        border: 1px solid var(--color-gray-alpha-400);\\n\\n        &:hover {\\n          border-color: var(--color-gray-500);\\n        }\\n      }\\n\\n      &:hover {\\n        border-color: var(--color-gray-600);\\n      }\\n\\n      &::placeholder {\\n        color: var(--color-gray-900);\\n      }\\n\\n      &[data-pristine='false']::placeholder {\\n        color: transparent;\\n      }\\n\\n      &:focus-visible {\\n        outline: var(--focus-ring);\\n        outline-offset: -1px;\\n      }\\n    }\\n\\n    kbd {\\n      display: inline-flex;\\n      align-items: center;\\n      justify-content: center;\\n      font-family: var(--font-stack-sans);\\n      background: var(--color-gray-200);\\n      min-width: 20px;\\n      height: 20px;\\n      font-size: 14px;\\n      border-radius: 4px;\\n      color: var(--color-gray-1000);\\n\\n      &[data-symbol='false'] {\\n        padding: 0 4px;\\n      }\\n    }\\n\\n    .shortcut-recorder-clear-button {\\n      cursor: pointer;\\n      color: var(--color-gray-1000);\\n      width: 20px;\\n      height: 20px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: center;\\n      border-radius: 4px;\\n      transition: background 150ms var(--timing-swift);\\n\\n      &:hover {\\n        background: var(--color-gray-300);\\n      }\\n\\n      &:focus-visible {\\n        outline: var(--focus-ring);\\n      }\\n\\n      svg {\\n        width: 14px;\\n        height: 14px;\\n      }\\n    }\\n  }\\n\\n  .shortcut-recorder-keys {\\n    pointer-events: none;\\n    user-select: none;\\n    display: flex;\\n    align-items: center;\\n    gap: 2px;\\n  }\\n\\n  .shortcut-recorder-tooltip {\\n    --gap: 8px;\\n    --background: var(--color-gray-1000);\\n    background: var(--background);\\n    color: var(--color-background-100);\\n    font-size: var(--size-14);\\n    padding: 4px 8px;\\n    border-radius: 8px;\\n    position: absolute;\\n    bottom: calc(100% + var(--gap));\\n    text-align: center;\\n    opacity: 0;\\n    scale: 0.96;\\n    white-space: nowrap;\\n    user-select: none;\\n    transition:\\n      opacity 150ms var(--timing-swift),\\n      scale 150ms var(--timing-swift);\\n\\n    &[data-show='true'] {\\n      opacity: 1;\\n      scale: 1;\\n    }\\n\\n    svg {\\n      position: absolute;\\n      transform: translateX(-50%);\\n      bottom: -6px;\\n      left: 50%;\\n    }\\n\\n    .shortcut-recorder-status {\\n      display: flex;\\n      align-items: center;\\n      gap: 6px;\\n    }\\n\\n    .shortcut-recorder-status-icon {\\n      width: 7px;\\n      height: 7px;\\n      border-radius: 50%;\\n      flex-shrink: 0;\\n      background: var(--color-red-700);\\n\\n      &[data-success='true'] {\\n        background: var(--color-green-700);\\n      }\\n    }\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return re=function(){return n},n}var rt=[\"Meta\",\"Control\",\"Ctrl\",\"Alt\",\"Option\",\"Shift\"];function rn(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h=(0,A.c)(33),m=e.value,g=e.onChange,y=n9((0,x.useState)(!0),2),v=y[0],w=y[1],C=n9((0,x.useState)(!1),2),_=C[0],k=C[1];h[0]!==m?(t=null!=m?m:[],h[0]=m,h[1]=t):t=h[1];var E=n9((0,x.useState)(t),2),j=E[0],S=E[1],O=n9((0,x.useState)(!1),2),B=O[0],P=O[1],I=(0,x.useRef)(null),z=(0,x.useRef)(null),T=!!m||j.length>0;h[2]!==g||h[3]!==v||h[4]!==_?(n=function(e){if(e.target===z.current&&\"Tab\"!==e.key){I.current&&clearTimeout(I.current),_||k(!0),v&&(S([]),w(!1));var t=function(e){I.current=window.setTimeout(function(){P(!0),g(e.join(\"+\")),I.current=window.setTimeout(function(){k(!1)},1e3)},180)};e.preventDefault(),e.stopPropagation(),S(function(n){if(n.includes(e.code)||n.includes(e.key))return n;if(!rt.includes(e.key)){var r=n.findIndex(ra);if(-1!==r){var o=n8(n);return o[r]=e.code,t(o),o}var a=n8(n).concat([e.code]);return t(a),a}for(var i=n8(n),l=rt.indexOf(e.key),s=0,c=0;c<i.length;c++)if(rt.includes(i[c])){if(l<rt.indexOf(i[c])){s=c;break}s=c+1}else break;return i.splice(s,0,e.key),t(i),i})}},h[2]=g,h[3]=v,h[4]=_,h[5]=n):n=h[5];var D=n;h[6]!==g?(r=function(){var e;null==(e=z.current)||e.focus(),S([]),P(!1),setTimeout(function(){k(!0)}),g(null)},h[6]=g,h[7]=r):r=h[7];var L=r;h[8]===Symbol.for(\"react.memo_cache_sentinel\")?(o=function(){P(!1),k(!1),w(!0)},h[8]=o):o=h[8];var N=o;h[9]===Symbol.for(\"react.memo_cache_sentinel\")?(a=function(){var e;I.current&&clearTimeout(I.current),k(!0),null==(e=z.current)||e.focus()},h[9]=a):a=h[9];var R=a;h[10]!==T||h[11]!==j?(i=T?(0,b.jsx)(\"div\",{className:\"shortcut-recorder-keys\",children:j.map(ro)}):\"Record Shortcut\",h[10]=T,h[11]=j,h[12]=i):i=h[12],h[13]!==L||h[14]!==T?(l=T&&(0,b.jsx)(\"div\",{className:\"shortcut-recorder-clear-button\",role:\"button\",onClick:L,onFocus:rr,onKeyDown:function(e){(\"Enter\"===e.key||\" \"===e.key)&&(L(),e.stopPropagation())},\"aria-label\":\"Clear shortcut\",tabIndex:0,children:(0,b.jsx)(rc,{})}),h[13]=L,h[14]=T,h[15]=l):l=h[15],h[16]!==D||h[17]!==T||h[18]!==i||h[19]!==l?(s=(0,b.jsxs)(\"button\",{className:\"shortcut-recorder-button\",ref:z,onClick:R,onFocus:R,onBlur:N,onKeyDown:D,\"data-has-shortcut\":T,\"data-shortcut-recorder\":\"true\",children:[i,l]}),h[16]=D,h[17]=T,h[18]=i,h[19]=l,h[20]=s):s=h[20],h[21]!==B?(c=(0,b.jsx)(\"div\",{className:\"shortcut-recorder-status-icon\",\"data-success\":B}),h[21]=B,h[22]=c):c=h[22];var M=B?\"Shortcut set\":\"Recording\";return h[23]!==M||h[24]!==c?(u=(0,b.jsxs)(\"div\",{className:\"shortcut-recorder-status\",children:[c,M]}),h[23]=M,h[24]=c,h[25]=u):u=h[25],h[26]===Symbol.for(\"react.memo_cache_sentinel\")?(d=(0,b.jsx)(ri,{}),h[26]=d):d=h[26],h[27]!==_||h[28]!==u?(f=(0,b.jsxs)(\"div\",{className:\"shortcut-recorder-tooltip\",\"data-show\":_,children:[u,d]}),h[27]=_,h[28]=u,h[29]=f):f=h[29],h[30]!==f||h[31]!==s?(p=(0,b.jsxs)(\"div\",{className:\"shortcut-recorder\",children:[s,f]}),h[30]=f,h[31]=s,h[32]=p):p=h[32],p}function rr(e){return e.stopPropagation()}function ro(e){return(0,b.jsx)(rl,{children:e},e)}function ra(e){return!rt.includes(e)}function ri(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{fill:\"none\",height:\"6\",viewBox:\"0 0 14 6\",width:\"14\",xmlns:\"http://www.w3.org/2000/svg\",children:(0,b.jsx)(\"path\",{d:\"M13.8284 0H0.17157C0.702003 0 1.21071 0.210714 1.58578 0.585787L5.58578 4.58579C6.36683 5.36684 7.63316 5.36683 8.41421 4.58579L12.4142 0.585786C12.7893 0.210714 13.298 0 13.8284 0Z\",fill:\"var(--background)\"})}),t[0]=e):e=t[0],e}function rl(e){var t,n,r,o,a=(0,A.c)(9),i=e.children;a[0]!==i?(t=function(e){switch(e){case\"Meta\":return(0,b.jsx)(rs,{});case\"Alt\":case\"Option\":return\"⌥\";case\"Control\":case\"Ctrl\":return\"Ctrl\";case\"Shift\":return\"⇧\";case\"Enter\":return\"⏎\";case\"Escape\":case\"Esc\":return\"Esc\";case\" \":case\"Space\":case\"Spacebar\":return\"Space\";case\"ArrowUp\":return\"↑\";case\"ArrowDown\":return\"↓\";case\"ArrowLeft\":return\"←\";case\"ArrowRight\":return\"→\";case\"Tab\":return\"Tab\";case\"Backspace\":return\"⌫\";case\"Delete\":return\"⌦\";default:if(1===i.length)return i.toUpperCase();return i}},a[0]=i,a[1]=t):t=a[1];var l=t;if(a[2]!==i||a[3]!==l){var s=l(i);n=\"string\"==typeof s&&1===s.length,r=function(e){if(\"string\"!=typeof e)return e;var t={Minus:\"-\",Equal:\"=\",BracketLeft:\"[\",BracketRight:\"]\",Backslash:\"\\\\\",Semicolon:\";\",Quote:\"'\",Comma:\",\",Period:\".\",Backquote:\"`\",Space:\" \",Slash:\"/\",IntlBackslash:\"\\\\\"};return t[e]?t[e]:/^Key([A-Z])$/.test(e)?e.replace(/^Key/,\"\"):/^Digit([0-9])$/.test(e)?e.replace(/^Digit/,\"\"):/^Numpad([0-9])$/.test(e)?e.replace(/^Numpad/,\"\"):\"NumpadAdd\"===e?\"+\":\"NumpadSubtract\"===e?\"-\":\"NumpadMultiply\"===e?\"*\":\"NumpadDivide\"===e?\"/\":\"NumpadDecimal\"===e?\".\":\"NumpadEnter\"===e?\"Enter\":e}(s),a[2]=i,a[3]=l,a[4]=n,a[5]=r}else n=a[4],r=a[5];return a[6]!==n||a[7]!==r?(o=(0,b.jsx)(\"kbd\",{\"data-symbol\":n,children:r}),a[6]=n,a[7]=r,a[8]=o):o=a[8],o}function rs(){var e,t,n,r,o,a=(0,A.c)(6),i=n9((0,x.useState)(\"\\xa0\"),2),l=i[0],s=i[1];a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=rd(/^Mac/)||rd(/^iPhone/)||rd(/^iPad/)||rd(/^Mac/)&&navigator.maxTouchPoints>1,a[0]=e):e=a[0];var c=e;return a[1]===Symbol.for(\"react.memo_cache_sentinel\")?(t=function(){!0===c&&s(\"⌘\"),!1===c&&s(\"Ctrl\")},n=[c],a[1]=t,a[2]=n):(t=a[1],n=a[2]),(0,x.useEffect)(t,n),a[3]===Symbol.for(\"react.memo_cache_sentinel\")?(r={minWidth:\"1em\",display:\"inline-block\"},a[3]=r):r=a[3],a[4]!==l?(o=(0,b.jsx)(\"span\",{style:r,children:l}),a[4]=l,a[5]=o):o=a[5],o}function rc(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{height:\"16\",strokeLinejoin:\"round\",viewBox:\"0 0 16 16\",width:\"16\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M12.4697 13.5303L13 14.0607L14.0607 13L13.5303 12.4697L9.06065 7.99999L13.5303 3.53032L14.0607 2.99999L13 1.93933L12.4697 2.46966L7.99999 6.93933L3.53032 2.46966L2.99999 1.93933L1.93933 2.99999L2.46966 3.53032L6.93933 7.99999L2.46966 12.4697L1.93933 13L2.99999 14.0607L3.53032 13.5303L7.99999 9.06065L12.4697 13.5303Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}var ru=es(re());function rd(e){return\"undefined\"!=typeof window&&null!=window.navigator?e.test(window.navigator.platform):void 0}function rf(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rp(e,t,n,r,o,a,i){try{var l=e[a](i),s=l.value}catch(e){n(e);return}l.done?t(s):Promise.resolve(s).then(r,o)}var rh=__webpack_require__(\"./dist/compiled/zod/index.cjs\"),rm=rh.z.object({theme:rh.z.enum([\"light\",\"dark\",\"system\"]).optional(),disableDevIndicator:rh.z.boolean().optional(),devToolsPosition:rh.z.enum([\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"]).optional(),devToolsPanelPosition:rh.z.record(rh.z.string(),rh.z.enum([\"top-left\",\"top-right\",\"bottom-left\",\"bottom-right\"])).optional(),devToolsPanelSize:rh.z.record(rh.z.string(),rh.z.object({width:rh.z.number(),height:rh.z.number()})).optional(),scale:rh.z.number().optional(),hideShortcut:rh.z.string().nullable().optional()});function rg(e){return e&&\"undefined\"!=typeof Symbol&&e.constructor===Symbol?\"symbol\":typeof e}var ry={},rv=null;function rb(){if(0!==Object.keys(ry).length){var e=JSON.stringify(ry);ry={},fetch(\"/__nextjs_devtools_config\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:e,keepalive:!0}).catch(function(t){console.warn(\"[Next.js DevTools] Failed to save config:\",{data:e,error:t})})}}function rA(e){var t=rm.safeParse(e);if(!t.success)return void console.warn(\"[Next.js DevTools] Invalid config patch:\",t.error.message);ry=function e(t,n){if(!n||(void 0===n?\"undefined\":rg(n))!==\"object\"||Array.isArray(n)||!t||(void 0===t?\"undefined\":rg(t))!==\"object\"||Array.isArray(t))return n;var r=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},t);for(var o in n){var a=n[o],i=t[o];void 0!==a&&(a&&(void 0===a?\"undefined\":rg(a))===\"object\"&&!Array.isArray(a)&&i&&(void 0===i?\"undefined\":rg(i))===\"object\"&&!Array.isArray(i)?r[o]=e(i,a):r[o]=a)}return r}(ry,e),rv&&clearTimeout(rv),rv=setTimeout(rb,120)}function rx(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rw(){var e,t,n=(e=[\"\\n  .preferences-container {\\n    width: 100%;\\n  }\\n\\n  @media (min-width: 576px) {\\n    .preferences-container {\\n      width: 480px;\\n    }\\n  }\\n\\n  .preference-section:first-child {\\n    padding-top: 0;\\n  }\\n\\n  .preference-section {\\n    padding: 12px 0;\\n    border-bottom: 1px solid var(--color-gray-400);\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    gap: 24px;\\n  }\\n\\n  .preference-section:last-child {\\n    border-bottom: none;\\n  }\\n\\n  .preference-header {\\n    margin-bottom: 0;\\n    flex: 1;\\n  }\\n\\n  .preference-header label {\\n    font-size: var(--size-14);\\n    font-weight: 500;\\n    color: var(--color-gray-1000);\\n    margin: 0;\\n  }\\n\\n  .preference-description {\\n    color: var(--color-gray-900);\\n    font-size: var(--size-14);\\n    margin: 0;\\n  }\\n\\n  .select-button,\\n  .action-button {\\n    display: flex;\\n    align-items: center;\\n    gap: 8px;\\n    background: var(--color-background-100);\\n    border: 1px solid var(--color-gray-400);\\n    border-radius: var(--rounded-lg);\\n    font-weight: 400;\\n    font-size: var(--size-14);\\n    color: var(--color-gray-1000);\\n    padding: 6px 8px;\\n    transition: border-color 150ms var(--timing-swift);\\n\\n    &:hover {\\n      border-color: var(--color-gray-500);\\n    }\\n\\n    svg {\\n      width: 14px;\\n      height: 14px;\\n      overflow: visible;\\n    }\\n  }\\n\\n  .select-button {\\n    &:focus-within {\\n      outline: var(--focus-ring);\\n      outline-offset: -1px;\\n    }\\n\\n    select {\\n      all: unset;\\n    }\\n\\n    option {\\n      color: var(--color-gray-1000);\\n      background: var(--color-background-100);\\n    }\\n  }\\n\\n  .preference-section button:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n  }\\n\\n  :global(.icon) {\\n    width: 18px;\\n    height: 18px;\\n    color: #666;\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return rw=function(){return n},n}function rC(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v,w,C,_,k,E,j,S,B,P,I,z,T,D,L,N,R,M,Z,U,F,q,H,V,$,W,Y=(0,A.c)(65),K=e.theme,X=e.hide,G=e.hideShortcut,Q=e.setHideShortcut,J=e.scale,ee=e.setPosition,et=e.setScale,en=e.position,er=(o=(t=(0,x.useState)(!1),n=2,r=function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return rf(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rf(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}())[0],a=r[1],{restartServer:function(e){var t,n=e.invalidatePersistentCache;return(t=function(){var e,t,r,o,i,l;return function(e,t){var n,r,o,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]},i=Object.create((\"function\"==typeof Iterator?Iterator:Object).prototype);return i.next=l(0),i.throw=l(1),i.return=l(2),\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function l(l){return function(s){var c=[l,s];if(n)throw TypeError(\"Generator is already executing.\");for(;i&&(i=0,c[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&c[0]?r.return:c[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,c[1])).done)return o;switch(r=0,o&&(c=[2&c[0],o.value]),c[0]){case 0:case 1:o=c;break;case 4:return a.label++,{value:c[1],done:!1};case 5:a.label++,r=c[1],c=[0];continue;case 7:c=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===c[0]||2===c[0])){a=0;continue}if(3===c[0]&&(!o||c[1]>o[0]&&c[1]<o[3])){a.label=c[1];break}if(6===c[0]&&a.label<o[1]){a.label=o[1],o=c;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(c);break}o[2]&&a.ops.pop(),a.trys.pop();continue}c=t.call(e,a)}catch(e){c=[6,e],r=0}finally{n=o=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}}}(this,function(s){switch(s.label){case 0:a(!0),e=n?\"/__nextjs_restart_dev?invalidatePersistentCache=1\":\"/__nextjs_restart_dev\",t=!1,s.label=1;case 1:return s.trys.push([1,11,12,13]),[4,fetch(\"/__nextjs_server_status\").then(function(e){return e.json()}).then(function(e){return e.executionId}).catch(function(e){return console.log(\"[Next.js DevTools] Failed to fetch server status while restarting dev server.\",e),null})];case 2:if(!(r=s.sent()))return console.log(\"[Next.js DevTools] Failed to get the current server execution ID while restarting dev server.\"),[2];return[4,fetch(e,{method:\"POST\"})];case 3:if(!(o=s.sent()).ok)return console.log(\"[Next.js DevTools] Failed to fetch restart server endpoint. Status:\",o.status),[2];i=0,s.label=4;case 4:if(!(i<10))return[3,10];return[4,new Promise(function(e){return setTimeout(e,1e3)})];case 5:s.sent(),s.label=6;case 6:return s.trys.push([6,8,,9]),[4,fetch(\"/__nextjs_server_status\").then(function(e){return e.json()}).then(function(e){return e.executionId})];case 7:if(l=s.sent(),r!==l)return t=!0,window.location.reload(),[2];return[3,9];case 8:return s.sent(),[3,9];case 9:return i++,[3,4];case 10:return console.log(\"[Next.js DevTools] Failed to restart server. Exhausted all polling attempts.\"),[2];case 11:return console.log(\"[Next.js DevTools] Failed to restart server.\",s.sent()),[2];case 12:return t||a(!1),[7];case 13:return[2]}})},function(){var e=this,n=arguments;return new Promise(function(r,o){var a=t.apply(e,n);function i(e){rp(a,r,o,i,l,\"next\",e)}function l(e){rp(a,r,o,i,l,\"throw\",e)}i(void 0)})})()},isPending:o}),eo=er.restartServer,ea=er.isPending,ei=da().shadowRoot;Y[0]!==ei.host?(i=function(e){var t=ei.host;if(\"system\"===e.target.value){t.classList.remove(\"dark\"),t.classList.remove(\"light\"),rA({theme:\"system\"});return}\"dark\"===e.target.value?(t.classList.add(\"dark\"),t.classList.remove(\"light\"),rA({theme:\"dark\"})):(t.classList.remove(\"dark\"),t.classList.add(\"light\"),rA({theme:\"light\"}))},Y[0]=ei.host,Y[1]=i):i=Y[1];var el=i;Y[2]!==ee?(l=function(e){ee(e.target.value),rA({devToolsPosition:e.target.value})},Y[2]=ee,Y[3]=l):l=Y[3];var es=l;Y[4]!==et?(s=function(e){var t=Number(e.target.value);et(t),rA({scale:t})},Y[4]=et,Y[5]=s):s=Y[5];var ec=s;return Y[6]===Symbol.for(\"react.memo_cache_sentinel\")?(c=(0,b.jsx)(\"h2\",{className:\"dev-tools-info-section-title\",children:\"General\"}),Y[6]=c):c=Y[6],Y[7]===Symbol.for(\"react.memo_cache_sentinel\")?(u=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{htmlFor:\"theme\",children:\"Theme\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Select your theme preference.\"})]}),Y[7]=u):u=Y[7],Y[8]!==K?(d=(0,b.jsx)(rE,{theme:K}),Y[8]=K,Y[9]=d):d=Y[9],Y[10]===Symbol.for(\"react.memo_cache_sentinel\")?(p=(0,b.jsx)(\"option\",{value:\"system\",children:\"System\"}),h=(0,b.jsx)(\"option\",{value:\"light\",children:\"Light\"}),f=(0,b.jsx)(\"option\",{value:\"dark\",children:\"Dark\"}),Y[10]=f,Y[11]=p,Y[12]=h):(f=Y[10],p=Y[11],h=Y[12]),Y[13]!==el||Y[14]!==d||Y[15]!==K?(m=(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[u,(0,b.jsxs)(rk,{id:\"theme\",name:\"theme\",prefix:d,value:K,onChange:el,children:[p,h,f]})]}),Y[13]=el,Y[14]=d,Y[15]=K,Y[16]=m):m=Y[16],Y[17]===Symbol.for(\"react.memo_cache_sentinel\")?(g=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{htmlFor:\"position\",children:\"Position\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Adjust the placement of your dev tools.\"})]}),Y[17]=g):g=Y[17],Y[18]===Symbol.for(\"react.memo_cache_sentinel\")?(y=(0,b.jsx)(\"option\",{value:\"bottom-left\",children:\"Bottom Left\"}),v=(0,b.jsx)(\"option\",{value:\"bottom-right\",children:\"Bottom Right\"}),w=(0,b.jsx)(\"option\",{value:\"top-left\",children:\"Top Left\"}),C=(0,b.jsx)(\"option\",{value:\"top-right\",children:\"Top Right\"}),Y[18]=y,Y[19]=v,Y[20]=w,Y[21]=C):(y=Y[18],v=Y[19],w=Y[20],C=Y[21]),Y[22]!==es||Y[23]!==en?(_=(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[g,(0,b.jsxs)(rk,{id:\"position\",name:\"position\",value:en,onChange:es,children:[y,v,w,C]})]}),Y[22]=es,Y[23]=en,Y[24]=_):_=Y[24],Y[25]===Symbol.for(\"react.memo_cache_sentinel\")?(k=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{htmlFor:\"size\",children:\"Size\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Adjust the size of your dev tools.\"})]}),Y[25]=k):k=Y[25],Y[26]===Symbol.for(\"react.memo_cache_sentinel\")?(E=Object.entries(O).map(r_),Y[26]=E):E=Y[26],Y[27]!==ec||Y[28]!==J?(j=(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[k,(0,b.jsx)(rk,{id:\"size\",name:\"size\",value:J,onChange:ec,children:E})]}),Y[27]=ec,Y[28]=J,Y[29]=j):j=Y[29],Y[30]===Symbol.for(\"react.memo_cache_sentinel\")?(S=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{id:\"hide-dev-tools\",children:\"Hide Dev Tools for this session\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Hide Dev Tools until you restart your dev server, or 1 day.\"})]}),Y[30]=S):S=Y[30],Y[31]===Symbol.for(\"react.memo_cache_sentinel\")?(B=(0,b.jsx)(n2,{}),P=(0,b.jsx)(\"span\",{children:\"Hide\"}),Y[31]=B,Y[32]=P):(B=Y[31],P=Y[32]),Y[33]!==X?(I=(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[S,(0,b.jsx)(\"div\",{className:\"preference-control\",children:(0,b.jsxs)(\"button\",{\"aria-describedby\":\"hide-dev-tools\",name:\"hide-dev-tools\",\"data-hide-dev-tools\":!0,className:\"action-button\",onClick:X,children:[B,P]})})]}),Y[33]=X,Y[34]=I):I=Y[34],Y[35]===Symbol.for(\"react.memo_cache_sentinel\")?(z=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{id:\"hide-dev-tools\",children:\"Hide Dev Tools shortcut\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Set a custom keyboard shortcut to toggle visibility.\"})]}),Y[35]=z):z=Y[35],Y[36]!==G?(T=null!=(D=null==G?void 0:G.split(\"+\"))?D:null,Y[36]=G,Y[37]=T):T=Y[37],Y[38]!==Q||Y[39]!==T?(L=(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[z,(0,b.jsx)(\"div\",{className:\"preference-control\",children:(0,b.jsx)(rn,{value:T,onChange:Q})})]}),Y[38]=Q,Y[39]=T,Y[40]=L):L=Y[40],Y[41]===Symbol.for(\"react.memo_cache_sentinel\")?(N=(0,b.jsx)(\"label\",{children:\"Disable Dev Tools for this project\"}),Y[41]=N):N=Y[41],Y[42]===Symbol.for(\"react.memo_cache_sentinel\")?(R=(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"devIndicators: false\"}),Y[42]=R):R=Y[42],Y[43]===Symbol.for(\"react.memo_cache_sentinel\")?(M=(0,b.jsx)(\"div\",{className:\"preference-section\",children:(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[N,(0,b.jsxs)(\"p\",{className:\"preference-description\",children:[\"To disable this UI completely, set\",\" \",R,\" \",\"in your \",(0,b.jsx)(\"code\",{className:\"dev-tools-info-code\",children:\"next.config\"}),\" \",\"file.\"]})]})}),Y[43]=M):M=Y[43],Y[44]!==m||Y[45]!==_||Y[46]!==j||Y[47]!==I||Y[48]!==L?(Z=(0,b.jsxs)(\"div\",{className:\"preferences-container\",children:[m,_,j,I,L,M]}),Y[44]=m,Y[45]=_,Y[46]=j,Y[47]=I,Y[48]=L,Y[49]=Z):Z=Y[49],Y[50]===Symbol.for(\"react.memo_cache_sentinel\")?(U=(0,b.jsx)(\"h2\",{className:\"dev-tools-info-section-title\",children:\"Development Server\"}),Y[50]=U):U=Y[50],Y[51]===Symbol.for(\"react.memo_cache_sentinel\")?(F=(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{id:\"restart-dev-server\",children:\"Restart Dev Server\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Restarts the development server without needing to leave the browser.\"})]}),Y[51]=F):F=Y[51],Y[52]!==eo?(q=function(){return eo({invalidatePersistentCache:!1})},Y[52]=eo,Y[53]=q):q=Y[53],Y[54]===Symbol.for(\"react.memo_cache_sentinel\")?(H=(0,b.jsx)(\"span\",{children:\"Restart\"}),Y[54]=H):H=Y[54],Y[55]!==ea||Y[56]!==q?(V=(0,b.jsx)(\"div\",{className:\"preferences-container\",children:(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[F,(0,b.jsx)(\"div\",{className:\"preference-control\",children:(0,b.jsx)(\"button\",{\"aria-describedby\":\"restart-dev-server\",title:\"Restarts the development server without needing to leave the browser.\",name:\"restart-dev-server\",\"data-restart-dev-server\":!0,className:\"action-button\",onClick:q,disabled:ea,children:H})})]})}),Y[55]=ea,Y[56]=q,Y[57]=V):V=Y[57],Y[58]!==ea||Y[59]!==eo?($=process.env.__NEXT_BUNDLER_HAS_PERSISTENT_CACHE?(0,b.jsx)(\"div\",{className:\"preferences-container\",children:(0,b.jsxs)(\"div\",{className:\"preference-section\",children:[(0,b.jsxs)(\"div\",{className:\"preference-header\",children:[(0,b.jsx)(\"label\",{id:\"reset-bundler-cache\",children:\"Reset Bundler Cache\"}),(0,b.jsx)(\"p\",{className:\"preference-description\",children:\"Clears the bundler cache and restarts the dev server. Helpful if you are seeing stale errors or changes are not appearing.\"})]}),(0,b.jsx)(\"div\",{className:\"preference-control\",children:(0,b.jsx)(\"button\",{\"aria-describedby\":\"reset-bundler-cache\",title:\"Clears the bundler cache and restarts the dev server. Helpful if you are seeing stale errors or changes are not appearing.\",name:\"reset-bundler-cache\",\"data-reset-bundler-cache\":!0,className:\"action-button\",onClick:function(){return eo({invalidatePersistentCache:!0})},disabled:ea,children:(0,b.jsx)(\"span\",{children:\"Reset Cache\"})})})]})}):null,Y[58]=ea,Y[59]=eo,Y[60]=$):$=Y[60],Y[61]!==Z||Y[62]!==V||Y[63]!==$?(W=(0,b.jsxs)(b.Fragment,{children:[c,Z,U,V,$]}),Y[61]=Z,Y[62]=V,Y[63]=$,Y[64]=W):W=Y[64],W}function r_(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return rx(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rx(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),o=r[0],a=r[1];return(0,b.jsx)(\"option\",{value:a,children:o},o)}function rk(e){var t,n,r,o,a,i,l,s,c=(0,A.c)(11);return(c[0]!==e?(a=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\",\"prefix\"]),r=e.children,o=e.prefix,c[0]=e,c[1]=r,c[2]=o,c[3]=a):(r=c[1],o=c[2],a=c[3]),c[4]!==r||c[5]!==a)?(i=(0,b.jsx)(\"select\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},a),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),c[4]=r,c[5]=a,c[6]=i):i=c[6],c[7]===Symbol.for(\"react.memo_cache_sentinel\")?(l=(0,b.jsx)(rS,{}),c[7]=l):l=c[7],c[8]!==o||c[9]!==i?(s=(0,b.jsxs)(\"div\",{className:\"select-button\",children:[o,i,l]}),c[8]=o,c[9]=i,c[10]=s):s=c[10],s}function rE(e){var t,n,r,o=(0,A.c)(3);switch(e.theme){case\"system\":return o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(n3,{}),o[0]=t):t=o[0],t;case\"dark\":return o[1]===Symbol.for(\"react.memo_cache_sentinel\")?(n=(0,b.jsx)(n5,{}),o[1]=n):n=o[1],n;case\"light\":return o[2]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(n4,{}),o[2]=r):r=o[2],r;default:return null}}var rj=es(rw());function rS(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",\"aria-hidden\":!0,children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M14.0607 5.49999L13.5303 6.03032L8.7071 10.8535C8.31658 11.2441 7.68341 11.2441 7.29289 10.8535L2.46966 6.03032L1.93933 5.49999L2.99999 4.43933L3.53032 4.96966L7.99999 9.43933L12.4697 4.96966L13 4.43933L14.0607 5.49999Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}function rO(){var e,t,n=(e=[\"\\n  [data-nextjs-issue-feedback-button-group] {\\n    display: flex;\\n    align-items: center;\\n    border: 1px solid var(--color-gray-400);\\n    border-radius: var(--rounded-full);\\n    background: var(--color-background-100);\\n    box-shadow: var(--shadow-small);\\n  }\\n\\n  [data-nextjs-issue-feedback-button-group] button {\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  [data-nextjs-issue-feedback-button-group] button:first-child {\\n    padding: 4px 3px 4px 5px;\\n    border-radius: var(--rounded-full) 0 0 var(--rounded-full);\\n  }\\n\\n  [data-nextjs-issue-feedback-button-group] button:last-child {\\n    padding: 4px 5px 4px 3px;\\n    border-radius: 0 var(--rounded-full) var(--rounded-full) 0;\\n  }\\n\\n  [data-nextjs-issue-feedback-separator] {\\n    width: 1px;\\n    height: 100%;\\n    background: var(--color-gray-400);\\n  }\\n\"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return rO=function(){return n},n}var rB=es(rO());function rP(){var e,t,n=(e=[\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n        \",\"\\n      \"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return rP=function(){return n},n}function rI(){return(0,b.jsx)(\"style\",{children:es(rP(),\"\\n  .nextjs-data-copy-button {\\n    color: inherit;\\n\\n    svg {\\n      width: var(--size-16);\\n      height: var(--size-16);\\n    }\\n  }\\n  .nextjs-data-copy-button:disabled {\\n    background-color: var(--color-gray-100);\\n    cursor: not-allowed;\\n  }\\n  .nextjs-data-copy-button--initial:hover:not(:disabled) {\\n    cursor: pointer;\\n  }\\n  .nextjs-data-copy-button--error:not(:disabled),\\n  .nextjs-data-copy-button--error:hover:not(:disabled) {\\n    color: var(--color-ansi-red);\\n  }\\n  .nextjs-data-copy-button--success:not(:disabled) {\\n    color: var(--color-ansi-green);\\n  }\\n\",'\\n  [data-nextjs-call-stack-frame-no-source] {\\n    padding: 6px 8px;\\n    margin-bottom: 4px;\\n\\n    border-radius: var(--rounded-lg);\\n  }\\n\\n  [data-nextjs-call-stack-frame-no-source]:last-child {\\n    margin-bottom: 0;\\n  }\\n\\n  [data-nextjs-call-stack-frame-ignored=\"true\"] {\\n    opacity: 0.6;\\n  }\\n\\n  [data-nextjs-call-stack-frame] {\\n    user-select: text;\\n    display: block;\\n    box-sizing: border-box;\\n\\n    user-select: text;\\n    -webkit-user-select: text;\\n    -moz-user-select: text;\\n    -ms-user-select: text;\\n\\n    padding: 6px 8px;\\n\\n    border-radius: var(--rounded-lg);\\n  }\\n\\n  .call-stack-frame-method-name {\\n    display: flex;\\n    align-items: center;\\n    gap: 4px;\\n\\n    margin-bottom: 4px;\\n    font-family: var(--font-stack-monospace);\\n\\n    color: var(--color-gray-1000);\\n    font-size: var(--size-14);\\n    font-weight: 500;\\n    line-height: var(--size-20);\\n\\n    svg {\\n      width: var(--size-16px);\\n      height: var(--size-16px);\\n    }\\n  }\\n\\n  .open-in-editor-button, .source-mapping-error-button {\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    border-radius: var(--rounded-full);\\n    padding: 4px;\\n    color: var(--color-font);\\n\\n    svg {\\n      width: var(--size-16);\\n      height: var(--size-16);\\n    }\\n\\n    &:focus-visible {\\n      outline: var(--focus-ring);\\n      outline-offset: -2px;\\n    }\\n\\n    &:hover {\\n      background: var(--color-gray-100);\\n    }\\n  }\\n\\n  .call-stack-frame-file-source {\\n    color: var(--color-gray-900);\\n    font-size: var(--size-14);\\n    line-height: var(--size-20);\\n  }\\n',nC,\"\\n  [data-nextjs-environment-name-label] {\\n    padding: 2px 6px;\\n    margin: 0;\\n    border-radius: var(--rounded-md-2);\\n    background: var(--color-gray-100);\\n    font-weight: 600;\\n    font-size: var(--size-12);\\n    color: var(--color-gray-900);\\n    font-family: var(--font-stack-monospace);\\n    line-height: var(--size-20);\\n  }\\n\",nf,eX,nu,tO,\"\\n  .error-overlay-bottom-stack-layer {\\n    width: 100%;\\n    height: var(--stack-layer-height);\\n    position: relative;\\n    border: 1px solid var(--color-gray-400);\\n    border-radius: var(--rounded-xl);\\n    background: var(--color-background-200);\\n    transition:\\n      translate 350ms var(--timing-swift),\\n      box-shadow 350ms var(--timing-swift);\\n  }\\n\\n  .error-overlay-bottom-stack-layer-1 {\\n    width: calc(100% - var(--size-24));\\n  }\\n\\n  .error-overlay-bottom-stack-layer-2 {\\n    width: calc(100% - var(--size-48));\\n    z-index: -1;\\n  }\\n\\n  .error-overlay-bottom-stack {\\n    width: 100%;\\n    position: absolute;\\n    bottom: -1px;\\n    height: 0;\\n    overflow: visible;\\n  }\\n\\n  .error-overlay-bottom-stack-stack {\\n    --stack-layer-height: 44px;\\n    --stack-layer-height-half: calc(var(--stack-layer-height) / 2);\\n    --stack-layer-trim: 13px;\\n    --shadow: 0px 0.925px 0.925px 0px rgba(0, 0, 0, 0.02),\\n      0px 3.7px 7.4px -3.7px rgba(0, 0, 0, 0.04),\\n      0px 14.8px 22.2px -7.4px rgba(0, 0, 0, 0.06);\\n\\n    display: grid;\\n    place-items: center center;\\n    width: 100%;\\n    position: fixed;\\n    overflow: hidden;\\n    z-index: -1;\\n    max-width: var(--next-dialog-max-width);\\n\\n    .error-overlay-bottom-stack-layer {\\n      grid-area: 1 / 1;\\n      /* Hide */\\n      translate: 0 calc(var(--stack-layer-height) * -1);\\n    }\\n\\n    &[data-stack-count='1'],\\n    &[data-stack-count='2'] {\\n      .error-overlay-bottom-stack-layer-1 {\\n        translate: 0\\n          calc(var(--stack-layer-height-half) * -1 - var(--stack-layer-trim));\\n      }\\n    }\\n\\n    &[data-stack-count='2'] {\\n      .error-overlay-bottom-stack-layer-2 {\\n        translate: 0 calc(var(--stack-layer-trim) * -1 * 2);\\n      }\\n    }\\n\\n    /* Only the bottom stack should have the shadow */\\n    &[data-stack-count='1'] .error-overlay-bottom-stack-layer-1 {\\n      box-shadow: var(--shadow);\\n    }\\n\\n    &[data-stack-count='2'] {\\n      .error-overlay-bottom-stack-layer-2 {\\n        box-shadow: var(--shadow);\\n      }\\n    }\\n  }\\n\",\"\\n  .error-overlay-pagination {\\n    -webkit-font-smoothing: antialiased;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 8px;\\n    width: fit-content;\\n  }\\n\\n  .error-overlay-pagination-count {\\n    color: var(--color-gray-900);\\n    text-align: center;\\n    font-size: var(--size-14);\\n    font-weight: 500;\\n    line-height: var(--size-16);\\n    font-variant-numeric: tabular-nums;\\n  }\\n\\n  .error-overlay-pagination-button {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: var(--size-24);\\n    height: var(--size-24);\\n    background: var(--color-gray-300);\\n    flex-shrink: 0;\\n\\n    border: none;\\n    border-radius: var(--rounded-full);\\n\\n    svg {\\n      width: var(--size-16);\\n      height: var(--size-16);\\n    }\\n\\n    &:focus-visible {\\n      outline: var(--focus-ring);\\n    }\\n\\n    &:not(:disabled):active {\\n      background: var(--color-gray-500);\\n    }\\n\\n    &:disabled {\\n      opacity: 0.5;\\n      cursor: not-allowed;\\n    }\\n  }\\n\\n  .error-overlay-pagination-button-icon {\\n    color: var(--color-gray-1000);\\n  }\\n\",'\\n  [data-nextjs-codeframe] {\\n    --code-frame-padding: 12px;\\n    --code-frame-line-height: var(--size-16);\\n    background-color: var(--color-background-200);\\n    color: var(--color-gray-1000);\\n    text-overflow: ellipsis;\\n    border: 1px solid var(--color-gray-400);\\n    border-radius: 8px;\\n    font-family: var(--font-stack-monospace);\\n    font-size: var(--size-12);\\n    line-height: var(--code-frame-line-height);\\n    margin: 8px 0;\\n\\n    svg {\\n      width: var(--size-16);\\n      height: var(--size-16);\\n    }\\n  }\\n\\n  .code-frame-link,\\n  .code-frame-pre {\\n    padding: var(--code-frame-padding);\\n  }\\n\\n  .code-frame-link svg {\\n    flex-shrink: 0;\\n  }\\n\\n  .code-frame-lines {\\n    min-width: max-content;\\n  }\\n\\n  .code-frame-link [data-text] {\\n    text-align: left;\\n    margin: auto 6px;\\n  }\\n\\n  .code-frame-header {\\n    width: 100%;\\n    transition: background 100ms ease-out;\\n    border-radius: 8px 8px 0 0;\\n    border-bottom: 1px solid var(--color-gray-400);\\n  }\\n\\n  [data-with-open-in-editor-link-source-file] {\\n    padding: 4px;\\n    margin: -4px 0 -4px auto;\\n    border-radius: var(--rounded-full);\\n    margin-left: auto;\\n\\n    &:focus-visible {\\n      outline: var(--focus-ring);\\n      outline-offset: -2px;\\n    }\\n\\n    &:hover {\\n      background: var(--color-gray-100);\\n    }\\n  }\\n\\n  [data-nextjs-codeframe]::selection,\\n  [data-nextjs-codeframe] *::selection {\\n    background-color: var(--color-ansi-selection);\\n  }\\n\\n  [data-nextjs-codeframe] *:not(a) {\\n    color: inherit;\\n    background-color: transparent;\\n    font-family: var(--font-stack-monospace);\\n  }\\n\\n  [data-nextjs-codeframe-line][data-nextjs-codeframe-line--errored=\"true\"] {\\n    position: relative;\\n    isolation: isolate;\\n\\n    > span { \\n      position: relative;\\n      z-index: 1;\\n    }\\n\\n    &::after {\\n      content: \"\";\\n      width: calc(100% + var(--code-frame-padding) * 2);\\n      height: var(--code-frame-line-height);\\n      left: calc(-1 * var(--code-frame-padding));\\n      background: var(--color-red-200);\\n      box-shadow: 2px 0 0 0 var(--color-red-900) inset;\\n      position: absolute;\\n    }\\n  }\\n\\n\\n  [data-nextjs-codeframe] > * {\\n    margin: 0;\\n  }\\n\\n  .code-frame-link {\\n    display: flex;\\n    margin: 0;\\n    outline: 0;\\n  }\\n  .code-frame-link [data-icon=\\'right\\'] {\\n    margin-left: auto;\\n  }\\n\\n  [data-nextjs-codeframe] div > pre {\\n    overflow: hidden;\\n    display: inline-block;\\n  }\\n\\n  [data-nextjs-codeframe] svg {\\n    color: var(--color-gray-900);\\n  }\\n',\"\\n  [data-nextjs-terminal]::selection,\\n  [data-nextjs-terminal] *::selection {\\n    background-color: var(--color-ansi-selection);\\n  }\\n\\n  [data-nextjs-terminal] * {\\n    color: inherit;\\n    background-color: transparent;\\n    font-family: var(--font-stack-monospace);\\n  }\\n\\n  [data-nextjs-terminal] > div > p {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    cursor: pointer;\\n    margin: 0;\\n  }\\n  [data-nextjs-terminal] > div > p:hover {\\n    text-decoration: underline dotted;\\n  }\\n  [data-nextjs-terminal] div > pre {\\n    overflow: hidden;\\n    display: inline-block;\\n  }\\n\",\"\\n  [data-with-open-in-editor-link] svg {\\n    width: auto;\\n    height: var(--size-14);\\n    margin-left: 8px;\\n  }\\n  [data-with-open-in-editor-link] {\\n    cursor: pointer;\\n  }\\n  [data-with-open-in-editor-link]:hover {\\n    text-decoration: underline dotted;\\n  }\\n  [data-with-open-in-editor-link-import-trace] {\\n    margin-left: 16px;\\n  }\\n\",\"\",\"\\n  .nextjs-error-with-static {\\n    bottom: calc(16px * 4.5);\\n  }\\n  p.nextjs__container_errors__link {\\n    font-size: var(--size-14);\\n  }\\n  p.nextjs__container_errors__notes {\\n    color: var(--color-stack-notes);\\n    font-size: var(--size-14);\\n    line-height: 1.5;\\n  }\\n  .nextjs-container-errors-body > h2:not(:first-child) {\\n    margin-top: calc(16px + 8px);\\n  }\\n  .nextjs-container-errors-body > h2 {\\n    color: var(--color-title-color);\\n    margin-bottom: 8px;\\n    font-size: var(--size-20);\\n  }\\n  .nextjs-toast-errors-parent {\\n    cursor: pointer;\\n    transition: transform 0.2s ease;\\n  }\\n  .nextjs-toast-errors-parent:hover {\\n    transform: scale(1.1);\\n  }\\n  .nextjs-toast-errors {\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-start;\\n  }\\n  .nextjs-toast-errors > svg {\\n    margin-right: 8px;\\n  }\\n  .nextjs-toast-hide-button {\\n    margin-left: 24px;\\n    border: none;\\n    background: none;\\n    color: var(--color-ansi-bright-white);\\n    padding: 0;\\n    transition: opacity 0.25s ease;\\n    opacity: 0.7;\\n  }\\n  .nextjs-toast-hide-button:hover {\\n    opacity: 1;\\n  }\\n  .nextjs__container_errors__error_title {\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    margin-bottom: 14px;\\n  }\\n  .error-overlay-notes-container {\\n    margin: 8px 2px;\\n  }\\n  .error-overlay-notes-container p {\\n    white-space: pre-wrap;\\n  }\\n\",nZ,\"\\n  .nextjs-container-build-error-version-status {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 4px;\\n\\n    height: var(--size-26);\\n    padding: 6px 8px 6px 6px;\\n    background: var(--color-background-100);\\n    background-clip: padding-box;\\n    border: 1px solid var(--color-gray-alpha-400);\\n    box-shadow: var(--shadow-small);\\n    border-radius: var(--rounded-full);\\n\\n    color: var(--color-gray-900);\\n    font-size: var(--size-12);\\n    font-weight: 500;\\n    line-height: var(--size-16);\\n  }\\n\\n  a.nextjs-container-build-error-version-status {\\n    text-decoration: none;\\n    color: var(--color-gray-900);\\n\\n    &:hover {\\n      background: var(--color-gray-100);\\n    }\\n\\n    &:focus {\\n      outline: var(--focus-ring);\\n    }\\n  }\\n\\n  .version-staleness-indicator.fresh {\\n    fill: var(--color-green-800);\\n    stroke: var(--color-green-300);\\n  }\\n  .version-staleness-indicator.stale {\\n    fill: var(--color-amber-800);\\n    stroke: var(--color-amber-300);\\n  }\\n  .version-staleness-indicator.outdated {\\n    fill: var(--color-red-800);\\n    stroke: var(--color-red-300);\\n  }\\n  .version-staleness-indicator.unknown {\\n    fill: var(--color-gray-800);\\n    stroke: var(--color-gray-300);\\n  }\\n\\n  .nextjs-container-build-error-version-status > .turbopack-text {\\n    background: linear-gradient(\\n      to right,\\n      var(--color-turbopack-text-red) 0%,\\n      var(--color-turbopack-text-blue) 100%\\n    );\\n    background-clip: text;\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n  }\\n\",\"\\n  .dev-tools-info-code {\\n    background: var(--color-gray-400);\\n    color: var(--color-gray-1000);\\n    font-family: var(--font-stack-monospace);\\n    padding: 2px 4px;\\n    margin: 0;\\n    font-size: var(--size-13);\\n    white-space: break-spaces;\\n    border-radius: var(--rounded-md-2);\\n  }\\n\\n  .dev-tools-info-code-block-container {\\n    padding: 6px;\\n  }\\n\\n  .dev-tools-info-code-block {\\n    position: relative;\\n    background: var(--color-background-200);\\n    border: 1px solid var(--color-gray-alpha-400);\\n    border-radius: var(--rounded-md-2);\\n    min-width: 326px;\\n  }\\n\\n  .dev-tools-info-code-block-pre {\\n    margin: 0;\\n    font-family: var(--font-stack-monospace);\\n    font-size: var(--size-12);\\n  }\\n\\n  .dev-tools-info-copy-button {\\n    position: absolute;\\n\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    right: 8px;\\n    top: 8px;\\n    padding: 4px;\\n    height: var(--size-24);\\n    width: var(--size-24);\\n    border-radius: var(--rounded-md-2);\\n    border: 1px solid var(--color-gray-alpha-400);\\n    background: var(--color-background-100);\\n  }\\n\\n  .dev-tools-info-code-block-line {\\n    display: block;\\n    line-height: 1.5;\\n    padding: 0 16px;\\n  }\\n\\n  .dev-tools-info-code-block-line.dev-tools-info-highlight {\\n    border-left: 2px solid var(--color-blue-900);\\n    background: var(--color-blue-400);\\n  }\\n\\n  .dev-tools-info-code-block-json-key {\\n    color: var(--color-syntax-keyword);\\n  }\\n\\n  .dev-tools-info-code-block-json-value {\\n    color: var(--color-syntax-link);\\n  }\\n\",\"\",rj,'\\n  .nextjs-scroll-fader {\\n    --blur: 1px;\\n    --stop: 25%;\\n    --height: 150px;\\n    --color-bg: var(--color-background-100);\\n    position: absolute;\\n    pointer-events: none;\\n    user-select: none;\\n    width: 100%;\\n    height: var(--height);\\n    left: 0;\\n    backdrop-filter: blur(var(--blur));\\n\\n    &[data-side=\"top\"] {\\n      top: 0;\\n      background: linear-gradient(to top, transparent, var(--color-bg));\\n      mask-image: linear-gradient(to bottom, var(--color-bg) var(--stop), transparent);\\n    }\\n  }\\n',rB,ru)})}function rz(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rT(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return rz(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rz(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function rD(e,t){var n,r,o,a,i=(0,A.c)(10),l=void 0!==e&&e;i[0]!==t?(n=void 0===t?{}:t,i[0]=t,i[1]=n):n=i[1];var s=n,c=rT((0,x.useState)(l),2),u=c[0],d=c[1],f=rT((0,x.useState)(!1),2),p=f[0],h=f[1],m=s.enterDelay,g=s.exitDelay,y=void 0===m?1:m,v=void 0===g?0:g;return i[2]!==l||i[3]!==y||i[4]!==v?(r=function(){var e,t;return l?(d(!0),y<=0?h(!0):e=setTimeout(function(){h(!0)},y)):(h(!1),v<=0?d(!1):t=setTimeout(function(){d(!1)},v)),function(){clearTimeout(e),clearTimeout(t)}},o=[l,y,v],i[2]=l,i[3]=y,i[4]=v,i[5]=r,i[6]=o):(r=i[5],o=i[6]),(0,x.useEffect)(r,o),i[7]!==u||i[8]!==p?(a={mounted:u,rendered:p},i[7]=u,i[8]=p,i[9]=a):a=i[9],a}function rL(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function rN(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function rR(e){var t,n,r,o,a,i,l,s=(0,A.c)(18),c=e.state,u=e.dispatch,d=e.getSquashedHydrationErrorDetails,f=e.runtimeErrors,p=e.errorCount,h=!!process.env.TURBOPACK;s[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t={exitDelay:200},s[0]=t):t=s[0];var m=rD(c.isErrorOverlayOpen,t),g=m.mounted,y=m.rendered;s[1]!==p||s[2]!==y||s[3]!==c.versionInfo?(n={rendered:y,transitionDurationMs:200,isTurbopack:h,versionInfo:c.versionInfo,errorCount:p},s[1]=p,s[2]=y,s[3]=c.versionInfo,s[4]=n):n=s[4];var v=n;return null!==c.buildError?(s[5]!==v||s[6]!==c.buildError?(r=(0,b.jsx)(ny,rN(rL({},v),{message:c.buildError,rendered:!0})),s[5]=v,s[6]=c.buildError,s[7]=r):r=s[7],r):f.length?g?(s[10]!==u?(i=function(){u({type:F})},s[10]=u,s[11]=i):i=s[11],s[12]!==v||s[13]!==d||s[14]!==f||s[15]!==c.debugInfo||s[16]!==i?(l=(0,b.jsx)(nW,rN(rL({},v),{debugInfo:c.debugInfo,getSquashedHydrationErrorDetails:d,runtimeErrors:f,onClose:i})),s[12]=v,s[13]=d,s[14]=f,s[15]=c.debugInfo,s[16]=i,s[17]=l):l=s[17],l):(s[9]===Symbol.for(\"react.memo_cache_sentinel\")?(a=(0,b.jsx)(x.Suspense,{}),s[9]=a):a=s[9],a):(s[8]===Symbol.for(\"react.memo_cache_sentinel\")?(o=(0,b.jsx)(x.Suspense,{}),s[8]=o):o=s[8],o)}function rM(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rZ(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function rU(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){rZ(e,t,n[t])})}return e}function rF(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return rM(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rM(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var rq=function(e){var t,n,r=(0,A.c)(4);return e.state.buildError?(r[0]!==e?(t=(0,b.jsx)(rV,rU({},e)),r[0]=e,r[1]=t):t=r[1],t):(r[2]!==e?(n=(0,b.jsx)(rH,rU({},e)),r[2]=e,r[3]=n):n=r[3],n)},rH=function(e){var t,n,r,o,a,i=(0,A.c)(12),l=e.children,s=e.state,c=e.isAppDir,u=s.errors;i[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t={},i[0]=t):t=i[0];var d=rF((0,x.useState)(t),2),f=d[0],p=d[1];if(i[1]!==u||i[2]!==f){for(var h=[],m=null,g=0;g<u.length;++g){var y=u[g],v=y.id;if(v in f){h.push(f[v]);continue}m=y;break}n=[h,m],i[1]=u,i[2]=f,i[3]=n}else n=i[3];var b=rF(n,2),w=b[0],C=b[1];i[4]!==c||i[5]!==C?(r=function(){if(null!=C){var e,t,n=!0;return(e=C,t=c,nz(function(){var n,r,o;return nL(this,function(a){switch(a.label){case 0:var i,l;if(n={id:e.id,runtime:!0,error:e.error,type:e.type},!(\"use\"in x))return[3,1];return[2,nD(nT({},n),{frames:(l=(i=function(){return nz(function(){return nL(this,function(n){switch(n.label){case 0:return[4,eE(e.frames,nP(e.error),t)];case 1:return[2,n.sent()]}})})()})(),function(){return l})})];case 1:return r=[nT({},n)],o={},[4,eE(e.frames,nP(e.error),t)];case 2:return[2,nD.apply(void 0,r.concat([(o.frames=a.sent(),o)]))];case 3:return[2]}})})()).then(function(e){n&&p(function(t){var n,r;return n=rU({},t),r=null!=(r=rZ({},e.id,e))?r:{},Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(r)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}),n})}),function(){n=!1}}},o=[C,c],i[4]=c,i[5]=C,i[6]=r,i[7]=o):(r=i[6],o=i[7]),(0,x.useEffect)(r,o);var _=u.length;return i[8]!==l||i[9]!==w||i[10]!==_?(a=l({runtimeErrors:w,totalErrorCount:_}),i[8]=l,i[9]=w,i[10]=_,i[11]=a):a=i[11],a},rV=function(e){return(0,e.children)({runtimeErrors:[],totalErrorCount:1})};function r$(){var e,t,n=(0,A.c)(4),r=da(),o=r.shadowRoot,a=r.state;return n[0]!==o||n[1]!==a.scale?(e=function(){(null==o?void 0:o.host)&&o.host.style.setProperty(\"--nextjs-dev-tools-scale\",String(a.scale||1))},t=[o,a.scale],n[0]=o,n[1]=a.scale,n[2]=e,n[3]=t):(e=n[2],t=n[3]),(0,x.useLayoutEffect)(e,t),null}var rW=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/components/devtools-indicator/devtools-indicator.css\"),rY={};function rK(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rX(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rG(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return rX(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rX(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function rQ(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rJ(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M3.08889 11.8384L2.62486 12.3024L1.69678 11.3744L2.16082 10.9103L6.07178 6.99937L2.16082 3.08841L1.69678 2.62437L2.62486 1.69629L3.08889 2.16033L6.99986 6.07129L10.9108 2.16033L11.3749 1.69629L12.3029 2.62437L11.8389 3.08841L7.92793 6.99937L11.8389 10.9103L12.3029 11.3744L11.3749 12.3024L10.9108 11.8384L6.99986 7.92744L3.08889 11.8384Z\",fill:\"currentColor\"}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"12\",height:\"12\",viewBox:\"0 0 14 14\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}function r0(e){var t,n,r,o,a=(0,A.c)(3);return(a[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M3.98071 1.125L1.125 3.98071L1.125 8.01929L3.98071 10.875H8.01929L10.875 8.01929V3.98071L8.01929 1.125H3.98071ZM3.82538 0C3.62647 0 3.4357 0.0790176 3.29505 0.21967L0.21967 3.29505C0.0790176 3.4357 0 3.62647 0 3.82538V8.17462C0 8.37353 0.0790178 8.5643 0.21967 8.70495L3.29505 11.7803C3.4357 11.921 3.62647 12 3.82538 12H8.17462C8.37353 12 8.5643 11.921 8.70495 11.7803L11.7803 8.70495C11.921 8.5643 12 8.37353 12 8.17462V3.82538C12 3.62647 11.921 3.4357 11.7803 3.29505L8.70495 0.21967C8.5643 0.0790177 8.37353 0 8.17462 0H3.82538ZM6.5625 2.8125V3.375V6V6.5625H5.4375V6V3.375V2.8125H6.5625ZM6 9C6.41421 9 6.75 8.66421 6.75 8.25C6.75 7.83579 6.41421 7.5 6 7.5C5.58579 7.5 5.25 7.83579 5.25 8.25C5.25 8.66421 5.58579 9 6 9Z\",fill:\"currentColor\"}),a[0]=r):r=a[0],a[1]!==e)?(o=(0,b.jsx)(\"svg\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({width:\"12\",height:\"12\",viewBox:\"0 0 12 12\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),n=n={children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),a[1]=e,a[2]=o):o=a[2],o}rY.styleTagTransform=h(),rY.setAttributes=u(),rY.insert=s(),rY.domAPI=i(),rY.insertStyleElement=f(),o()(rW.Z,rY),rW.Z&&rW.Z.locals&&rW.Z.locals;var r1=(0,x.createContext)(null),r2=function(){return(0,x.useContext)(r1)};function r4(e){return oA+36/e.scale+9}function r5(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function r3(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function r6(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function r9(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function r8(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return r5(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return r5(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r7(){var e,t,n=(e=[\"\\n          [data-next-badge-root] {\\n            --timing: cubic-bezier(0.23, 0.88, 0.26, 0.92);\\n            --duration-long: 250ms;\\n            --color-outer-border: #171717;\\n            --color-inner-border: hsla(0, 0%, 100%, 0.14);\\n            --color-hover-alpha-subtle: hsla(0, 0%, 100%, 0.13);\\n            --color-hover-alpha-error: hsla(0, 0%, 100%, 0.2);\\n            --color-hover-alpha-error-2: hsla(0, 0%, 100%, 0.25);\\n            --mark-size: calc(var(--size) - var(--size-2) * 2);\\n\\n            --focus-color: var(--color-blue-800);\\n            --focus-ring: 2px solid var(--focus-color);\\n\\n            &:has([data-next-badge][data-error='true']) {\\n              --focus-color: #fff;\\n            }\\n          }\\n\\n          [data-disabled-icon] {\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            padding-right: 4px;\\n          }\\n\\n          [data-next-badge] {\\n            width: var(--size);\\n            height: var(--size);\\n            display: flex;\\n            align-items: center;\\n            position: relative;\\n            background: rgba(0, 0, 0, 0.8);\\n            box-shadow:\\n              0 0 0 1px var(--color-outer-border),\\n              inset 0 0 0 1px var(--color-inner-border),\\n              0px 16px 32px -8px rgba(0, 0, 0, 0.24);\\n            backdrop-filter: blur(48px);\\n            border-radius: var(--rounded-full);\\n            user-select: none;\\n            cursor: pointer;\\n            scale: 1;\\n            overflow: hidden;\\n            will-change: scale, box-shadow, width, background;\\n            transition:\\n              scale var(--duration-short) var(--timing),\\n              width var(--duration-long) var(--timing),\\n              box-shadow var(--duration-long) var(--timing),\\n              background var(--duration-short) ease;\\n\\n            &:active[data-error='false'] {\\n              scale: 0.95;\\n            }\\n\\n            &[data-animate='true']:not(:hover) {\\n              scale: 1.02;\\n            }\\n\\n            &[data-error='false']:has([data-next-mark]:focus-visible) {\\n              outline: var(--focus-ring);\\n              outline-offset: 3px;\\n            }\\n\\n            &[data-error='true'] {\\n              background: #ca2a30;\\n              --color-inner-border: #e5484d;\\n\\n              [data-next-mark] {\\n                background: var(--color-hover-alpha-error);\\n                outline-offset: 0px;\\n\\n                &:focus-visible {\\n                  outline: var(--focus-ring);\\n                  outline-offset: -1px;\\n                }\\n\\n                &:hover {\\n                  background: var(--color-hover-alpha-error-2);\\n                }\\n              }\\n            }\\n\\n            &[data-error-expanded='false'][data-error='true'] ~ [data-dot] {\\n              scale: 1;\\n            }\\n\\n            > div {\\n              display: flex;\\n            }\\n          }\\n\\n          [data-issues-collapse]:focus-visible {\\n            outline: var(--focus-ring);\\n          }\\n\\n          [data-issues]:has([data-issues-open]:focus-visible) {\\n            outline: var(--focus-ring);\\n            outline-offset: -1px;\\n          }\\n\\n          [data-dot] {\\n            content: '';\\n            width: var(--size-8);\\n            height: var(--size-8);\\n            background: #fff;\\n            box-shadow: 0 0 0 1px var(--color-outer-border);\\n            border-radius: 50%;\\n            position: absolute;\\n            top: 2px;\\n            right: 0px;\\n            scale: 0;\\n            pointer-events: none;\\n            transition: scale 200ms var(--timing);\\n            transition-delay: var(--duration-short);\\n          }\\n\\n          [data-issues] {\\n            --padding-left: 8px;\\n            display: flex;\\n            gap: 2px;\\n            align-items: center;\\n            padding-left: 8px;\\n            padding-right: 8px;\\n            height: var(--size-32);\\n            margin-right: 2px;\\n            border-radius: var(--rounded-full);\\n            transition: background var(--duration-short) ease;\\n\\n            &:has([data-issues-open]:hover) {\\n              background: var(--color-hover-alpha-error);\\n            }\\n\\n            &:has([data-issues-collapse]) {\\n              padding-right: calc(var(--padding-left) / 2);\\n            }\\n\\n            [data-cross] {\\n              translate: 0px -1px;\\n            }\\n          }\\n\\n          [data-issues-open] {\\n            font-size: var(--size-13);\\n            color: white;\\n            width: fit-content;\\n            height: 100%;\\n            display: flex;\\n            gap: 2px;\\n            align-items: center;\\n            margin: 0;\\n            line-height: var(--size-36);\\n            font-weight: 500;\\n            z-index: 2;\\n            white-space: nowrap;\\n\\n            &:focus-visible {\\n              outline: 0;\\n            }\\n          }\\n\\n          [data-issues-collapse] {\\n            width: var(--size-24);\\n            height: var(--size-24);\\n            border-radius: var(--rounded-full);\\n            transition: background var(--duration-short) ease;\\n\\n            &:hover {\\n              background: var(--color-hover-alpha-error);\\n            }\\n          }\\n\\n          [data-cross] {\\n            color: #fff;\\n            width: var(--size-12);\\n            height: var(--size-12);\\n          }\\n\\n          [data-next-mark] {\\n            width: var(--mark-size);\\n            height: var(--mark-size);\\n            margin: 0 2px;\\n            display: flex;\\n            align-items: center;\\n            border-radius: var(--rounded-full);\\n            transition: background var(--duration-long) var(--timing);\\n\\n            &:focus-visible {\\n              outline: 0;\\n            }\\n\\n            &:hover {\\n              background: var(--color-hover-alpha-subtle);\\n            }\\n\\n            svg {\\n              flex-shrink: 0;\\n              width: var(--size-40);\\n              height: var(--size-40);\\n            }\\n          }\\n\\n          [data-issues-count-animation] {\\n            display: grid;\\n            place-items: center center;\\n            font-variant-numeric: tabular-nums;\\n\\n            &[data-animate='false'] {\\n              [data-issues-count-exit],\\n              [data-issues-count-enter] {\\n                animation-duration: 0ms;\\n              }\\n            }\\n\\n            > * {\\n              grid-area: 1 / 1;\\n            }\\n\\n            [data-issues-count-exit] {\\n              animation: fadeOut 300ms var(--timing) forwards;\\n            }\\n\\n            [data-issues-count-enter] {\\n              animation: fadeIn 300ms var(--timing) forwards;\\n            }\\n          }\\n\\n          [data-issues-count-plural] {\\n            display: inline-block;\\n            &[data-animate='true'] {\\n              animation: fadeIn 300ms var(--timing) forwards;\\n            }\\n          }\\n\\n          .path0 {\\n            animation: draw0 1.5s ease-in-out infinite;\\n          }\\n\\n          .path1 {\\n            animation: draw1 1.5s ease-out infinite;\\n            animation-delay: 0.3s;\\n          }\\n\\n          .paused {\\n            stroke-dashoffset: 0;\\n          }\\n\\n          @keyframes fadeIn {\\n            0% {\\n              opacity: 0;\\n              filter: blur(2px);\\n              transform: translateY(8px);\\n            }\\n            100% {\\n              opacity: 1;\\n              filter: blur(0px);\\n              transform: translateY(0);\\n            }\\n          }\\n\\n          @keyframes fadeOut {\\n            0% {\\n              opacity: 1;\\n              filter: blur(0px);\\n              transform: translateY(0);\\n            }\\n            100% {\\n              opacity: 0;\\n              transform: translateY(-12px);\\n              filter: blur(2px);\\n            }\\n          }\\n\\n          @keyframes draw0 {\\n            0%,\\n            25% {\\n              stroke-dashoffset: -29.6;\\n            }\\n            25%,\\n            50% {\\n              stroke-dashoffset: 0;\\n            }\\n            50%,\\n            75% {\\n              stroke-dashoffset: 0;\\n            }\\n            75%,\\n            100% {\\n              stroke-dashoffset: 29.6;\\n            }\\n          }\\n\\n          @keyframes draw1 {\\n            0%,\\n            20% {\\n              stroke-dashoffset: -11.6;\\n            }\\n            20%,\\n            50% {\\n              stroke-dashoffset: 0;\\n            }\\n            50%,\\n            75% {\\n              stroke-dashoffset: 0;\\n            }\\n            75%,\\n            100% {\\n              stroke-dashoffset: 11.6;\\n            }\\n          }\\n\\n          @media (prefers-reduced-motion) {\\n            [data-issues-count-exit],\\n            [data-issues-count-enter],\\n            [data-issues-count-plural] {\\n              animation-duration: 0ms !important;\\n            }\\n          }\\n        \"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return r7=function(){return n},n}function oe(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g,y,v,w,C,_,k,E,j,S,O,B,P,I,z,T,D,L,N,R,M,Z,q,H,V,$,W,Y=(0,A.c)(40);Y[0]!==e?(D=r9(e,[\"onTriggerClick\"]),L=e.onTriggerClick,Y[0]=e,Y[1]=D,Y[2]=L):(D=Y[1],L=Y[2]);var K=da(),X=K.state,G=K.dispatch,Q=u4().totalErrorCount,J=36/X.scale,ee=r2(),et=ee.panel,en=ee.triggerRef,er=ee.setPanel,eo=\"panel-selector\"===et,ea=Q>0,ei=r8((0,x.useState)(ea),2),el=ei[0],ec=ei[1],eu=r8((0,x.useState)(ea),2),ed=eu[0],ef=eu[1];ed!==ea&&(ef(ea),ec(ea));var ep=r8((0,x.useState)(!1),2),eh=ep[0],em=ep[1],eg=(t=Q,n=150,a=(0,A.c)(4),i=n,l=(0,x.useRef)(null),d=(s=(0,x.useState)(!1),c=2,u=function(e){if(Array.isArray(e))return e}(s)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(s,2)||function(e,t){if(e){if(\"string\"==typeof e)return rK(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rK(e,t)}}(s,c)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}())[0],f=u[1],a[0]!==i||a[1]!==t?(r=function(){if(t>0){var e=l.current?Date.now()-l.current:-1;if(l.current=Date.now(),!(e<=i)){f(!0);var n=window.setTimeout(function(){f(!1)},i);return function(){clearTimeout(n)}}}},o=[t,i],a[0]=i,a[1]=t,a[2]=r,a[3]=o):(r=a[2],o=a[3]),(0,x.useEffect)(r,o),d),ey=(0,x.useRef)(null),ev=(p=ey,g=(0,A.c)(4),v=(y=rG((0,x.useState)(0),2))[0],w=y[1],g[0]!==p.current?(h=function(){var e=p.current;if(e){var t=new ResizeObserver(function(e){w(rG(e,1)[0].contentRect.width)});return t.observe(e),function(){return t.disconnect()}}},g[0]=p.current,g[1]=h):h=g[1],g[2]!==p?(m=[p],g[2]=p,g[3]=m):m=g[3],(0,x.useEffect)(h,m),v),eb=(C=X.buildingIndicator||X.renderingIndicator,E=(0,A.c)(4),j=750,P=(S=(0,x.useState)(!1),O=2,B=function(e){if(Array.isArray(e))return e}(S)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(S,2)||function(e,t){if(e){if(\"string\"==typeof e)return rQ(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return rQ(e,t)}}(S,O)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}())[0],I=B[1],z=(0,x.useRef)(null),T=(0,x.useRef)(null),E[0]!==j||E[1]!==C?(_=function(){if(T.current&&(clearTimeout(T.current),T.current=null),C)null===z.current&&(z.current=Date.now()),I(!0);else if(null===z.current)I(!1);else{var e=Date.now()-z.current,t=j*Math.ceil(e/j)-e;t>0?T.current=setTimeout(function(){I(!1),z.current=null},t):(I(!1),z.current=null)}return function(){T.current&&clearTimeout(T.current)}},k=[C,j],E[0]=j,E[1]=C,E[2]=_,E[3]=k):(_=E[2],k=E[3]),(0,x.useEffect)(_,k),P),eA=el||X.disableDevIndicator,ex=0===ev?\"auto\":ev,ew=\"\".concat(J,\"px\"),eC=X.disableDevIndicator&&(!ea||eh)?\"none\":\"block\";Y[3]!==ew||Y[4]!==eC?(N={\"--size\":ew,\"--duration-short\":\"\".concat(150,\"ms\"),display:eC},Y[3]=ew,Y[4]=eC,Y[5]=N):N=Y[5];var e_=N;return Y[6]===Symbol.for(\"react.memo_cache_sentinel\")?(R=(0,b.jsx)(\"style\",{children:es(r7())}),Y[6]=R):R=Y[6],Y[7]!==ex?(M={width:ex},Y[7]=ex,Y[8]=M):M=Y[8],Y[9]!==D||Y[10]!==eb||Y[11]!==eo||Y[12]!==L||Y[13]!==X.buildingIndicator||Y[14]!==X.disableDevIndicator||Y[15]!==en?(Z=!X.disableDevIndicator&&(0,b.jsx)(\"button\",r6(r3({id:\"next-logo\",ref:en,\"data-next-mark\":!0,\"data-next-mark-loading\":eb,onClick:L,disabled:X.disableDevIndicator,\"aria-haspopup\":\"menu\",\"aria-expanded\":eo,\"aria-controls\":\"nextjs-dev-tools-menu\",\"aria-label\":\"\".concat(eo?\"Close\":\"Open\",\" Next.js Dev Tools\"),\"data-nextjs-dev-tools-button\":!0},D),{children:(0,b.jsx)(on,{isLoading:eb,isDevBuilding:X.buildingIndicator})})),Y[9]=D,Y[10]=eb,Y[11]=eo,Y[12]=L,Y[13]=X.buildingIndicator,Y[14]=X.disableDevIndicator,Y[15]=en,Y[16]=Z):Z=Y[16],Y[17]!==G||Y[18]!==eA||Y[19]!==eg||Y[20]!==er||Y[21]!==X.buildError||Y[22]!==X.disableDevIndicator||Y[23]!==X.isErrorOverlayOpen||Y[24]!==Q||Y[25]!==en?(q=eA&&(0,b.jsxs)(\"div\",{\"data-issues\":!0,children:[(0,b.jsxs)(\"button\",{\"data-issues-open\":!0,\"aria-label\":\"Open issues overlay\",onClick:function(){if(X.isErrorOverlayOpen)return void G({type:F});G({type:U}),er(null)},children:[X.disableDevIndicator&&(0,b.jsx)(\"div\",{\"data-disabled-icon\":!0,children:(0,b.jsx)(r0,{})}),(0,b.jsx)(ot,{animate:eg,\"data-issues-count-animation\":!0,children:Q},Q),\" \",(0,b.jsxs)(\"div\",{children:[\"Issue\",Q>1&&(0,b.jsx)(\"span\",{\"aria-hidden\":!0,\"data-issues-count-plural\":!0,\"data-animate\":eg&&2===Q,children:\"s\"})]})]}),!X.buildError&&(0,b.jsx)(\"button\",{\"data-issues-collapse\":!0,\"aria-label\":\"Collapse issues badge\",onClick:function(){var e;X.disableDevIndicator?em(!0):ec(!1),null==(e=en.current)||e.focus()},children:(0,b.jsx)(rJ,{\"data-cross\":!0})})]}),Y[17]=G,Y[18]=eA,Y[19]=eg,Y[20]=er,Y[21]=X.buildError,Y[22]=X.disableDevIndicator,Y[23]=X.isErrorOverlayOpen,Y[24]=Q,Y[25]=en,Y[26]=q):q=Y[26],Y[27]!==Z||Y[28]!==q?(H=(0,b.jsxs)(\"div\",{ref:ey,children:[Z,q]}),Y[27]=Z,Y[28]=q,Y[29]=H):H=Y[29],Y[30]!==ea||Y[31]!==eA||Y[32]!==eg||Y[33]!==M||Y[34]!==H?(V=(0,b.jsx)(\"div\",{\"data-next-badge\":!0,\"data-error\":ea,\"data-error-expanded\":eA,\"data-animate\":eg,style:M,children:H}),Y[30]=ea,Y[31]=eA,Y[32]=eg,Y[33]=M,Y[34]=H,Y[35]=V):V=Y[35],Y[36]===Symbol.for(\"react.memo_cache_sentinel\")?($=(0,b.jsx)(\"div\",{\"aria-hidden\":!0,\"data-dot\":!0}),Y[36]=$):$=Y[36],Y[37]!==V||Y[38]!==e_?(W=(0,b.jsxs)(\"div\",{\"data-next-badge-root\":!0,style:e_,children:[R,V,$]}),Y[37]=V,Y[38]=e_,Y[39]=W):W=Y[39],W}function ot(e){var t,n,r,o,a,i,l=(0,A.c)(13);l[0]!==e?(n=r9(e,[\"children\",\"animate\"]),t=e.children,r=e.animate,l[0]=e,l[1]=t,l[2]=n,l[3]=r):(t=l[1],n=l[2],r=l[3]);var s=void 0===r||r,c=t-1;return l[4]!==c?(o=(0,b.jsx)(\"div\",{\"aria-hidden\":!0,\"data-issues-count-exit\":!0,children:c}),l[4]=c,l[5]=o):o=l[5],l[6]!==t?(a=(0,b.jsx)(\"div\",{\"data-issues-count\":!0,\"data-issues-count-enter\":!0,children:t}),l[6]=t,l[7]=a):a=l[7],l[8]!==s||l[9]!==n||l[10]!==o||l[11]!==a?(i=(0,b.jsxs)(\"div\",r6(r3({},n),{\"data-animate\":s,children:[o,a]})),l[8]=s,l[9]=n,l[10]=o,l[11]=a,l[12]=i):i=l[12],i}function on(e){var t,n,r,o,a,i,l,s,c=(0,A.c)(19),u=e.isLoading,d=e.isDevBuilding?\"rgba(255,255,255,0.7)\":\"white\",f=u?\"path0\":\"paused\";c[0]!==f?(t=(0,b.jsx)(\"path\",{className:f,d:\"M13.3 15.2 L2.34 1 V12.6\",fill:\"none\",stroke:\"url(#next_logo_paint0_linear_1357_10853)\",strokeWidth:\"1.86\",mask:\"url(#next_logo_mask0)\",strokeDasharray:\"29.6\",strokeDashoffset:\"29.6\"}),c[0]=f,c[1]=t):t=c[1];var p=u?\"path1\":\"paused\";return c[2]!==p?(n=(0,b.jsx)(\"path\",{className:p,d:\"M11.825 1.5 V13.1\",strokeWidth:\"1.86\",stroke:\"url(#next_logo_paint1_linear_1357_10853)\",strokeDasharray:\"11.6\",strokeDashoffset:\"11.6\"}),c[2]=p,c[3]=n):n=c[3],c[4]!==t||c[5]!==n?(r=(0,b.jsxs)(\"g\",{transform:\"translate(8.5, 13)\",children:[t,n]}),c[4]=t,c[5]=n,c[6]=r):r=c[6],c[7]!==d?(o=(0,b.jsxs)(\"linearGradient\",{id:\"next_logo_paint0_linear_1357_10853\",x1:\"9.95555\",y1:\"11.1226\",x2:\"15.4778\",y2:\"17.9671\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{stopColor:d}),(0,b.jsx)(\"stop\",{offset:\"0.604072\",stopColor:d,stopOpacity:\"0\"}),(0,b.jsx)(\"stop\",{offset:\"1\",stopColor:d,stopOpacity:\"0\"})]}),c[7]=d,c[8]=o):o=c[8],c[9]!==d?(a=(0,b.jsxs)(\"linearGradient\",{id:\"next_logo_paint1_linear_1357_10853\",x1:\"11.8222\",y1:\"1.40039\",x2:\"11.791\",y2:\"9.62542\",gradientUnits:\"userSpaceOnUse\",children:[(0,b.jsx)(\"stop\",{stopColor:d}),(0,b.jsx)(\"stop\",{offset:\"1\",stopColor:d,stopOpacity:\"0\"})]}),c[9]=d,c[10]=a):a=c[10],c[11]===Symbol.for(\"react.memo_cache_sentinel\")?(i=(0,b.jsxs)(\"mask\",{id:\"next_logo_mask0\",children:[(0,b.jsx)(\"rect\",{width:\"100%\",height:\"100%\",fill:\"white\"}),(0,b.jsx)(\"rect\",{width:\"5\",height:\"1.5\",fill:\"black\"})]}),c[11]=i):i=c[11],c[12]!==o||c[13]!==a?(l=(0,b.jsxs)(\"defs\",{children:[o,a,i]}),c[12]=o,c[13]=a,c[14]=l):l=c[14],c[15]!==u||c[16]!==r||c[17]!==l?(s=(0,b.jsxs)(\"svg\",{width:\"40\",height:\"40\",viewBox:\"0 0 40 40\",fill:\"none\",\"data-next-mark-loading\":u,children:[r,l]}),c[15]=u,c[16]=r,c[17]=l,c[18]=s):s=c[18],s}var or=x.forwardRef(function(e,t){var n,r,o,a,i,l,s,c,u,d=(0,A.c)(15);return(d[0]!==e?(l=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"onClick\",\"children\",\"className\"]),i=e.onClick,o=e.children,a=e.className,d[0]=e,d[1]=o,d[2]=a,d[3]=i,d[4]=l):(o=d[1],a=d[2],i=d[3],l=d[4]),d[5]!==i?(s=function(e){return e.target.closest(\"a\")||e.preventDefault(),null==i?void 0:i()},d[5]=i,d[6]=s):s=d[6],d[7]!==a?(c=eG(\"nextjs-toast\",a),d[7]=a,d[8]=c):c=d[8],d[9]!==o||d[10]!==l||d[11]!==t||d[12]!==s||d[13]!==c)?(u=(0,b.jsx)(\"div\",(n=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},l),r=r={ref:t,onClick:s,className:c,children:o},Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(r)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(r)).forEach(function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(r,e))}),n)),d[9]=o,d[10]=l,d[11]=t,d[12]=s,d[13]=c,d[14]=u):u=d[14],u});function oo(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}var oa=(0,x.createContext)(null);function oi(e){var t=e.children,n=e.disabled,r=void 0!==n&&n,o=(0,x.useRef)(new Set),a=(0,x.useCallback)(function(e){o.current.add(e)},[]),i=(0,x.useCallback)(function(e){o.current.delete(e)},[]),l=(0,x.useMemo)(function(){return{register:a,unregister:i,handles:o.current,disabled:r}},[a,i,r]);return(0,b.jsx)(oa.Provider,{value:l,children:t})}function ol(){return(0,x.useContext)(oa)}function os(e){var t,n,r,o,a,i,l,s,c,u,d,f=(0,A.c)(19);f[0]!==e?(o=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"children\",\"ref\"]),r=e.children,a=e.ref,f[0]=e,f[1]=r,f[2]=o,f[3]=a):(r=f[1],o=f[2],a=f[3]);var p=(0,x.useRef)(null),h=ol();f[4]!==a?(i=function(e){if(p.current=null!=e?e:null,\"function\"==typeof a)a(e);else{var t;a&&(void 0===a?\"undefined\":(t=a)&&\"undefined\"!=typeof Symbol&&t.constructor===Symbol?\"symbol\":typeof t)==\"object\"&&(a.current=e)}},f[4]=a,f[5]=i):i=f[5];var m=i;f[6]!==h?(l=function(){if(h&&p.current&&!h.disabled){var e=p.current;return h.register(e),function(){return h.unregister(e)}}},s=[h],f[6]=h,f[7]=l,f[8]=s):(l=f[7],s=f[8]),(0,x.useEffect)(l,s);var g=(null==h?void 0:h.disabled)?\"default\":\"grab\";return(f[9]!==o.style?(c=o.style||{},f[9]=o.style,f[10]=c):c=f[10],f[11]!==g||f[12]!==c?(u=oo({cursor:g},c),f[11]=g,f[12]=c,f[13]=u):u=f[13],f[14]!==r||f[15]!==o||f[16]!==m||f[17]!==u)?(d=(0,b.jsx)(\"div\",(t=oo({ref:m},o),n=n={style:u,children:r},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),f[14]=r,f[15]=o,f[16]=m,f[17]=u,f[18]=d):d=f[18],d}function oc(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function ou(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function od(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function of(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function op(e){return function(e){if(Array.isArray(e))return oc(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||oh(e)||function(){throw TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function oh(e,t){if(e){if(\"string\"==typeof e)return oc(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return oc(e,t)}}function om(e){var t,n,r,o,a,i,l,s,c,u,d,f,p=(0,A.c)(18);p[0]!==e?(s=of(e,[\"children\",\"padding\",\"position\",\"setPosition\",\"onDragStart\",\"dragHandleSelector\",\"disableDrag\",\"avoidZone\"]),r=e.children,l=e.padding,o=e.position,c=e.setPosition,i=e.onDragStart,a=e.dragHandleSelector,u=e.disableDrag,n=e.avoidZone,p[0]=e,p[1]=n,p[2]=r,p[3]=o,p[4]=a,p[5]=i,p[6]=l,p[7]=s,p[8]=c,p[9]=u):(n=p[1],r=p[2],o=p[3],a=p[4],i=p[5],l=p[6],s=p[7],c=p[8],u=p[9]);var h=function(e){var t=(0,x.useRef)(null),n=(0,x.useRef)({state:\"idle\"}),r=(0,x.useRef)(null),o=(0,x.useRef)({x:0,y:0}),a=(0,x.useRef)({x:0,y:0}),i=(0,x.useRef)(0),l=(0,x.useRef)([]),s=(0,x.useCallback)(function(){var e,o;\"drag\"===n.current.state&&(null==(o=t.current)||o.releasePointerCapture(n.current.pointerId)),n.current=\"drag\"===n.current.state?{state:\"drag-end\"}:{state:\"idle\"},null!==r.current&&(r.current(),r.current=null),l.current=[],null==(e=t.current)||e.classList.remove(\"dev-tools-grabbing\"),document.body.style.removeProperty(\"user-select\"),document.body.style.removeProperty(\"-webkit-user-select\")},[]);function c(e){t.current&&(a.current=e,t.current.style.translate=\"\".concat(e.x,\"px \").concat(e.y,\"px\"))}function u(n){var r=t.current;null!==r&&(r.style.transition=\"translate 491.22ms var(--timing-bounce)\",r.addEventListener(\"transitionend\",function t(o){if(\"translate\"===o.propertyName){var i;null==(i=e.onAnimationEnd)||i.call(e,n),a.current={x:0,y:0},r.style.transition=\"\",r.removeEventListener(\"transitionend\",t)}}),c(n.translation))}function d(e){if(\"drag-end\"===n.current.state){var r;e.preventDefault(),e.stopPropagation(),n.current={state:\"idle\"},null==(r=t.current)||r.removeEventListener(\"click\",d)}}function f(r){if(\"press\"===n.current.state){var s,u,d,f,p=r.clientX-o.current.x,h=r.clientY-o.current.y;Math.sqrt(p*p+h*h)>=e.threshold&&(n.current={state:\"drag\",pointerId:r.pointerId},null==(u=t.current)||u.setPointerCapture(r.pointerId),null==(d=t.current)||d.classList.add(\"dev-tools-grabbing\"),document.body.style.userSelect=\"none\",document.body.style.webkitUserSelect=\"none\",null==(f=e.onDragStart)||f.call(e))}if(\"drag\"===n.current.state){var m={x:r.clientX,y:r.clientY},g=m.x-o.current.x,y=m.y-o.current.y;o.current=m,c({x:a.current.x+g,y:a.current.y+y});var v=Date.now();v-i.current>=10&&(l.current=op(l.current.slice(-5)).concat([{position:m,timestamp:v}])),i.current=v,null==(s=e.onDrag)||s.call(e,a.current)}}function p(){var t,n=function(e){if(e.length<2)return{x:0,y:0};var t=e[0],n=e[e.length-1],r=n.timestamp-t.timestamp;return 0===r?{x:0,y:0}:{x:1e3*((n.position.x-t.position.x)/r),y:1e3*((n.position.y-t.position.y)/r)}}(l.current);s(),null==(t=e.onDragEnd)||t.call(e,a.current,n)}return(0,x.useLayoutEffect)(function(){e.disabled&&s()},[s,e.disabled]),e.disabled?{ref:t,animate:u}:{ref:t,onPointerDown:function(a){var i;0===a.button&&function(n){if(!n||!t.current)return!0;if(e.handles&&e.handles.size>0){for(var r=n;r&&r!==t.current;){if(e.handles.has(r))return!0;r=r.parentElement}return!1}return!e.dragHandleSelector||null!==n.closest(e.dragHandleSelector)}(a.target)&&(o.current={x:a.clientX,y:a.clientY},n.current={state:\"press\"},window.addEventListener(\"pointermove\",f),window.addEventListener(\"pointerup\",p),null!==r.current&&(r.current(),r.current=null),r.current=function(){window.removeEventListener(\"pointermove\",f),window.removeEventListener(\"pointerup\",p)},null==(i=t.current)||i.addEventListener(\"click\",d))},animate:u}}({disabled:void 0!==u&&u,handles:null==(t=ol())?void 0:t.handles,threshold:5,onDragStart:i,onDragEnd:function(e,t){var r,a,i,s,c,u,d,f,p,h,y,v,b,A,x,w,C,_;if(0===Math.sqrt(e.x*e.x+e.y*e.y)){null==(r=m.current)||r.style.removeProperty(\"translate\");return}g((b=(a={x:e.x+oy(t.x),y:e.y+oy(t.y)}).x,A=a.y,w=Object.entries(x=(c=2*l,u=(null==(i=m.current)?void 0:i.offsetWidth)||0,d=(null==(s=m.current)?void 0:s.offsetHeight)||0,f=window.innerWidth-document.documentElement.clientWidth,h=(p=function(e){var t=e.includes(\"right\"),r=e.includes(\"bottom\"),o=t?window.innerWidth-f-c-u:0,a=r?window.innerHeight-c-d:0;if(n&&n.corner===e){var i=n.square+n.padding;r?a-=i:a+=i}return{x:o,y:a}})(o),{\"top-left\":(y=function(e){return{x:e.x-h.x,y:e.y-h.y}})(p(\"top-left\")),\"top-right\":y(p(\"top-right\")),\"bottom-left\":y(p(\"bottom-left\")),\"bottom-right\":y(p(\"bottom-right\"))})).map(function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||oh(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),o=r[0],a=r[1];return{key:o,distance:Math.sqrt(Math.pow(b-a.x,2)+Math.pow(A-a.y,2))}}),C=(v=Math).min.apply(v,op(w.map(og))),(_=w.find(function(e){return e.distance===C}))?{translation:x[_.key],corner:_.key}:{corner:o,translation:x[o]}))},onAnimationEnd:function(e){var t=e.corner;setTimeout(function(){var e;null==(e=m.current)||e.style.removeProperty(\"translate\"),c(t)})},dragHandleSelector:a}),m=h.ref,g=h.animate,y=of(h,[\"ref\",\"animate\"]);return p[10]!==s.style?(d=ou({touchAction:\"none\",userSelect:\"none\",WebkitUserSelect:\"none\"},s.style),p[10]=s.style,p[11]=d):d=p[11],p[12]!==r||p[13]!==y||p[14]!==s||p[15]!==m||p[16]!==d?(f=(0,b.jsx)(\"div\",od(ou(od(ou({},s),{ref:m}),y),{style:d,children:r})),p[12]=r,p[13]=y,p[14]=s,p[15]=m,p[16]=d,p[17]=f):f=p[17],f}function og(e){return e.distance}function oy(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.999;return e/1e3*t/(1-t)}function ov(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function ob(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var oA=20;function ox(){var e,t,n,r,o,a,i,l,s,c=(0,A.c)(20),u=da(),d=u.state,f=u.dispatch,p=r2(),h=p.panel,m=p.setPanel,g=p.setSelectedIndex,y=ow();c[0]!==d.devToolsPosition?(n=d.devToolsPosition.split(\"-\",2),c[0]=d.devToolsPosition,c[1]=n):n=c[1];var v=(t=2,function(e){if(Array.isArray(e))return e}(e=n)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,2)||function(e,t){if(e){if(\"string\"==typeof e)return ov(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return ov(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),x=v[0],w=v[1];c[2]!==w||c[3]!==x?(ob(o={\"--animate-out-duration-ms\":\"\".concat(200,\"ms\"),\"--animate-out-timing-function\":t7,boxShadow:\"none\"},x,\"\".concat(oA,\"px\")),ob(o,w,\"\".concat(oA,\"px\")),r=o,c[2]=w,c[3]=x,c[4]=r):r=c[4];var C=r,_=null!==h;return c[5]!==f||c[6]!==y?(a=function(e){f({type:Y,devToolsPosition:e}),rA({devToolsPosition:e}),y(e)},c[5]=f,c[6]=y,c[7]=a):a=c[7],c[8]!==h||c[9]!==m||c[10]!==g?(i=(0,b.jsx)(oe,{onTriggerClick:function(){var e=\"panel-selector\"===h?null:\"panel-selector\";if(m(e),!e)return void g(-1)}}),c[8]=h,c[9]=m,c[10]=g,c[11]=i):i=c[11],c[12]!==d.devToolsPosition||c[13]!==_||c[14]!==a||c[15]!==i?(l=(0,b.jsx)(om,{disableDrag:_,padding:oA,position:d.devToolsPosition,setPosition:a,children:i}),c[12]=d.devToolsPosition,c[13]=_,c[14]=a,c[15]=i,c[16]=l):l=c[16],c[17]!==C||c[18]!==l?(s=(0,b.jsx)(or,{id:\"devtools-indicator\",\"data-nextjs-toast\":!0,style:C,children:l}),c[17]=C,c[18]=l,c[19]=s):s=c[19],s}var ow=function(){var e,t=(0,A.c)(3),n=da(),r=n.state,o=n.dispatch;return t[0]!==o||t[1]!==r.devToolsPanelPosition?(e=function(e){o({type:K,devToolsPanelPosition:e,key:et});var t=Object.keys(r.devToolsPanelPosition).filter(oC),n=ob({},et,e);t.forEach(function(t){o({type:K,devToolsPanelPosition:e,key:t}),n[t]=e}),rA({devToolsPanelPosition:n})},t[0]=o,t[1]=r.devToolsPanelPosition,t[2]=e):e=t[2],e};function oC(e){return e.startsWith(Q)}function o_(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function ok(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function oE(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){ok(e,t,n[t])})}return e}function oj(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function oS(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return o_(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o_(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var oO=(0,x.createContext)({});function oB(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h=(0,A.c)(37);h[0]!==e?(a=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,[\"index\",\"label\",\"value\",\"onClick\",\"href\"]),n=e.index,r=e.label,i=e.value,o=e.onClick,t=e.href,h[0]=e,h[1]=t,h[2]=n,h[3]=r,h[4]=o,h[5]=a,h[6]=i):(t=h[1],n=h[2],r=h[3],o=h[4],a=h[5],i=h[6]);var m=\"function\"==typeof o||\"string\"==typeof t,g=(0,x.useContext)(oO),y=g.closeMenu,v=g.selectedIndex,w=g.setSelectedIndex,C=v===n;h[7]!==y||h[8]!==t||h[9]!==m||h[10]!==o?(l=function(){m&&(null==o||o(),null==y||y(),t&&window.open(t,\"_blank\",\"noopener, noreferrer\"))},h[7]=y,h[8]=t,h[9]=m,h[10]=o,h[11]=l):l=h[11];var _=l;h[12]!==n||h[13]!==m||h[14]!==v||h[15]!==w?(s=function(){m&&void 0!==n&&v!==n&&w(n)},h[12]=n,h[13]=m,h[14]=v,h[15]=w,h[16]=s):s=h[16],h[17]!==w?(c=function(){return w(-1)},h[17]=w,h[18]=c):c=h[18],h[19]!==_?(u=function(e){(\"Enter\"===e.key||\" \"===e.key)&&_()},h[19]=_,h[20]=u):u=h[20];var k=m?\"menuitem\":void 0,E=C?0:-1;return h[21]!==r?(d=(0,b.jsx)(\"span\",{className:\"dev-tools-indicator-label\",children:r}),h[21]=r,h[22]=d):d=h[22],h[23]!==i?(f=(0,b.jsx)(\"span\",{className:\"dev-tools-indicator-value\",children:i}),h[23]=i,h[24]=f):f=h[24],h[25]!==_||h[26]!==n||h[27]!==a||h[28]!==C||h[29]!==s||h[30]!==c||h[31]!==u||h[32]!==k||h[33]!==E||h[34]!==d||h[35]!==f?(p=(0,b.jsxs)(\"div\",oj(oE({className:\"dev-tools-indicator-item\",\"data-index\":n,\"data-selected\":C,onClick:_,onMouseMove:s,onMouseLeave:c,onKeyDown:u,role:k,tabIndex:E},a),{children:[d,f]})),h[25]=_,h[26]=n,h[27]=a,h[28]=C,h[29]=s,h[30]=c,h[31]=u,h[32]=k,h[33]=E,h[34]=d,h[35]=f,h[36]=p):p=h[36],p}var oP=function(e){var t,n=e.closeOnClickOutside,r=void 0===n||n,o=e.items,a=da().state,i=r2(),l=i.setPanel,s=i.triggerRef,c=i.setSelectedIndex,u=i.selectedIndex,d=uX().mounted,f=oS(a.devToolsPosition.split(\"-\",2),2),p=f[0],h=f[1],m=(0,x.useRef)(null);t8(m,s,r&&d,function(e){switch(e){case\"escape\":l(null),c(-1);return;case\"outside\":if(!r)return;l(null),c(-1);return;default:return null}}),(0,x.useLayoutEffect)(function(){var e;null==(e=m.current)||e.focus(),oD({index:-1===u?\"first\":u,menuRef:m,setSelectedIndex:c})},[]);var g=r4(a),y=oS(a.devToolsPosition.split(\"-\",2),2),v=y[0],A=y[1],w=p===v&&h===A?g:oA,C=(ok(t={},p,\"\".concat(w,\"px\")),ok(t,h,\"\".concat(oA,\"px\")),ok(t,\"top\"===p?\"bottom\":\"top\",\"auto\"),ok(t,\"left\"===h?\"right\":\"left\",\"auto\"),t),_=o.filter(function(e){return!!e}),k=_.filter(function(e){return!e.footer}),E=_.filter(function(e){return e.footer});return(0,b.jsx)(\"div\",{ref:m,onKeyDown:function(e){e.preventDefault();var t=_.filter(function(e){return e.onClick}).length;switch(e.key){case\"ArrowDown\":oD({index:u>=t-1?0:u+1,menuRef:m,setSelectedIndex:c});break;case\"ArrowUp\":oD({index:u<=0?t-1:u-1,menuRef:m,setSelectedIndex:c});break;case\"Home\":oD({index:\"first\",menuRef:m,setSelectedIndex:c});break;case\"End\":oD({index:\"last\",menuRef:m,setSelectedIndex:c});break;case\"n\":e.ctrlKey&&oD({index:u>=t-1?0:u+1,menuRef:m,setSelectedIndex:c});break;case\"p\":e.ctrlKey&&oD({index:u<=0?t-1:u-1,menuRef:m,setSelectedIndex:c})}},id:\"nextjs-dev-tools-menu\",role:\"menu\",dir:\"ltr\",\"aria-orientation\":\"vertical\",\"aria-label\":\"Next.js Dev Tools Items\",tabIndex:-1,style:oE({outline:0,WebkitFontSmoothing:\"antialiased\",display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",background:\"var(--color-background-100)\",backgroundClip:\"padding-box\",boxShadow:\"var(--shadow-menu)\",borderRadius:\"var(--rounded-xl)\",position:\"fixed\",fontFamily:\"var(--font-stack-sans)\",zIndex:\"var(--top-z-index)\",overflow:\"hidden\",opacity:1,minWidth:\"248px\",transition:\"opacity var(--animate-out-duration-ms) var(--animate-out-timing-function)\",border:\"1px solid var(--color-gray-alpha-400)\"},C),children:(0,b.jsxs)(oO,{value:{selectedIndex:u,setSelectedIndex:c},children:[(0,b.jsx)(\"div\",{style:{padding:\"6px\",width:\"100%\"},children:k.map(function(e,t){return(0,b.jsx)(oB,oE({title:e.title,label:e.label,value:e.value,onClick:e.onClick,index:e.onClick?oI(k,t):void 0},e.attributes),e.label)})}),(0,b.jsx)(\"div\",{className:\"dev-tools-indicator-footer\",children:E.map(function(e,t){var n;return(0,b.jsx)(oB,oj(oE({title:e.title,label:e.label,value:e.value,onClick:e.onClick},e.attributes),{index:e.onClick?oI(E,t)+(n=k).filter(function(e){return e.onClick}).length:void 0}),e.label)})})]})})};function oI(e,t){for(var n=0,r=0;r<=t&&r<e.length;r++)if(e[r].onClick){if(r===t)return n;n++}return n}function oz(e){var t,n,r=(0,A.c)(4),o=e.children,a=o>0;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"span\",{className:\"dev-tools-indicator-issue-count-indicator\"}),r[0]=t):t=r[0],r[1]!==o||r[2]!==a?(n=(0,b.jsxs)(\"span\",{className:\"dev-tools-indicator-issue-count\",\"data-has-issues\":a,children:[t,o]}),r[1]=o,r[2]=a,r[3]=n):n=r[3],n}function oT(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",children:(0,b.jsx)(\"path\",{fill:\"#666\",fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M5.50011 1.93945L6.03044 2.46978L10.8537 7.293C11.2442 7.68353 11.2442 8.31669 10.8537 8.70722L6.03044 13.5304L5.50011 14.0608L4.43945 13.0001L4.96978 12.4698L9.43945 8.00011L4.96978 3.53044L4.43945 3.00011L5.50011 1.93945Z\"})}),t[0]=e):e=t[0],e}function oD(e){var t,n=e.index,r=e.menuRef,o=e.setSelectedIndex;if(\"first\"===n)return void setTimeout(function(){var e,t=null==(e=r.current)?void 0:e.querySelectorAll('[role=\"menuitem\"]');t&&oD({index:Number(t[0].getAttribute(\"data-index\")),menuRef:r,setSelectedIndex:o})});if(\"last\"===n)return void setTimeout(function(){var e,t=null==(e=r.current)?void 0:e.querySelectorAll('[role=\"menuitem\"]');t&&oD({index:t.length-1,menuRef:r,setSelectedIndex:o})});var a=null==(t=r.current)?void 0:t.querySelector('[data-index=\"'.concat(n,'\"]'));a&&(o(n),null==a||a.focus())}function oL(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var oN=(0,x.createContext)(null),oR=function(e){var t=.95*window.innerWidth,n=.95*window.innerHeight;return{width:Math.min(t,Math.max(e.minWidth,e.width)),height:Math.min(n,Math.max(e.minHeight,e.height))}},oM=function(e){var t,n,r,o,a,i,l,s=e.value,c=e.children,u=null!=(a=s.minWidth)?a:100,d=null!=(i=s.minHeight)?i:80,f=s.maxWidth,p=s.maxHeight,h=(t=(0,x.useState)(null),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return oL(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return oL(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),m=h[0],g=h[1],y=null!=(l=s.storageKey)?l:ee,v=(0,x.useCallback)(function(){if(s.resizeRef.current&&null===m){var e=s.devToolsPanelSize[y];if(e){var t,n,r=oR((t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},e),n=n={minWidth:null!=u?u:100,minHeight:null!=d?d:80},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t)),o=r.height,a=r.width;return s.resizeRef.current.style.width=\"\".concat(a,\"px\"),s.resizeRef.current.style.height=\"\".concat(o,\"px\"),!0}}},[s.resizeRef,m,y,u,d,s.devToolsPanelSize]);return(0,x.useLayoutEffect)(function(){var e;if(!v()&&s.resizeRef.current&&(null==(e=s.initialSize)?void 0:e.height)&&s.initialSize.width){var t=oR({height:s.initialSize.height,width:s.initialSize.width,minWidth:null!=u?u:100,minHeight:null!=d?d:80}),n=t.height,r=t.width;s.resizeRef.current.style.width=\"\".concat(r,\"px\"),s.resizeRef.current.style.height=\"\".concat(n,\"px\")}},[]),(0,x.useLayoutEffect)(function(){return window.addEventListener(\"resize\",v),function(){return window.removeEventListener(\"resize\",v)}},[v,null==(r=s.initialSize)?void 0:r.height,null==(o=s.initialSize)?void 0:o.width,s.resizeRef]),(0,b.jsx)(oN.Provider,{value:{resizeRef:s.resizeRef,minWidth:u,minHeight:d,maxWidth:f,maxHeight:p,draggingDirection:m,setDraggingDirection:g,storageKey:y},children:c})},oZ=function(){var e=(0,x.useContext)(oN);if(!e)throw Error(\"useResize must be used within a Resize provider\");return e},oU=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/components/devtools-panel/resize/resize-handle.css\"),oF={};function oq(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}oF.styleTagTransform=h(),oF.setAttributes=u(),oF.insert=s(),oF.domAPI=i(),oF.insertStyleElement=f(),o()(oU.Z,oF),oU.Z&&oU.Z.locals&&oU.Z.locals;var oH=function(e){var t,n,r,o,a,i,l,s,c,u,d=(0,A.c)(32),f=e.direction,p=e.position,h=oZ(),m=h.resizeRef,g=h.minWidth,y=h.minHeight,v=h.maxWidth,w=h.maxHeight,C=h.storageKey,_=h.draggingDirection,k=h.setDraggingDirection;d[0]===Symbol.for(\"react.memo_cache_sentinel\")?(r={top:0,right:0,bottom:0,left:0},d[0]=r):r=d[0];var E=(t=(0,x.useState)(r),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(t,2)||function(e,t){if(e){if(\"string\"==typeof e)return oq(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return oq(e,t)}}(t,n)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),j=E[0],S=E[1];d[1]!==m.current?(o=function(){if(m.current){var e=m.current,t=window.getComputedStyle(e);S({top:parseFloat(t.borderTopWidth)||0,right:parseFloat(t.borderRightWidth)||0,bottom:parseFloat(t.borderBottomWidth)||0,left:parseFloat(t.borderLeftWidth)||0})}},d[1]=m.current,d[2]=o):o=d[2],d[3]!==m?(a=[m],d[3]=m,d[4]=a):a=d[4],(0,x.useLayoutEffect)(o,a),d[5]!==f||d[6]!==w||d[7]!==v||d[8]!==y||d[9]!==g||d[10]!==m.current||d[11]!==k||d[12]!==C?(i=function(e){if(e.preventDefault(),m.current){k(f);var t=m.current,n=t.getBoundingClientRect(),r=e.clientX,o=e.clientY,a=function(e){var a=oV(f,e.clientX-r,e.clientY-o,n,g,y,v,w),i=a.newWidth,l=a.newHeight;void 0!==i&&(t.style.width=\"\".concat(i,\"px\")),void 0!==l&&(t.style.height=\"\".concat(l,\"px\"))},i=function(){if(k(null),document.removeEventListener(\"mousemove\",a),document.removeEventListener(\"mouseup\",i),m.current){var e,t,n,r=m.current.getBoundingClientRect(),o=r.width,l=r.height;rA({devToolsPanelSize:(e={},t=C,n={width:o,height:l},t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e)})}};document.addEventListener(\"mousemove\",a),document.addEventListener(\"mouseup\",i)}},d[5]=f,d[6]=w,d[7]=v,d[8]=y,d[9]=g,d[10]=m.current,d[11]=k,d[12]=C,d[13]=i):i=d[13];var O=i;if(!(!p.split(\"-\").includes(f)&&(!f.includes(\"-\")||f===o$(p))))return null;var B=j.left+j.right,P=j.top+j.bottom;d[14]!==f?(l=f.includes(\"-\"),d[14]=f,d[15]=l):l=d[15];var I=l,z=\"resize-container \".concat(f,\" \").concat(_&&_!==f?\"no-hover\":\"\");return d[16]!==O||d[17]!==z?(s=(0,b.jsx)(\"div\",{className:z,onMouseDown:O}),d[16]=O,d[17]=z,d[18]=s):s=d[18],d[19]!==j.bottom||d[20]!==j.left||d[21]!==j.right||d[22]!==j.top||d[23]!==f||d[24]!==_||d[25]!==I||d[26]!==B||d[27]!==P?(c=!I&&(0,b.jsx)(\"div\",{className:\"resize-line \".concat(f,\" \").concat(_===f?\"dragging\":\"\"),style:{\"--border-horizontal\":\"\".concat(B,\"px\"),\"--border-vertical\":\"\".concat(P,\"px\"),\"--border-top\":\"\".concat(j.top,\"px\"),\"--border-right\":\"\".concat(j.right,\"px\"),\"--border-bottom\":\"\".concat(j.bottom,\"px\"),\"--border-left\":\"\".concat(j.left,\"px\")}}),d[19]=j.bottom,d[20]=j.left,d[21]=j.right,d[22]=j.top,d[23]=f,d[24]=_,d[25]=I,d[26]=B,d[27]=P,d[28]=c):c=d[28],d[29]!==s||d[30]!==c?(u=(0,b.jsxs)(b.Fragment,{children:[s,c]}),d[29]=s,d[30]=c,d[31]=u):u=d[31],u},oV=function(e,t,n,r,o,a,i,l){var s=null!=i?i:.95*window.innerWidth,c=null!=l?l:.95*window.innerHeight;switch(e){case\"right\":return{newWidth:Math.min(s,Math.max(o,r.width+t)),newHeight:r.height};case\"left\":return{newWidth:Math.min(s,Math.max(o,r.width-t)),newHeight:r.height};case\"bottom\":return{newWidth:r.width,newHeight:Math.min(c,Math.max(a,r.height+n))};case\"top\":return{newWidth:r.width,newHeight:Math.min(c,Math.max(a,r.height-n))};case\"top-left\":return{newWidth:Math.min(s,Math.max(o,r.width-t)),newHeight:Math.min(c,Math.max(a,r.height-n))};case\"top-right\":return{newWidth:Math.min(s,Math.max(o,r.width+t)),newHeight:Math.min(c,Math.max(a,r.height-n))};case\"bottom-left\":return{newWidth:Math.min(s,Math.max(o,r.width-t)),newHeight:Math.min(c,Math.max(a,r.height+n))};case\"bottom-right\":return{newWidth:Math.min(s,Math.max(o,r.width+t)),newHeight:Math.min(c,Math.max(a,r.height+n))};default:return null}};function o$(e){switch(e){case\"top-left\":return\"bottom-right\";case\"top-right\":return\"bottom-left\";case\"bottom-left\":return\"top-right\";case\"bottom-right\":return\"top-left\";default:return null}}var oW=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/panel/dynamic-panel.css\"),oY={};function oK(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function oX(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function oG(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){oX(e,t,n[t])})}return e}function oQ(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return oK(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return oK(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function oJ(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"width\";if(\"number\"==typeof e)return e;var n=document.createElement(\"div\");n.style.position=\"absolute\",n.style.visibility=\"hidden\",\"width\"===t?n.style.width=e:n.style.height=e,document.body.appendChild(n);var r=\"width\"===t?n.offsetWidth:n.offsetHeight;return document.body.removeChild(n),r}function o0(e){var t,n,r,o,a,i,l,s,c,u,d,f,p,h,m,g=e.header,y=e.children,v=e.draggable,w=void 0!==v&&v,C=e.sizeConfig,_=void 0===C?{kind:\"resizable\",minWidth:400,minHeight:350,maxWidth:1e3,maxHeight:1e3,initialSize:{height:400,width:500}}:C,k=e.closeOnClickOutside,E=void 0!==k&&k,j=e.sharePanelSizeGlobally,S=e.sharePanelPositionGlobally,O=e.containerProps,B=r2().setPanel,P=uX(),I=P.name,z=P.mounted,T=void 0===j||j?ee:\"\".concat(J,\"_\").concat(I),D=void 0===S||S?et:\"\".concat(Q,\"_\").concat(I),L=da(),N=L.dispatch,R=L.state,M=null!=(h=R.devToolsPanelPosition[D])?h:R.devToolsPosition,Z=oQ(M.split(\"-\",2),2),U=Z[0],F=Z[1],q=(0,x.useRef)(null);t8(q,r2().triggerRef,z,function(e){switch(e){case\"escape\":return void B(\"panel-selector\");case\"outside\":E&&B(\"panel-selector\");return;default:return null}});var H=r4(R),V=oQ(R.devToolsPosition.split(\"-\",2),2),$=V[0],W=V[1],Y=U===$&&F===W?H:oA,X=(oX(m={},U,\"\".concat(Y,\"px\")),oX(m,F,\"\".concat(oA,\"px\")),oX(m,\"top\"===U?\"bottom\":\"top\",\"auto\"),oX(m,\"left\"===F?\"right\":\"left\",\"auto\"),m),G=\"resizable\"===_.kind,en=(t=G?_.minWidth:void 0,n=G?_.minHeight:void 0,r=G?_.maxWidth:void 0,o=G?_.maxHeight:void 0,(s=(0,A.c)(11))[0]!==o||s[1]!==r||s[2]!==n||s[3]!==t?(a=function(){return{minWidth:t?oJ(t,\"width\"):void 0,minHeight:n?oJ(n,\"height\"):void 0,maxWidth:r?oJ(r,\"width\"):void 0,maxHeight:o?oJ(o,\"height\"):void 0}},s[0]=o,s[1]=r,s[2]=n,s[3]=t,s[4]=a):a=s[4],u=(c=oQ((0,x.useState)(a),2))[0],d=c[1],s[5]!==o||s[6]!==r||s[7]!==n||s[8]!==t?(i=function(){var e=function(){d({minWidth:t?oJ(t,\"width\"):void 0,minHeight:n?oJ(n,\"height\"):void 0,maxWidth:r?oJ(r,\"width\"):void 0,maxHeight:o?oJ(o,\"height\"):void 0})};return window.addEventListener(\"resize\",e),function(){return window.removeEventListener(\"resize\",e)}},l=[t,n,r,o],s[5]=o,s[6]=r,s[7]=n,s[8]=t,s[9]=i,s[10]=l):(i=s[9],l=s[10]),(0,x.useEffect)(i,l),u),er=en.minWidth,eo=en.minHeight,ea=en.maxWidth,ei=en.maxHeight,el=I?\"\".concat(J,\"_\").concat(I):ee,es=R.devToolsPanelSize[el];return(0,b.jsx)(oM,{value:{resizeRef:q,initialSize:\"resizable\"===_.kind?_.initialSize:_,minWidth:er,minHeight:eo,maxWidth:ea,maxHeight:ei,devToolsPosition:R.devToolsPosition,devToolsPanelSize:R.devToolsPanelSize,storageKey:T},children:(0,b.jsx)(\"div\",{tabIndex:-1,ref:q,className:\"dynamic-panel-container\",style:oG({\"--panel-top\":X.top,\"--panel-bottom\":X.bottom,\"--panel-left\":X.left,\"--panel-right\":X.right},G?{\"--panel-min-width\":er?\"\".concat(er,\"px\"):void 0,\"--panel-min-height\":eo?\"\".concat(eo,\"px\"):void 0,\"--panel-max-width\":ea?\"\".concat(ea,\"px\"):void 0,\"--panel-max-height\":ei?\"\".concat(ei,\"px\"):void 0}:{\"--panel-height\":\"\".concat(es?es.height:_.height,\"px\"),\"--panel-width\":\"\".concat(es?es.width:_.width,\"px\")}),children:(0,b.jsx)(oi,{disabled:!w,children:(0,b.jsx)(om,{dragHandleSelector:\".resize-container\",avoidZone:{corner:R.devToolsPosition,square:25/R.scale,padding:oA},padding:oA,position:M,setPosition:function(e){N({type:K,devToolsPanelPosition:e,key:D}),\"resizable\"===_.kind&&rA({devToolsPanelPosition:oX({},D,e)})},style:{overflow:\"auto\",width:\"100%\",height:\"100%\"},disableDrag:!w,children:(0,b.jsxs)(b.Fragment,{children:[(0,b.jsxs)(\"div\",(f=oG({},O),p=p={className:\"panel-content-container \".concat((null==O?void 0:O.className)||\"\"),style:oG({},null==O?void 0:O.style),children:[(0,b.jsx)(os,{children:g}),(0,b.jsx)(\"div\",{\"data-nextjs-scrollable-content\":!0,className:\"draggable-content\",children:y})]},Object.getOwnPropertyDescriptors?Object.defineProperties(f,Object.getOwnPropertyDescriptors(p)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(p)).forEach(function(e){Object.defineProperty(f,e,Object.getOwnPropertyDescriptor(p,e))}),f)),G&&(0,b.jsxs)(b.Fragment,{children:[(!_.sides||_.sides.includes(\"vertical\"))&&(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(oH,{position:M,direction:\"top\"}),(0,b.jsx)(oH,{position:M,direction:\"bottom\"})]}),(!_.sides||_.sides.includes(\"horizontal\"))&&(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(oH,{position:M,direction:\"right\"}),(0,b.jsx)(oH,{position:M,direction:\"left\"})]}),(!_.sides||_.sides.includes(\"diagonal\"))&&(0,b.jsxs)(b.Fragment,{children:[(0,b.jsx)(oH,{position:M,direction:\"top-left\"}),(0,b.jsx)(oH,{position:M,direction:\"top-right\"}),(0,b.jsx)(oH,{position:M,direction:\"bottom-left\"}),(0,b.jsx)(oH,{position:M,direction:\"bottom-right\"})]})]})]})})})})})}oY.styleTagTransform=h(),oY.setAttributes=u(),oY.insert=s(),oY.domAPI=i(),oY.insertStyleElement=f(),o()(oW.Z,oY),oW.Z&&oW.Z.locals&&oW.Z.locals;var o1=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/components/overview/segment-explorer.css\"),o2={};function o4(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}o2.styleTagTransform=h(),o2.setAttributes=u(),o2.insert=s(),o2.domAPI=i(),o2.insertStyleElement=f(),o()(o1.Z,o2),o1.Z&&o1.Z.locals&&o1.Z.locals;var o5=new Set,o3={subscribe:function(e){return o5.add(e),function(){return o5.delete(e)}},getSnapshot:function(){return o7.getRoot()},getServerSnapshot:function(){return o7.getRoot()}},o6=o3.subscribe,o9=o3.getSnapshot,o8=o3.getServerSnapshot,o7=function(e){var t=e.getCharacters,n=void 0===t?function(e){return[e]}:t,r=e.compare,o=void 0===r?function(e,t){return e===t}:r,a={value:void 0,children:{}};function i(){var e=!0,t=!1,n=void 0;try{for(var r,o=o5[Symbol.iterator]();!(e=(r=o.next()).done);e=!0)(0,r.value)()}catch(e){t=!0,n=e}finally{try{e||null==o.return||o.return()}finally{if(t)throw n}}}return{insert:function(e){var t=a,r=n(e),o=!0,l=!1,s=void 0;try{for(var c,u=r[Symbol.iterator]();!(o=(c=u.next()).done);o=!0){var d=c.value;t.children[d]||(t.children[d]={value:void 0,children:{}}),t=t.children[d]}}catch(e){l=!0,s=e}finally{try{o||null==u.return||u.return()}finally{if(l)throw s}}t.value=e,a=o4({},a),i()},remove:function(e){var t=a,r=n(e),l=[],s=!0,c=!0,u=!1,d=void 0;try{for(var f,p=r[Symbol.iterator]();!(c=(f=p.next()).done);c=!0){var h=f.value;if(!t.children[h]){s=!1;break}l.push(t),t=t.children[h]}}catch(e){u=!0,d=e}finally{try{c||null==p.return||p.return()}finally{if(u)throw d}}if(s&&o(t.value,e)){t.value=void 0;for(var m=l.length-1;m>=0;m--){var g=l[m],y=r[m];0===Object.keys(g.children[y].children).length&&delete g.children[y]}a=o4({},a),i()}},getRoot:function(){return a}}}({compare:function(e,t){return!!e&&!!t&&e.pagePath===t.pagePath&&e.type===t.type&&e.boundaryType===t.boundaryType},getCharacters:function(e){return e.pagePath.split(\"/\")}}),ae=o7.insert,at=o7.remove,an=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/components/overview/segment-boundary-trigger.css\"),ar={};ar.styleTagTransform=h(),ar.setAttributes=u(),ar.insert=s(),ar.domAPI=i(),ar.insertStyleElement=f(),o()(an.Z,ar),an.Z&&an.Z.locals&&an.Z.locals;let ao={};function aa(e,t){let n=x.useRef(ao);return n.current===ao&&(n.current=e(t)),n}let ai=[];function al(e){x.useEffect(e,ai)}class as{static create(){return new as}currentId=0;start(e,t){this.clear(),this.currentId=setTimeout(()=>{this.currentId=0,t()},e)}isStarted(){return 0!==this.currentId}clear=()=>{0!==this.currentId&&(clearTimeout(this.currentId),this.currentId=0)};disposeEffect=()=>this.clear}function ac(){let e=aa(as.create).current;return al(e.disposeEffect),e}let au=w[`useInsertionEffect${Math.random().toFixed(1)}`.slice(0,-3)],ad=au&&au!==x.useLayoutEffect?au:e=>e();function af(e){let t=aa(ap).current;return t.next=e,ad(t.effect),t.trampoline}function ap(){let e={next:void 0,callback:ah,trampoline:(...t)=>e.callback?.(...t),effect:()=>{e.callback=e.next}};return e}function ah(){}function am({controlled:e,default:t,name:n,state:r=\"value\"}){let{current:o}=x.useRef(void 0!==e),[a,i]=x.useState(t),l=x.useCallback(e=>{o||i(e)},[]);return[o?e:a,l]}let ag={...w},ay=0,av=ag.useId;function ab(e,t){if(void 0!==av){let n=av();return e??(t?`${t}-${n}`:n)}return function(e,t=\"mui\"){let[n,r]=x.useState(e),o=e||n;return x.useEffect(()=>{null==n&&(ay+=1,r(`${t}-${ay}`))},[n,t]),o}(e,t)}function aA(){let e=new Map;return{emit(t,n){e.get(t)?.forEach(e=>e(n))},on(t,n){e.has(t)||e.set(t,new Set),e.get(t).add(n)},off(t,n){e.get(t)?.delete(n)}}}let ax=\"undefined\"!=typeof document?x.useLayoutEffect:()=>{},aw=x.createContext(null),aC=x.createContext(null),a_=()=>x.useContext(aw)?.id||null,ak=()=>x.useContext(aC);function aE(e){let{children:t,id:n}=e,r=a_();return(0,b.jsx)(aw.Provider,{value:x.useMemo(()=>({id:n,parentId:r}),[n,r]),children:t})}function aj(e){let{children:t}=e,n=x.useRef([]),r=x.useCallback(e=>{n.current=[...n.current,e]},[]),o=x.useCallback(e=>{n.current=n.current.filter(t=>t!==e)},[]),[a]=x.useState(()=>aA());return(0,b.jsx)(aC.Provider,{value:x.useMemo(()=>({nodesRef:n,addNode:r,removeNode:o,events:a}),[r,o,a]),children:t})}function aS(e){let{open:t=!1,onOpenChange:n,elements:r}=e,o=ab(),a=x.useRef({}),[i]=x.useState(()=>aA()),l=null!=a_(),[s,c]=x.useState(r.reference),u=af((e,t,r)=>{a.current.openEvent=e?t:void 0,i.emit(\"openchange\",{open:e,event:t,reason:r,nested:l}),n?.(e,t,r)}),d=x.useMemo(()=>({setPositionReference:c}),[]),f=x.useMemo(()=>({reference:s||r.reference||null,floating:r.floating||null,domReference:r.reference}),[s,r.reference,r.floating]);return x.useMemo(()=>({dataRef:a,open:t,onOpenChange:u,elements:f,events:i,floatingId:o,refs:d}),[t,u,f,i,o,d])}function aO(){return\"undefined\"!=typeof window}function aB(e){return az(e)?(e.nodeName||\"\").toLowerCase():\"#document\"}function aP(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function aI(e){var t;return null==(t=(az(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function az(e){return!!aO()&&(e instanceof Node||e instanceof aP(e).Node)}function aT(e){return!!aO()&&(e instanceof Element||e instanceof aP(e).Element)}function aD(e){return!!aO()&&(e instanceof HTMLElement||e instanceof aP(e).HTMLElement)}function aL(e){return!!aO()&&\"undefined\"!=typeof ShadowRoot&&(e instanceof ShadowRoot||e instanceof aP(e).ShadowRoot)}let aN=new Set([\"inline\",\"contents\"]);function aR(e){let{overflow:t,overflowX:n,overflowY:r,display:o}=aK(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&!aN.has(o)}let aM=new Set([\"table\",\"td\",\"th\"]),aZ=[\":popover-open\",\":modal\"];function aU(e){return aZ.some(t=>{try{return e.matches(t)}catch(e){return!1}})}let aF=[\"transform\",\"translate\",\"scale\",\"rotate\",\"perspective\"],aq=[\"transform\",\"translate\",\"scale\",\"rotate\",\"perspective\",\"filter\"],aH=[\"paint\",\"layout\",\"strict\",\"content\"];function aV(e){let t=a$(),n=aT(e)?aK(e):e;return aF.some(e=>!!n[e]&&\"none\"!==n[e])||!!n.containerType&&\"normal\"!==n.containerType||!t&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!t&&!!n.filter&&\"none\"!==n.filter||aq.some(e=>(n.willChange||\"\").includes(e))||aH.some(e=>(n.contain||\"\").includes(e))}function a$(){return\"undefined\"!=typeof CSS&&!!CSS.supports&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}let aW=new Set([\"html\",\"body\",\"#document\"]);function aY(e){return aW.has(aB(e))}function aK(e){return aP(e).getComputedStyle(e)}function aX(e){return aT(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function aG(e){if(\"html\"===aB(e))return e;let t=e.assignedSlot||e.parentNode||aL(e)&&e.host||aI(e);return aL(t)?t.host:t}function aQ(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);let o=function e(t){let n=aG(t);return aY(n)?t.ownerDocument?t.ownerDocument.body:t.body:aD(n)&&aR(n)?n:e(n)}(e),a=o===(null==(r=e.ownerDocument)?void 0:r.body),i=aP(o);if(a){let e=aJ(i);return t.concat(i,i.visualViewport||[],aR(o)?o:[],e&&n?aQ(e):[])}return t.concat(o,aQ(o,[],n))}function aJ(e){return e.parent&&Object.getPrototypeOf(e.parent)?e.frameElement:null}function a0(e){let t=aa(a1,e).current;return t.next=e,ax(t.effect),t}function a1(e){let t={current:e,next:e,effect:()=>{t.current=t.next}};return t}let a2=\"undefined\"!=typeof navigator,a4=function(){if(!a2)return{platform:\"\",maxTouchPoints:-1};let e=navigator.userAgentData;return e?.platform?{platform:e.platform,maxTouchPoints:navigator.maxTouchPoints}:{platform:navigator.platform??\"\",maxTouchPoints:navigator.maxTouchPoints??-1}}(),a5=function(){if(!a2)return\"\";let e=navigator.userAgentData;return e?.platform?e.platform:navigator.platform??\"\"}(),a3=function(){if(!a2)return\"\";let e=navigator.userAgentData;return e&&Array.isArray(e.brands)?e.brands.map(({brand:e,version:t})=>`${e}/${t}`).join(\" \"):navigator.userAgent}(),a6=\"undefined\"!=typeof CSS&&!!CSS.supports&&CSS.supports(\"-webkit-backdrop-filter:none\"),a9=\"MacIntel\"===a4.platform&&a4.maxTouchPoints>1||/iP(hone|ad|od)|iOS/.test(a4.platform);a2&&/firefox/i.test(a3);let a8=a2&&/apple/i.test(navigator.vendor),a7=a2&&/android/i.test(a5)||/android/i.test(a3),ie=a2&&a5.toLowerCase().startsWith(\"mac\")&&!navigator.maxTouchPoints,it=a3.includes(\"jsdom/\");function ir(e){e.preventDefault(),e.stopPropagation()}function io(e){return 0===e.mozInputSource&&!!e.isTrusted||(a7&&e.pointerType?\"click\"===e.type&&1===e.buttons:0===e.detail&&!e.pointerType)}function ia(e){return!it&&(!a7&&0===e.width&&0===e.height||a7&&1===e.width&&1===e.height&&0===e.pressure&&0===e.detail&&\"mouse\"===e.pointerType||e.width<1&&e.height<1&&0===e.pressure&&0===e.detail&&\"touch\"===e.pointerType)}function ii(e,t){let n=[\"mouse\",\"pen\"];return t||n.push(\"\",void 0),n.includes(e)}let il=\"data-base-ui-focusable\",is=\"active\",ic=\"selected\",iu=\"ArrowLeft\",id=\"ArrowRight\",ip=\"ArrowUp\",ih=\"ArrowDown\";function im(e){let t=e.activeElement;for(;t?.shadowRoot?.activeElement!=null;)t=t.shadowRoot.activeElement;return t}function ig(e,t){if(!e||!t)return!1;let n=t.getRootNode?.();if(e.contains(t))return!0;if(n&&aL(n)){let n=t;for(;n;){if(e===n)return!0;n=n.parentNode||n.host}}return!1}function iy(e){return\"composedPath\"in e?e.composedPath()[0]:e.target}function iv(e,t){return null!=t&&(\"composedPath\"in e?e.composedPath().includes(t):null!=e.target&&t.contains(e.target))}function ib(e){return e?.ownerDocument||document}function iA(e){return aD(e)&&e.matches(\"input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])\")}function ix(e){return!!e&&\"combobox\"===e.getAttribute(\"role\")&&iA(e)}function iw(e){return e?e.hasAttribute(il)?e:e.querySelector(`[${il}]`)||e:null}function iC(e){return`data-base-ui-${e}`}let i_=iC(\"safe-polygon\");function ik(e,t,n){if(n&&!ii(n))return 0;if(\"number\"==typeof e)return e;if(\"function\"==typeof e){let n=e();return\"number\"==typeof n?n:n?.[t]}return e?.[t]}function iE(e){return\"function\"==typeof e?e():e}function ij(e,t={}){let{open:n,onOpenChange:r,dataRef:o,events:a,elements:i}=e,{enabled:l=!0,delay:s=0,handleClose:c=null,mouseOnly:u=!1,restMs:d=0,move:f=!0}=t,p=ak(),h=a_(),m=a0(c),g=a0(s),y=a0(n),v=a0(d),b=x.useRef(void 0),A=ac(),w=x.useRef(void 0),C=ac(),_=x.useRef(!0),k=x.useRef(!1),E=x.useRef(()=>{}),j=x.useRef(!1),S=af(()=>{let e=o.current.openEvent?.type;return e?.includes(\"mouse\")&&\"mousedown\"!==e});x.useEffect(()=>{if(l)return a.on(\"openchange\",e),()=>{a.off(\"openchange\",e)};function e({open:e}){e||(A.clear(),C.clear(),_.current=!0,j.current=!1)}},[l,a,A,C]),x.useEffect(()=>{if(!l||!m.current||!n)return;function e(e){S()&&r(!1,e,\"hover\")}let t=ib(i.floating).documentElement;return t.addEventListener(\"mouseleave\",e),()=>{t.removeEventListener(\"mouseleave\",e)}},[i.floating,n,r,l,m,S]);let O=x.useCallback((e,t=!0,n=\"hover\")=>{let o=ik(g.current,\"close\",b.current);o&&!w.current?A.start(o,()=>r(!1,e,n)):t&&(A.clear(),r(!1,e,n))},[g,r,A]),B=af(()=>{E.current(),w.current=void 0}),P=af(()=>{if(k.current){let e=ib(i.floating).body;e.style.pointerEvents=\"\",e.removeAttribute(i_),k.current=!1}}),I=af(()=>!!o.current.openEvent&&[\"click\",\"mousedown\"].includes(o.current.openEvent.type));x.useEffect(()=>{if(l&&aT(i.domReference)){let r=i.domReference,o=i.floating;return n&&r.addEventListener(\"mouseleave\",a),f&&r.addEventListener(\"mousemove\",e,{once:!0}),r.addEventListener(\"mouseenter\",e),r.addEventListener(\"mouseleave\",t),o&&(o.addEventListener(\"mouseleave\",a),o.addEventListener(\"mouseenter\",s),o.addEventListener(\"mouseleave\",c)),()=>{n&&r.removeEventListener(\"mouseleave\",a),f&&r.removeEventListener(\"mousemove\",e),r.removeEventListener(\"mouseenter\",e),r.removeEventListener(\"mouseleave\",t),o&&(o.removeEventListener(\"mouseleave\",a),o.removeEventListener(\"mouseenter\",s),o.removeEventListener(\"mouseleave\",c))}}function e(e){if(A.clear(),_.current=!1,u&&!ii(b.current)||iE(v.current)>0&&!ik(g.current,\"open\"))return;let t=ik(g.current,\"open\",b.current);t?A.start(t,()=>{y.current||r(!0,e,\"hover\")}):n||r(!0,e,\"hover\")}function t(e){if(I())return void P();E.current();let t=ib(i.floating);if(C.clear(),j.current=!1,m.current&&o.current.floatingContext){n||A.clear(),w.current=m.current({...o.current.floatingContext,tree:p,x:e.clientX,y:e.clientY,onClose(){P(),B(),I()||O(e,!0,\"safe-polygon\")}});let r=w.current;t.addEventListener(\"mousemove\",r),E.current=()=>{t.removeEventListener(\"mousemove\",r)};return}\"touch\"===b.current&&ig(i.floating,e.relatedTarget)||O(e)}function a(e){!I()&&o.current.floatingContext&&m.current?.({...o.current.floatingContext,tree:p,x:e.clientX,y:e.clientY,onClose(){P(),B(),I()||O(e)}})(e)}function s(){A.clear()}function c(e){I()||O(e,!1)}},[i,l,e,u,f,O,B,P,r,n,y,p,g,m,o,I,v,A,C]),ax(()=>{if(l&&n&&m.current?.__options?.blockPointerEvents&&S()){k.current=!0;let e=i.floating;if(aT(i.domReference)&&e){let t=ib(i.floating).body;t.setAttribute(i_,\"\");let n=i.domReference,r=p?.nodesRef.current.find(e=>e.id===h)?.context?.elements.floating;return r&&(r.style.pointerEvents=\"\"),t.style.pointerEvents=\"none\",n.style.pointerEvents=\"auto\",e.style.pointerEvents=\"auto\",()=>{t.style.pointerEvents=\"\",n.style.pointerEvents=\"\",e.style.pointerEvents=\"\"}}}},[l,n,h,i,p,m,S]),ax(()=>{n||(b.current=void 0,j.current=!1,B(),P())},[n,B,P]),x.useEffect(()=>()=>{B(),A.clear(),C.clear(),P()},[l,i.domReference,B,P,A,C]);let z=x.useMemo(()=>{function e(e){b.current=e.pointerType}return{onPointerDown:e,onPointerEnter:e,onMouseMove(e){let{nativeEvent:t}=e;function o(){_.current||y.current||r(!0,t,\"hover\")}(!u||ii(b.current))&&!n&&0!==iE(v.current)&&(j.current&&e.movementX**2+e.movementY**2<2||(C.clear(),\"touch\"===b.current?o():(j.current=!0,C.start(iE(v.current),o))))}}},[u,r,n,y,v,C]);return x.useMemo(()=>l?{reference:z}:{},[l,z])}function iS(e,t,n=!0){return e.filter(e=>e.parentId===t&&(!n||e.context?.open)).flatMap(t=>[t,...iS(e,t.id,n)])}function iO(e,t){let n=[],r=e.find(e=>e.id===t)?.parentId;for(;r;){let t=e.find(e=>e.id===r);r=t?.parentId,t&&(n=n.concat(t))}return n}function iB(e,t){let[n,r]=e,o=!1,a=t.length;for(let e=0,i=a-1;e<a;i=e++){let[a,l]=t[e]||[0,0],[s,c]=t[i]||[0,0];l>=r!=c>=r&&n<=(s-a)*(r-l)/(c-l)+a&&(o=!o)}return o}function iP(e={}){let{buffer:t=.5,blockPointerEvents:n=!1,requireIntent:r=!0}=e,o=new as,a=!1,i=null,l=null,s=\"undefined\"!=typeof performance?performance.now():0,c=({x:e,y:n,placement:c,elements:u,onClose:d,nodeId:f,tree:p})=>function(h){var m,g;function y(){o.clear(),d()}if(o.clear(),!u.domReference||!u.floating||null==c||null==e||null==n)return;let{clientX:v,clientY:b}=h,A=[v,b],x=iy(h),w=\"mouseleave\"===h.type,C=ig(u.floating,x),_=ig(u.domReference,x),k=u.domReference.getBoundingClientRect(),E=u.floating.getBoundingClientRect(),j=c.split(\"-\")[0],S=e>E.right-E.width/2,O=n>E.bottom-E.height/2,B=(m=A,g=k,m[0]>=g.x&&m[0]<=g.x+g.width&&m[1]>=g.y&&m[1]<=g.y+g.height),P=E.width>k.width,I=E.height>k.height,z=(P?k:E).left,T=(P?k:E).right,D=(I?k:E).top,L=(I?k:E).bottom;if(C&&(a=!0,!w))return;if(_&&(a=!1),_&&!w){a=!0;return}if(w&&aT(h.relatedTarget)&&ig(u.floating,h.relatedTarget)||p&&iS(p.nodesRef.current,f).some(({context:e})=>e?.open))return;if(\"top\"===j&&n>=k.bottom-1||\"bottom\"===j&&n<=k.top+1||\"left\"===j&&e>=k.right-1||\"right\"===j&&e<=k.left+1)return y();let N=[];switch(j){case\"top\":N=[[z,k.top+1],[z,E.bottom-1],[T,E.bottom-1],[T,k.top+1]];break;case\"bottom\":N=[[z,E.top+1],[z,k.bottom-1],[T,k.bottom-1],[T,E.top+1]];break;case\"left\":N=[[E.right-1,L],[E.right-1,D],[k.left+1,D],[k.left+1,L]];break;case\"right\":N=[[k.right-1,L],[k.right-1,D],[E.left+1,D],[E.left+1,L]]}if(!iB([v,b],N)){if(a&&!B)return y();if(!w&&r){let e=function(e,t){let n=performance.now(),r=n-s;if(null===i||null===l||0===r)return i=e,l=t,s=n,null;let o=e-i,a=t-l,c=Math.sqrt(o*o+a*a);return i=e,l=t,s=n,c/r}(h.clientX,h.clientY);if(null!==e&&e<.1)return y()}iB([v,b],function([e,n]){switch(j){case\"top\":{let r=[[E.left,S||P?E.bottom-t:E.top],[E.right,S?P?E.bottom-t:E.top:E.bottom-t]];return[[P?e+t/2:S?e+4*t:e-4*t,n+t+1],[P?e-t/2:S?e+4*t:e-4*t,n+t+1],...r]}case\"bottom\":{let r=[[E.left,S||P?E.top+t:E.bottom],[E.right,S?P?E.top+t:E.bottom:E.top+t]];return[[P?e+t/2:S?e+4*t:e-4*t,n-t],[P?e-t/2:S?e+4*t:e-4*t,n-t],...r]}case\"left\":return[[O||I?E.right-t:E.left,E.top],[O?I?E.right-t:E.left:E.right-t,E.bottom],[e+t+1,I?n+t/2:O?n+4*t:n-4*t],[e+t+1,I?n-t/2:O?n+4*t:n-4*t]];case\"right\":{let r=[[O||I?E.left+t:E.right,E.top],[O?I?E.left+t:E.right:E.left+t,E.bottom]];return[[e-t,I?n+t/2:O?n+4*t:n-4*t],[e-t,I?n-t/2:O?n+4*t:n-4*t],...r]}default:return[]}}([e,n]))?!a&&r&&o.start(40,y):y()}};return c.__options={blockPointerEvents:n},c}let iI=ie&&a8;function iz(e,t={}){let{open:n,onOpenChange:r,events:o,dataRef:a,elements:i}=e,{enabled:l=!0,visibleOnly:s=!0}=t,c=x.useRef(!1),u=ac(),d=x.useRef(!0);x.useEffect(()=>{if(!l)return;let e=aP(i.domReference);function t(){!n&&aD(i.domReference)&&i.domReference===im(ib(i.domReference))&&(c.current=!0)}function r(){d.current=!0}function o(){d.current=!1}return e.addEventListener(\"blur\",t),iI&&(e.addEventListener(\"keydown\",r,!0),e.addEventListener(\"pointerdown\",o,!0)),()=>{e.removeEventListener(\"blur\",t),iI&&(e.removeEventListener(\"keydown\",r,!0),e.removeEventListener(\"pointerdown\",o,!0))}},[i.domReference,n,l]),x.useEffect(()=>{if(l)return o.on(\"openchange\",e),()=>{o.off(\"openchange\",e)};function e({reason:e}){(\"reference-press\"===e||\"escape-key\"===e)&&(c.current=!0)}},[o,l]);let f=x.useMemo(()=>({onMouseLeave(){c.current=!1},onFocus(e){if(c.current)return;let t=iy(e.nativeEvent);if(s&&aT(t)){if(iI&&!e.relatedTarget){if(!d.current&&!iA(t))return}else if(!function(e){if(!e||it)return!0;try{return e.matches(\":focus-visible\")}catch(e){return!0}}(t))return}r(!0,e.nativeEvent,\"focus\")},onBlur(e){c.current=!1;let t=e.relatedTarget,n=e.nativeEvent,o=aT(t)&&t.hasAttribute(iC(\"focus-guard\"))&&\"outside\"===t.getAttribute(\"data-type\");u.start(0,()=>{let e=im(i.domReference?i.domReference.ownerDocument:document);(t||e!==i.domReference)&&(ig(a.current.floatingContext?.refs.floating.current,e)||ig(i.domReference,e)||o||r(!1,n,\"focus\"))})}}),[a,i.domReference,r,s,u]);return x.useMemo(()=>l?{reference:f}:{},[l,f])}globalThis.requestAnimationFrame;let iT=new class{callbacks=[];callbacksCount=0;nextId=1;startId=1;isScheduled=!1;tick=e=>{this.isScheduled=!1;let t=this.callbacks,n=this.callbacksCount;if(this.callbacks=[],this.callbacksCount=0,this.startId=this.nextId,n>0)for(let n=0;n<t.length;n+=1)t[n]?.(e)};request(e){let t=this.nextId;return this.nextId+=1,this.callbacks.push(e),this.callbacksCount+=1,this.isScheduled||(requestAnimationFrame(this.tick),this.isScheduled=!0),t}cancel(e){let t=e-this.startId;t<0||t>=this.callbacks.length||(this.callbacks[t]=null,this.callbacksCount-=1)}};class iD{static create(){return new iD}static request(e){return iT.request(e)}static cancel(e){return iT.cancel(e)}currentId=null;request(e){this.cancel(),this.currentId=iT.request(()=>{this.currentId=null,e()})}cancel=()=>{null!==this.currentId&&(iT.cancel(this.currentId),this.currentId=null)};disposeEffect=()=>this.cancel}function iL(){let e=aa(iD.create).current;return al(e.disposeEffect),e}let iN={style:{transition:\"none\"}},iR={},iM=[],iZ={fallbackAxisSide:\"none\"},iU={fallbackAxisSide:\"end\"},iF={intentional:\"onClick\",sloppy:\"onPointerDown\"};function iq(e){return{escapeKey:\"boolean\"==typeof e?e:e?.escapeKey??!1,outsidePress:\"boolean\"==typeof e?e:e?.outsidePress??!0}}function iH(e,t={}){let{open:n,onOpenChange:r,elements:o,dataRef:a}=e,{enabled:i=!0,escapeKey:l=!0,outsidePress:s=!0,outsidePressEvent:c=\"sloppy\",referencePress:u=!1,referencePressEvent:d=\"sloppy\",ancestorScroll:f=!1,bubbles:p,capture:h}=t,m=ak(),g=af(\"function\"==typeof s?s:()=>!1),y=\"function\"==typeof s?g:s,v=x.useRef(!1),{escapeKey:b,outsidePress:A}=iq(p),{escapeKey:w,outsidePress:C}=iq(h),_=x.useRef(null),k=ac(),E=ac(),j=x.useRef(!1),S=x.useRef(\"\"),O=af(e=>{S.current=e.pointerType}),B=af(()=>{let e=S.current;return\"string\"==typeof c?c:c[\"pen\"!==e&&e?e:\"mouse\"]}),P=af(e=>{if(!n||!i||!l||\"Escape\"!==e.key||j.current)return;let t=a.current.floatingContext?.nodeId,o=m?iS(m.nodesRef.current,t):[];if(!b&&(e.stopPropagation(),o.length>0)){let e=!0;if(o.forEach(t=>{t.context?.open&&!t.context.dataRef.current.__escapeKeyBubbles&&(e=!1)}),!e)return}r(!1,\"nativeEvent\"in e?e.nativeEvent:e,\"escape-key\")}),I=af(e=>{let t=B();return\"intentional\"===t&&\"click\"!==e.type||\"sloppy\"===t&&\"click\"===e.type}),z=af(e=>{let t=()=>{P(e),iy(e)?.removeEventListener(\"keydown\",t)};iy(e)?.addEventListener(\"keydown\",t)}),T=af(e=>{if(I(e))return;let t=a.current.insideReactTree;a.current.insideReactTree=!1;let n=v.current;if(v.current=!1,\"intentional\"===B()&&n||t||\"function\"==typeof y&&!y(e))return;let i=iy(e),l=`[${iC(\"inert\")}]`,s=ib(o.floating).querySelectorAll(l),c=aT(i)?i:null;for(;c&&!aY(c);){let e=aG(c);if(aY(e)||!aT(e))break;c=e}if(s.length&&aT(i)&&!i.matches(\"html,body\")&&!ig(i,o.floating)&&Array.from(s).every(e=>!ig(c,e)))return;if(aD(i)){let t=aY(i),n=aK(i),r=/auto|scroll/,o=t||r.test(n.overflowX),a=t||r.test(n.overflowY),l=o&&i.clientWidth>0&&i.scrollWidth>i.clientWidth,s=a&&i.clientHeight>0&&i.scrollHeight>i.clientHeight,c=\"rtl\"===n.direction,u=s&&(c?e.offsetX<=i.offsetWidth-i.clientWidth:e.offsetX>i.clientWidth),d=l&&e.offsetY>i.clientHeight;if(u||d)return}let u=a.current.floatingContext?.nodeId,d=m&&iS(m.nodesRef.current,u).some(t=>iv(e,t.context?.elements.floating));if(iv(e,o.floating)||iv(e,o.domReference)||d)return;let f=m?iS(m.nodesRef.current,u):[];if(f.length>0){let e=!0;if(f.forEach(t=>{t.context?.open&&!t.context.dataRef.current.__outsidePressBubbles&&(e=!1)}),!e)return}r(!1,e,\"outside-press\")}),D=af(e=>{if(!(\"sloppy\"!==B()||!n||!i||iv(e,o.floating)||iv(e,o.domReference))){if(\"touch\"===e.pointerType){_.current={startTime:Date.now(),startX:e.clientX,startY:e.clientY,dismissOnPointerUp:!1,dismissOnMouseDown:!0},k.start(1e3,()=>{_.current&&(_.current.dismissOnPointerUp=!1,_.current.dismissOnMouseDown=!1)});return}T(e)}}),L=af(e=>{if(I(e)||(k.clear(),\"mousedown\"===e.type&&_.current&&!_.current.dismissOnMouseDown))return;let t=()=>{\"pointerdown\"===e.type?D(e):T(e),iy(e)?.removeEventListener(e.type,t)};iy(e)?.addEventListener(e.type,t)}),N=af(e=>{if(\"sloppy\"!==B()||\"touch\"!==e.pointerType||!_.current||iv(e,o.floating)||iv(e,o.domReference))return;let t=Math.abs(e.clientX-_.current.startX),n=Math.abs(e.clientY-_.current.startY),r=Math.sqrt(t*t+n*n);r>5&&(_.current.dismissOnPointerUp=!0),r>10&&(T(e),k.clear(),_.current=null)}),R=af(e=>{\"sloppy\"!==B()||\"touch\"!==e.pointerType||!_.current||iv(e,o.floating)||iv(e,o.domReference)||(_.current.dismissOnPointerUp&&T(e),k.clear(),_.current=null)});x.useEffect(()=>{if(!n||!i)return;a.current.__escapeKeyBubbles=b,a.current.__outsidePressBubbles=A;let e=new as;function t(e){r(!1,e,\"ancestor-scroll\")}function s(){e.clear(),j.current=!0}function c(){e.start(5*!!a$(),()=>{j.current=!1})}let u=ib(o.floating);u.addEventListener(\"pointerdown\",O,!0),l&&(u.addEventListener(\"keydown\",w?z:P,w),u.addEventListener(\"compositionstart\",s),u.addEventListener(\"compositionend\",c)),y&&(u.addEventListener(\"click\",C?L:T,C),u.addEventListener(\"pointerdown\",C?L:T,C),u.addEventListener(\"pointermove\",N,C),u.addEventListener(\"pointerup\",R,C),u.addEventListener(\"mousedown\",L,C));let d=[];return f&&(aT(o.domReference)&&(d=aQ(o.domReference)),aT(o.floating)&&(d=d.concat(aQ(o.floating))),!aT(o.reference)&&o.reference&&o.reference.contextElement&&(d=d.concat(aQ(o.reference.contextElement)))),(d=d.filter(e=>e!==u.defaultView?.visualViewport)).forEach(e=>{e.addEventListener(\"scroll\",t,{passive:!0})}),()=>{u.removeEventListener(\"pointerdown\",O,!0),l&&(u.removeEventListener(\"keydown\",w?z:P,w),u.removeEventListener(\"compositionstart\",s),u.removeEventListener(\"compositionend\",c)),y&&(u.removeEventListener(\"click\",C?L:T,C),u.removeEventListener(\"pointerdown\",C?L:T,C),u.removeEventListener(\"pointermove\",N,C),u.removeEventListener(\"pointerup\",R,C),u.removeEventListener(\"mousedown\",L,C)),d.forEach(e=>{e.removeEventListener(\"scroll\",t)}),e.clear()}},[a,o,l,y,c,n,r,f,i,b,A,P,w,z,T,C,L,D,N,R,O]),x.useEffect(()=>{a.current.insideReactTree=!1},[a,y]);let M=x.useMemo(()=>({onKeyDown:P,...u&&{[iF[d]]:e=>{r(!1,e.nativeEvent,\"reference-press\")},...\"intentional\"!==d&&{onClick(e){r(!1,e.nativeEvent,\"reference-press\")}}}}),[P,r,u,d]),Z=af(e=>{let t=iy(e.nativeEvent);ig(o.floating,t)&&(v.current=!0)}),U=af(()=>{a.current.insideReactTree=!0,E.start(0,()=>{a.current.insideReactTree=!1})}),F=x.useMemo(()=>({onKeyDown:P,onMouseDown:Z,onMouseUp:Z,onPointerDownCapture:U,onMouseDownCapture:U,onClickCapture:U}),[P,Z,U]);return x.useMemo(()=>i?{reference:M,floating:F}:{},[i,M,F])}let iV=new Map([[\"select\",\"listbox\"],[\"combobox\",\"listbox\"],[\"label\",!1]]),i$=[\"top\",\"right\",\"bottom\",\"left\"],iW=Math.min,iY=Math.max,iK=Math.round,iX=Math.floor,iG=e=>({x:e,y:e}),iQ={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},iJ={start:\"end\",end:\"start\"};function i0(e,t){return\"function\"==typeof e?e(t):e}function i1(e){return e.split(\"-\")[0]}function i2(e){return e.split(\"-\")[1]}function i4(e){return\"x\"===e?\"y\":\"x\"}function i5(e){return\"y\"===e?\"height\":\"width\"}let i3=new Set([\"top\",\"bottom\"]);function i6(e){return i3.has(i1(e))?\"y\":\"x\"}function i9(e){return e.replace(/start|end/g,e=>iJ[e])}let i8=[\"left\",\"right\"],i7=[\"right\",\"left\"],le=[\"top\",\"bottom\"],lt=[\"bottom\",\"top\"];function ln(e){return e.replace(/left|right|bottom|top/g,e=>iQ[e])}function lr(e){return\"number\"!=typeof e?{top:0,right:0,bottom:0,left:0,...e}:{top:e,right:e,bottom:e,left:e}}function lo(e){let{x:t,y:n,width:r,height:o}=e;return{width:r,height:o,top:n,left:t,right:t+r,bottom:n+o,x:t,y:n}}function la(e,t,n){return Math.floor(e/t)!==n}function li(e,t){return t<0||t>=e.current.length}function ll(e,t){return lc(e,{disabledIndices:t})}function ls(e,t){return lc(e,{decrement:!0,startingIndex:e.current.length,disabledIndices:t})}function lc(e,{startingIndex:t=-1,decrement:n=!1,disabledIndices:r,amount:o=1}={}){let a=t;do a+=n?-o:o;while(a>=0&&a<=e.current.length-1&&lu(e,a,r));return a}function lu(e,t,n){if(\"function\"==typeof n)return n(t);if(n)return n.includes(t);let r=e.current[t];return null==r||r.hasAttribute(\"disabled\")||\"true\"===r.getAttribute(\"aria-disabled\")}let ld=0;function lf(e,t={}){let{preventScroll:n=!1,cancelPrevious:r=!0,sync:o=!1}=t;r&&cancelAnimationFrame(ld);let a=()=>e?.focus({preventScroll:n});o?a():ld=requestAnimationFrame(a)}function lp(e,t,n){switch(e){case\"vertical\":return t;case\"horizontal\":return n;default:return t||n}}function lh(e,t){return lp(t,e===ip||e===ih,e===iu||e===id)}function lm(e,t,n){return lp(t,e===ih,n?e===iu:e===id)||\"Enter\"===e||\" \"===e||\"\"===e}function lg(e=[]){let t=e.map(e=>e?.reference),n=e.map(e=>e?.floating),r=e.map(e=>e?.item),o=x.useCallback(t=>ly(t,e,\"reference\"),t),a=x.useCallback(t=>ly(t,e,\"floating\"),n),i=x.useCallback(t=>ly(t,e,\"item\"),r);return x.useMemo(()=>({getReferenceProps:o,getFloatingProps:a,getItemProps:i}),[o,a,i])}function ly(e,t,n){let r=new Map,o=\"item\"===n,a={};for(let t in\"floating\"===n&&(a.tabIndex=-1,a[il]=\"\"),e)o&&e&&(t===is||t===ic)||(a[t]=e[t]);for(let i=0;i<t.length;i+=1){let l,s=t[i]?.[n];(l=\"function\"==typeof s?e?s(e):null:s)&&lv(a,l,o,r)}return lv(a,e,o,r),a}function lv(e,t,n,r){for(let o in t){let a=t[o];n&&(o===is||o===ic)||(o.startsWith(\"on\")?(r.has(o)||r.set(o,[]),\"function\"==typeof a&&(r.get(o)?.push(a),e[o]=(...e)=>r.get(o)?.map(t=>t(...e)).find(e=>void 0!==e))):e[o]=a)}}let lb=x.createContext(void 0);function lA(e){let t=x.useContext(lb);if(void 0===t&&!e)throw Error(\"Base UI: MenuRootContext is missing. Menu parts must be placed within <Menu.Root>.\");return t}let lx=x.createContext(null);function lw(e,t=!1,n=!1){let[r,o]=x.useState(e&&t?\"idle\":void 0),[a,i]=x.useState(e);return e&&!a&&(i(!0),o(\"starting\")),e||!a||\"ending\"===r||n||o(\"ending\"),e||a||\"ending\"!==r||o(void 0),ax(()=>{if(!e&&a&&\"ending\"!==r&&n){let e=iD.request(()=>{o(\"ending\")});return()=>{iD.cancel(e)}}},[e,a,r,n]),ax(()=>{if(!e||t)return;let n=iD.request(()=>{ef.flushSync(()=>{o(void 0)})});return()=>{iD.cancel(n)}},[t,e]),ax(()=>{if(!e||!t)return;e&&a&&\"idle\"!==r&&o(\"starting\");let n=iD.request(()=>{o(\"idle\")});return()=>{iD.cancel(n)}},[t,e,a,o,r]),x.useMemo(()=>({mounted:a,setMounted:i,transitionStatus:r}),[a,r])}function lC(e){let{enabled:t=!0,open:n,ref:r,onComplete:o}=e,a=a0(n),i=af(o),l=function(e,t=!1){let n=iL();return af((r,o=null)=>{let a;if(n.cancel(),null!=e){if(\"current\"in e){if(null==e.current)return;a=e.current}else a=e;\"function\"!=typeof a.getAnimations||globalThis.BASE_UI_ANIMATIONS_DISABLED?r():n.request(()=>{function e(){a&&Promise.allSettled(a.getAnimations().map(e=>e.finished)).then(()=>{null!=o&&o.aborted||ef.flushSync(r)})}t?n.request(e):e()})}})}(r,n);x.useEffect(()=>{t&&l(()=>{n===a.current&&i()})},[t,n,i,l,a])}let l_=x.createContext(void 0);function lk(e=!0){let t=x.useContext(l_);if(void 0===t&&!e)throw Error(\"Base UI: DirectionContext is missing.\");return t?.direction??\"ltr\"}function lE(e){return e?.ownerDocument||document}let lj=()=>{},lS={},lO={},lB=\"\";class lP{lockCount=0;restore=null;timeoutLock=as.create();timeoutUnlock=as.create();acquire(e){return this.lockCount+=1,1===this.lockCount&&null===this.restore&&this.timeoutLock.start(0,()=>this.lock(e)),this.release}release=()=>{this.lockCount-=1,0===this.lockCount&&this.restore&&this.timeoutUnlock.start(0,this.unlock)};unlock=()=>{0===this.lockCount&&this.restore&&(this.restore?.(),this.restore=null)};lock(e){if(0===this.lockCount||null!==this.restore)return;let t=lE(e).documentElement,n=aP(t).getComputedStyle(t).overflowY;if(\"hidden\"===n||\"clip\"===n){this.restore=lj;return}let r=a9||!function(e){if(\"undefined\"==typeof document)return!1;let t=lE(e);return aP(t).innerWidth-t.documentElement.clientWidth>0}(e);this.restore=r?function(e){let t=lE(e).documentElement,n=t.style.overflow;return t.style.overflow=\"hidden\",()=>{t.style.overflow=n}}(e):function(e){let t=lE(e),n=t.documentElement,r=t.body,o=aP(n),a=0,i=0,l=iD.create();if(a6&&(o.visualViewport?.scale??1)!==1)return()=>{};function s(){let e=o.getComputedStyle(n),t=o.getComputedStyle(r);a=n.scrollTop,i=n.scrollLeft,lS={scrollbarGutter:n.style.scrollbarGutter,overflowY:n.style.overflowY,overflowX:n.style.overflowX},lB=n.style.scrollBehavior,lO={position:r.style.position,height:r.style.height,width:r.style.width,boxSizing:r.style.boxSizing,overflowY:r.style.overflowY,overflowX:r.style.overflowX,scrollBehavior:r.style.scrollBehavior};let l=\"undefined\"!=typeof CSS&&CSS.supports?.(\"scrollbar-gutter\",\"stable\"),s=n.scrollHeight>n.clientHeight,c=n.scrollWidth>n.clientWidth,u=\"scroll\"===e.overflowY||\"scroll\"===t.overflowY,d=\"scroll\"===e.overflowX||\"scroll\"===t.overflowX,f=Math.max(0,o.innerWidth-n.clientWidth),p=Math.max(0,o.innerHeight-n.clientHeight),h=parseFloat(t.marginTop)+parseFloat(t.marginBottom),m=parseFloat(t.marginLeft)+parseFloat(t.marginRight);Object.assign(n.style,{scrollbarGutter:\"stable\",overflowY:!l&&(s||u)?\"scroll\":\"hidden\",overflowX:!l&&(c||d)?\"scroll\":\"hidden\"}),Object.assign(r.style,{position:\"relative\",height:h||p?`calc(100dvh - ${h+p}px)`:\"100dvh\",width:m||f?`calc(100vw - ${m+f}px)`:\"100vw\",boxSizing:\"border-box\",overflow:\"hidden\",scrollBehavior:\"unset\"}),r.scrollTop=a,r.scrollLeft=i,n.setAttribute(\"data-base-ui-scroll-locked\",\"\"),n.style.scrollBehavior=\"unset\"}function c(){Object.assign(n.style,lS),Object.assign(r.style,lO),n.scrollTop=a,n.scrollLeft=i,n.removeAttribute(\"data-base-ui-scroll-locked\"),n.style.scrollBehavior=lB}function u(){c(),l.request(s)}return s(),o.addEventListener(\"resize\",u),()=>{l.cancel(),c(),o.removeEventListener(\"resize\",u)}}(e)}}let lI=new lP;function lz(e){if(e)return({\"focus-out\":\"focus-out\",\"escape-key\":\"escape-key\",\"outside-press\":\"outside-press\",\"list-navigation\":\"list-navigation\",click:\"trigger-press\",hover:\"trigger-hover\",focus:\"trigger-focus\",\"reference-press\":\"trigger-press\",\"safe-polygon\":\"trigger-hover\",\"ancestor-scroll\":void 0})[e]}let lT=x.createContext(void 0);function lD(e=!0){let t=x.useContext(lT);if(void 0===t&&!e)throw Error(\"Base UI: ContextMenuRootContext is missing. ContextMenu parts must be placed within <ContextMenu.Root>.\");return t}let lL=x.createContext(!1);function lN(e,t){return e&&!t?e:!e&&t?t:e||t?{...e,...t}:void 0}let lR={};function lM(e,t,n,r,o){let a={...lF(e,lR)};return t&&(a=lZ(a,t)),n&&(a=lZ(a,n)),r&&(a=lZ(a,r)),o&&(a=lZ(a,o)),a}function lZ(e,t){return lU(t)?t(e):function(e,t){if(!t)return e;for(let n in t){let r=t[n];switch(n){case\"style\":e[n]=lN(e.style,r);break;case\"className\":e[n]=lH(e.className,r);break;default:!function(e,t){let n=e.charCodeAt(0),r=e.charCodeAt(1),o=e.charCodeAt(2);return 111===n&&110===r&&o>=65&&o<=90&&(\"function\"==typeof t||void 0===t)}(n,r)?e[n]=r:e[n]=function(e,t){return t?e?n=>{var r;if(null!=(r=n)&&\"object\"==typeof r&&\"nativeEvent\"in r){lq(n);let r=t(n);return n.baseUIHandlerPrevented||e?.(n),r}let o=t(n);return e?.(n),o}:t:e}(e[n],r)}}return e}(e,t)}function lU(e){return\"function\"==typeof e}function lF(e,t){return lU(e)?e(t):e??lR}function lq(e){return e.preventBaseUIHandler=()=>{e.baseUIHandlerPrevented=!0},e}function lH(e,t){return t?e?t+\" \"+e:t:e}let lV=[],l$={current:!1},lW=function(e){let t,n,{children:r,open:o,onOpenChange:a,onOpenChangeComplete:i,defaultOpen:l=!1,disabled:s=!1,modal:c,loop:u=!0,orientation:d=\"vertical\",actionsRef:f,openOnHover:p,delay:h=100,closeDelay:m=0,closeParentOnEsc:g=!0}=e,[y,v]=x.useState(null),[A,w]=x.useState(null),[C,_]=x.useState(),[k,E]=x.useState(!0),[j,S]=x.useState(null),[O,B]=x.useState(null),[P,I]=x.useState(!0),[z,T]=x.useState(!1),D=x.useRef(null),L=x.useRef(null),N=x.useRef(null),R=x.useRef([]),M=x.useRef([]),Z=ac(),U=lD(!0),F=x.useContext(lL);{let e=lA(!0),n=function(e){let t=x.useContext(lx);if(null===t&&!e)throw Error(\"Base UI: MenubarContext is missing. Menubar parts must be placed within <Menubar>.\");return t}(!0);t=F&&e?{type:\"menu\",context:e}:n?{type:\"menubar\",context:n}:U?{type:\"context-menu\",context:U}:{type:void 0}}let q=ab();void 0!==t.type&&(q=t.context.rootId);let H=(void 0===t.type||\"context-menu\"===t.type)&&(c??!0),V=\"menu\"===t.type?t.context.allowMouseEnter:z,$=\"menu\"===t.type?t.context.setAllowMouseEnter:T,W=p??(\"menu\"===t.type||\"menubar\"===t.type&&t.context.hasSubmenuOpen),[Y,K]=am({controlled:o,default:l,name:\"MenuRoot\",state:\"open\"}),X=x.useRef(\"context-menu\"!==t.type),G=ac();x.useEffect(()=>{if(Y||(D.current=null),\"context-menu\"===t.type){if(!Y){G.clear(),X.current=!1;return}G.start(500,()=>{X.current=!0})}},[G,Y,t.type]);let Q=x.useCallback(e=>{N.current=e,w(e)},[]),{mounted:J,setMounted:ee,transitionStatus:et}=lw(Y),{openMethod:en,triggerProps:er,reset:eo}=function(e){let[t,n]=x.useState(null),r=af((t,r)=>{e||n(r)}),o=af(()=>{n(null)}),{onClick:a,onPointerDown:i}=function(e){let t=x.useRef(\"\"),n=x.useCallback(n=>{n.defaultPrevented||(t.current=n.pointerType,e(n,n.pointerType))},[e]);return{onClick:x.useCallback(n=>{if(0===n.detail)return void e(n,\"keyboard\");\"pointerType\"in n&&e(n,n.pointerType),e(n,t.current),t.current=\"\"},[e]),onPointerDown:n}}(r);return x.useMemo(()=>({openMethod:t,reset:o,triggerProps:{onClick:a,onPointerDown:i}}),[t,o,a,i])}(Y);var ea={enabled:Y&&H&&\"trigger-hover\"!==O&&\"touch\"!==en,mounted:J,open:Y,referenceElement:A};let{enabled:ei=!0,mounted:el,open:es,referenceElement:ec=null}=ea;ax(()=>{if(ei&&a6&&el&&!es){let e=lE(ec),t=e.body.style.userSelect,n=e.body.style.webkitUserSelect;return e.body.style.userSelect=\"none\",e.body.style.webkitUserSelect=\"none\",()=>{e.body.style.userSelect=t,e.body.style.webkitUserSelect=n}}},[ei,el,es,ec]),ax(()=>{if(ei)return lI.acquire(ec)},[ei,ec]),Y||k||E(!0);let eu=af(()=>{ee(!1),I(!0),$(!1),i?.(!1),eo()});lC({enabled:!f,open:Y,ref:L,onComplete(){Y||eu()}});let ed=x.useRef(!0),ep=ac(),eh=af((e,n,r)=>{if(Y===e||!1===e&&n?.type===\"click\"&&\"touch\"===n.pointerType&&!ed.current)return;if(!e&&null!==j){let e=R.current[j];queueMicrotask(()=>{e?.setAttribute(\"tabindex\",\"-1\")})}e&&\"trigger-focus\"===r?(ed.current=!1,ep.start(300,()=>{ed.current=!0})):(ed.current=!0,ep.clear());let o=(\"trigger-press\"===r||\"item-press\"===r)&&0===n.detail&&n?.isTrusted,i=!e&&(\"escape-key\"===r||null==r);function l(){a?.(e,n,r),K(e),B(r??null),D.current=n??null}\"trigger-hover\"===r?(I(!0),Z.start(500,()=>{I(!1)}),ef.flushSync(l)):l(),\"menubar\"===t.type&&(\"trigger-focus\"===r||\"focus-out\"===r||\"trigger-hover\"===r||\"list-navigation\"===r||\"sibling-open\"===r)?_(\"group\"):o||i?_(o?\"click\":\"dismiss\"):_(void 0)});x.useImperativeHandle(f,()=>({unmount:eu}),[eu]),\"context-menu\"===t.type&&(n=t.context),x.useImperativeHandle(n?.positionerRef,()=>A,[A]),x.useImperativeHandle(n?.actionsRef,()=>({setOpen:eh}),[eh]),x.useEffect(()=>{Y||Z.clear()},[Z,Y]);let em=aS({elements:{reference:y,floating:A},open:Y,onOpenChange(e,t,n){eh(e,t,lz(n))}}),eg=ij(em,{enabled:k&&W&&!s&&\"context-menu\"!==t.type&&(\"menubar\"!==t.type||t.context.hasSubmenuOpen&&!Y),handleClose:iP({blockPointerEvents:!0}),mouseOnly:!0,move:\"menu\"===t.type,restMs:void 0===t.type||\"menu\"===t.type&&V?h:void 0,delay:\"menu\"===t.type?{open:V?h:1e10,close:m}:{close:m}}),ey=iz(em,{enabled:!s&&!Y&&\"menubar\"===t.type&&t.context.hasSubmenuOpen&&!U}),ev=function(e,t={}){let{open:n,onOpenChange:r,dataRef:o}=e,{enabled:a=!0,event:i=\"click\",toggle:l=!0,ignoreMouse:s=!1,stickIfOpen:c=!0}=t,u=x.useRef(void 0),d=iL(),f=x.useMemo(()=>({onPointerDown(e){u.current=e.pointerType},onMouseDown(e){let t=u.current,a=e.nativeEvent;if(0!==e.button||\"click\"===i||ii(t,!0)&&s)return;let f=o.current.openEvent,p=f?.type,h=!(n&&l&&(!f||!c||\"click\"===p||\"mousedown\"===p));d.request(()=>{r(h,a,\"click\")})},onClick(e){let t=u.current;if(\"mousedown\"===i&&t){u.current=void 0;return}if(ii(t,!0)&&s)return;let a=o.current.openEvent,d=a?.type;r(!(n&&l&&(!a||!c||\"click\"===d||\"mousedown\"===d||\"keydown\"===d||\"keyup\"===d)),e.nativeEvent,\"click\")},onKeyDown(){u.current=void 0}}),[o,i,s,r,n,c,l,d]);return x.useMemo(()=>a?{reference:f}:iR,[a,f])}(em,{enabled:!s&&\"context-menu\"!==t.type,event:Y&&\"menubar\"===t.type?\"click\":\"mousedown\",toggle:!W||\"menu\"!==t.type,ignoreMouse:W&&\"menu\"===t.type,stickIfOpen:void 0===t.type&&P}),eb=iH(em,{enabled:!s,bubbles:g&&\"menu\"===t.type,outsidePress:()=>\"context-menu\"!==t.type||D.current?.type===\"contextmenu\"||X.current}),eA=function(e,t={}){let{open:n,elements:r,floatingId:o}=e,{enabled:a=!0,role:i=\"dialog\"}=t,l=ab(),s=r.domReference?.id||l,c=x.useMemo(()=>iw(r.floating)?.id||o,[r.floating,o]),u=iV.get(i)??i,d=null!=a_(),f=x.useMemo(()=>\"tooltip\"===u||\"label\"===i?{[`aria-${\"label\"===i?\"labelledby\":\"describedby\"}`]:n?c:void 0}:{\"aria-expanded\":n?\"true\":\"false\",\"aria-haspopup\":\"alertdialog\"===u?\"dialog\":u,\"aria-controls\":n?c:void 0,...\"listbox\"===u&&{role:\"combobox\"},...\"menu\"===u&&{id:s},...\"menu\"===u&&d&&{role:\"menuitem\"},...\"select\"===i&&{\"aria-autocomplete\":\"none\"},...\"combobox\"===i&&{\"aria-autocomplete\":\"list\"}},[u,c,d,n,s,i]),p=x.useMemo(()=>{let e={id:c,...u&&{role:u}};return\"tooltip\"===u||\"label\"===i?e:{...e,...\"menu\"===u&&{\"aria-labelledby\":s}}},[u,c,s,i]),h=x.useCallback(({active:e,selected:t})=>{let n={role:\"option\",...e&&{id:`${c}-fui-option`}};switch(i){case\"select\":case\"combobox\":return{...n,\"aria-selected\":t}}return{}},[c,i]);return x.useMemo(()=>a?{reference:f,floating:p,item:h}:{},[a,f,p,h])}(em,{role:\"menu\"}),ex=lk(),ew=function(e,t){let{open:n,onOpenChange:r,elements:o,floatingId:a}=e,{listRef:i,activeIndex:l,onNavigate:s=()=>{},enabled:c=!0,selectedIndex:u=null,allowEscape:d=!1,loop:f=!1,nested:p=!1,rtl:h=!1,virtual:m=!1,focusItemOnOpen:g=\"auto\",focusItemOnHover:y=!0,openOnArrowKeyDown:v=!0,disabledIndices:b,orientation:A=\"vertical\",parentOrientation:w,cols:C=1,scrollItemIntoView:_=!0,virtualItemRef:k,itemSizes:E,dense:j=!1}=t,S=a0(iw(o.floating)),O=a_(),B=ak();ax(()=>{e.dataRef.current.orientation=A},[e,A]);let P=ix(o.domReference),I=x.useRef(g),z=x.useRef(u??-1),T=x.useRef(null),D=x.useRef(!0),L=af(()=>{s(-1===z.current?null:z.current)}),N=x.useRef(L),R=x.useRef(!!o.floating),M=x.useRef(n),Z=x.useRef(!1),U=x.useRef(!1),F=a0(b),q=a0(n),H=a0(_),V=a0(u),[$,W]=x.useState(),Y=af(()=>{function e(e){m?(e.id?.endsWith(\"-fui-option\")&&(e.id=`${a}-${Math.random().toString(16).slice(2,10)}`),W(e.id),B?.events.emit(\"virtualfocus\",e),k&&(k.current=e)):lf(e,{sync:Z.current,preventScroll:!0})}let t=i.current[z.current],n=U.current;t&&e(t),(Z.current?e=>e():requestAnimationFrame)(()=>{let r=i.current[z.current]||t;if(!r)return;t||e(r);let o=H.current;o&&X&&(n||!D.current)&&r.scrollIntoView?.(\"boolean\"==typeof o?{block:\"nearest\",inline:\"nearest\"}:o)})});ax(()=>{c&&(n&&o.floating?I.current&&null!=u&&(U.current=!0,z.current=u,L()):R.current&&(z.current=-1,N.current()))},[c,n,o.floating,u,L]),ax(()=>{if(c&&n&&o.floating)if(null==l){if(Z.current=!1,null!=V.current)return;if(R.current&&(z.current=-1,Y()),(!M.current||!R.current)&&I.current&&(null!=T.current||!0===I.current&&null==T.current)){let e=0,t=()=>{null==i.current[0]?(e<2&&(e?requestAnimationFrame:queueMicrotask)(t),e+=1):(z.current=null==T.current||lm(T.current,A,h)||p?ll(i,F.current):ls(i,F.current),T.current=null,L())};t()}}else li(i,l)||(z.current=l,Y(),U.current=!1)},[c,n,o.floating,l,V,p,i,A,h,L,Y,F]),ax(()=>{if(!c||o.floating||!B||m||!R.current)return;let e=B.nodesRef.current,t=e.find(e=>e.id===O)?.context?.elements.floating,n=im(ib(o.floating)),r=e.some(e=>e.context&&ig(e.context.elements.floating,n));t&&!r&&D.current&&t.focus({preventScroll:!0})},[c,o.floating,B,O,m]),ax(()=>{N.current=L,M.current=n,R.current=!!o.floating}),ax(()=>{n||(T.current=null,I.current=g)},[n,g]);let K=null!=l,X=x.useMemo(()=>{function e(e){if(!q.current)return;let t=i.current.indexOf(e);-1!==t&&z.current!==t&&(z.current=t,L())}return{onFocus({currentTarget:t}){Z.current=!0,e(t)},onClick:({currentTarget:e})=>e.focus({preventScroll:!0}),onMouseMove({currentTarget:t}){Z.current=!0,U.current=!1,y&&e(t)},onPointerLeave({pointerType:e}){D.current&&\"touch\"!==e&&(Z.current=!0,y&&(z.current=-1,L(),m||S.current?.focus({preventScroll:!0})))}}},[q,S,y,i,L,m]),G=x.useCallback(()=>w??B?.nodesRef.current.find(e=>e.id===O)?.context?.dataRef?.current.orientation,[O,B,w]),Q=af(e=>{var t,a,l,s,c;if(D.current=!1,Z.current=!0,229===e.which||!q.current&&e.currentTarget===S.current)return;if(p&&(t=e.key,a=A,l=h,s=C,\"both\"===a||\"horizontal\"===a&&s&&s>1?\"Escape\"===t:lp(a,l?t===id:t===iu,t===ip))){lh(e.key,G())||ir(e),r(!1,e.nativeEvent,\"list-navigation\"),aD(o.domReference)&&(m?B?.events.emit(\"virtualfocus\",o.domReference):o.domReference.focus());return}let u=z.current,g=ll(i,b),y=ls(i,b);if(P||(\"Home\"===e.key&&(ir(e),z.current=g,L()),\"End\"===e.key&&(ir(e),z.current=y,L())),C>1){let t=E||Array.from({length:i.current.length},()=>({width:1,height:1})),n=function(e,t,n){let r=[],o=0;return e.forEach(({width:e,height:a},i)=>{let l=!1;for(n&&(o=0);!l;){let n=[];for(let r=0;r<e;r+=1)for(let e=0;e<a;e+=1)n.push(o+r+e*t);o%t+e<=t&&n.every(e=>null==r[e])?(n.forEach(e=>{r[e]=i}),l=!0):o+=1}}),[...r]}(t,C,j),r=n.findIndex(e=>null!=e&&!lu(i,e,b)),o=n.reduce((e,t,n)=>null==t||lu(i,t,b)?e:n,-1),a=n[function(e,{event:t,orientation:n,loop:r,rtl:o,cols:a,disabledIndices:i,minIndex:l,maxIndex:s,prevIndex:c,stopEvent:u=!1}){let d=c;if(t.key===ip){if(u&&ir(t),-1===c)d=s;else if(d=lc(e,{startingIndex:d,amount:a,decrement:!0,disabledIndices:i}),r&&(c-a<l||d<0)){let e=c%a,t=s%a,n=s-(t-e);d=t===e?s:t>e?n:n-a}li(e,d)&&(d=c)}if(t.key===ih&&(u&&ir(t),-1===c?d=l:(d=lc(e,{startingIndex:c,amount:a,disabledIndices:i}),r&&c+a>s&&(d=lc(e,{startingIndex:c%a-a,amount:a,disabledIndices:i}))),li(e,d)&&(d=c)),\"both\"===n){let n=iX(c/a);t.key===(o?iu:id)&&(u&&ir(t),c%a!=a-1?(d=lc(e,{startingIndex:c,disabledIndices:i}),r&&la(d,a,n)&&(d=lc(e,{startingIndex:c-c%a-1,disabledIndices:i}))):r&&(d=lc(e,{startingIndex:c-c%a-1,disabledIndices:i})),la(d,a,n)&&(d=c)),t.key===(o?id:iu)&&(u&&ir(t),c%a!=0?(d=lc(e,{startingIndex:c,decrement:!0,disabledIndices:i}),r&&la(d,a,n)&&(d=lc(e,{startingIndex:c+(a-c%a),decrement:!0,disabledIndices:i}))):r&&(d=lc(e,{startingIndex:c+(a-c%a),decrement:!0,disabledIndices:i})),la(d,a,n)&&(d=c));let l=iX(s/a)===n;li(e,d)&&(d=r&&l?t.key===(o?id:iu)?s:lc(e,{startingIndex:c-c%a-1,disabledIndices:i}):c)}return d}({current:n.map(e=>null!=e?i.current[e]:null)},{event:e,orientation:A,loop:f,rtl:h,cols:C,disabledIndices:(c=[...(\"function\"!=typeof b?b:null)||i.current.map((e,t)=>lu(i,t,b)?t:void 0),void 0],n.flatMap((e,t)=>c.includes(e)?[t]:[])),minIndex:r,maxIndex:o,prevIndex:function(e,t,n,r,o){if(-1===e)return -1;let a=n.indexOf(e),i=t[e];switch(o){case\"tl\":return a;case\"tr\":if(!i)return a;return a+i.width-1;case\"bl\":if(!i)return a;return a+(i.height-1)*r;case\"br\":return n.lastIndexOf(e);default:return -1}}(z.current>y?g:z.current,t,n,C,e.key===ih?\"bl\":e.key===(h?iu:id)?\"tr\":\"tl\"),stopEvent:!0})];if(null!=a&&(z.current=a,L()),\"both\"===A)return}if(lh(e.key,A)){if(ir(e),n&&!m&&im(e.currentTarget.ownerDocument)===e.currentTarget){z.current=lm(e.key,A,h)?g:y,L();return}lm(e.key,A,h)?f?z.current=u>=y?d&&u!==i.current.length?-1:g:lc(i,{startingIndex:u,disabledIndices:b}):z.current=Math.min(y,lc(i,{startingIndex:u,disabledIndices:b})):f?z.current=u<=g?d&&-1!==u?i.current.length:y:lc(i,{startingIndex:u,decrement:!0,disabledIndices:b}):z.current=Math.max(g,lc(i,{startingIndex:u,decrement:!0,disabledIndices:b})),li(i,z.current)&&(z.current=-1),L()}}),J=x.useMemo(()=>m&&n&&K&&{\"aria-activedescendant\":$},[m,n,K,$]),ee=x.useMemo(()=>({\"aria-orientation\":\"both\"===A?void 0:A,...!P?J:{},onKeyDown(e){if(\"Tab\"===e.key&&e.shiftKey&&n&&!m){ir(e),r(!1,e.nativeEvent,\"list-navigation\"),aD(o.domReference)&&o.domReference.focus();return}Q(e)},onPointerMove(){D.current=!0}}),[J,Q,A,P,r,n,m,o.domReference]),et=x.useMemo(()=>{function e(e){\"auto\"===g&&io(e.nativeEvent)&&(I.current=!0)}function t(e){I.current=g,\"auto\"===g&&ia(e.nativeEvent)&&(I.current=!0)}return{...J,onKeyDown(e){var t,o;D.current=!1;let a=e.key.startsWith(\"Arrow\"),l=(t=e.key,o=G(),lp(o,h?t===iu:t===id,t===ih)),s=lh(e.key,A),c=(p?l:s)||\"Enter\"===e.key||\"\"===e.key.trim();if(m&&n)return Q(e);if(n||v||!a){if(c){let t=lh(e.key,G());T.current=p&&t?null:e.key}if(p){l&&(ir(e),n?(z.current=ll(i,F.current),L()):r(!0,e.nativeEvent,\"list-navigation\"));return}s&&(null!=u&&(z.current=u),ir(e),!n&&v?r(!0,e.nativeEvent,\"list-navigation\"):Q(e),n&&L())}},onFocus(){n&&!m&&(z.current=-1,L())},onPointerDown:t,onPointerEnter:t,onMouseDown:e,onClick:e}},[J,Q,F,g,i,p,L,r,n,v,A,G,h,u,m]);return x.useMemo(()=>c?{reference:et,floating:ee,item:X}:{},[c,et,ee,X])}(em,{enabled:!s,listRef:R,activeIndex:j,nested:void 0!==t.type,loop:u,orientation:d,parentOrientation:\"menubar\"===t.type?t.context.orientation:void 0,rtl:\"rtl\"===ex,disabledIndices:lV,onNavigate:S,openOnArrowKeyDown:\"context-menu\"!==t.type}),eC=x.useRef(!1),e_=function(e,t){let{open:n,dataRef:r}=e,{listRef:o,activeIndex:a,onMatch:i,onTypingChange:l,enabled:s=!0,findMatch:c=null,resetMs:u=750,ignoreKeys:d=[],selectedIndex:f=null}=t,p=ac(),h=x.useRef(\"\"),m=x.useRef(f??a??-1),g=x.useRef(null),y=af(i),v=af(l),b=a0(c),A=a0(d);ax(()=>{n&&(p.clear(),g.current=null,h.current=\"\")},[n,p]),ax(()=>{n&&\"\"===h.current&&(m.current=f??a??-1)},[n,f,a]);let w=af(e=>{e?r.current.typing||(r.current.typing=e,v(e)):r.current.typing&&(r.current.typing=e,v(e))}),C=af(e=>{function t(e,t,n){let r=b.current?b.current(t,n):t.find(e=>e?.toLocaleLowerCase().indexOf(n.toLocaleLowerCase())===0);return r?e.indexOf(r):-1}let r=o.current;if(h.current.length>0&&\" \"!==h.current[0]&&(-1===t(r,r,h.current)?w(!1):\" \"===e.key&&ir(e)),null==r||A.current.includes(e.key)||1!==e.key.length||e.ctrlKey||e.metaKey||e.altKey)return;n&&\" \"!==e.key&&(ir(e),w(!0)),r.every(e=>!e||e[0]?.toLocaleLowerCase()!==e[1]?.toLocaleLowerCase())&&h.current===e.key&&(h.current=\"\",m.current=g.current),h.current+=e.key,p.start(u,()=>{h.current=\"\",m.current=g.current,w(!1)});let a=m.current,i=t(r,[...r.slice((a||0)+1),...r.slice(0,(a||0)+1)],h.current);-1!==i?(y(i),g.current=i):\" \"!==e.key&&(h.current=\"\",w(!1))}),_=x.useMemo(()=>({onKeyDown:C}),[C]),k=x.useMemo(()=>({onKeyDown:C,onKeyUp(e){\" \"===e.key&&w(!1)}}),[C,w]);return x.useMemo(()=>s?{reference:_,floating:k}:{},[s,_,k])}(em,{listRef:M,activeIndex:j,resetMs:500,onMatch:e=>{Y&&e!==j&&S(e)},onTypingChange:x.useCallback(e=>{eC.current=e},[])}),{getReferenceProps:ek,getFloatingProps:eE,getItemProps:ej}=lg([eg,ev,eb,ey,eA,ew,e_]),eS=function(e){let{enabled:t=!0,mouseDownAction:n,open:r}=e,o=x.useRef(!1);return x.useMemo(()=>t?{onMouseDown:e=>{(\"open\"===n&&!r||\"close\"===n&&r)&&(o.current=!0,lE(e.currentTarget).addEventListener(\"click\",()=>{o.current=!1},{once:!0}))},onClick:e=>{o.current&&(o.current=!1,e.preventBaseUIHandler())}}:iR,[t,n,r])}({open:Y,enabled:\"menubar\"===t.type,mouseDownAction:\"open\"}),eO=x.useMemo(()=>{let e=lM(ek(),{onMouseEnter(){E(!0)},onMouseMove(){$(!0)}},er,eS);return delete e.role,e},[ek,eS,$,er]),eB=x.useMemo(()=>eE({onMouseEnter(){W&&\"menu\"!==t.type||E(!1)},onMouseMove(){$(!0)},onClick(){W&&E(!1)}}),[eE,W,t.type,$]),eP=x.useMemo(()=>ej(),[ej]),eI=x.useMemo(()=>({activeIndex:j,setActiveIndex:S,allowMouseUpTriggerRef:t.type?t.context.allowMouseUpTriggerRef:l$,floatingRootContext:em,itemProps:eP,popupProps:eB,triggerProps:eO,itemDomElements:R,itemLabels:M,mounted:J,open:Y,popupRef:L,positionerRef:N,setOpen:eh,setPositionerElement:Q,triggerElement:y,setTriggerElement:v,transitionStatus:et,lastOpenChangeReason:O,instantType:C,onOpenChangeComplete:i,setHoverEnabled:E,typingRef:eC,modal:H,disabled:s,parent:t,rootId:q,allowMouseEnter:V,setAllowMouseEnter:$}),[j,em,eP,eB,eO,R,M,J,Y,N,eh,et,y,Q,O,C,i,H,s,t,q,V,$]),ez=(0,b.jsx)(lb.Provider,{value:eI,children:r});return void 0===t.type||\"context-menu\"===t.type?(0,b.jsx)(aj,{children:ez}):ez};function lY(e,t,n,r){var o,a,i,l,s;let c=aa(lK).current;return o=c,a=e,i=t,l=n,s=r,(o.refs[0]!==a||o.refs[1]!==i||o.refs[2]!==l||o.refs[3]!==s)&&lX(c,[e,t,n,r]),c.callback}function lK(){return{callback:null,cleanup:null,refs:[]}}function lX(e,t){if(e.refs=t,t.every(e=>null==e)){e.callback=null;return}e.callback=n=>{if(e.cleanup&&(e.cleanup(),e.cleanup=null),null!=n){let r=Array(t.length).fill(null);for(let e=0;e<t.length;e+=1){let o=t[e];if(null!=o)switch(typeof o){case\"function\":{let t=o(n);\"function\"==typeof t&&(r[e]=t);break}case\"object\":o.current=n}}e.cleanup=()=>{for(let e=0;e<t.length;e+=1){let n=t[e];if(null!=n)switch(typeof n){case\"function\":{let t=r[e];\"function\"==typeof t?t():n(null);break}case\"object\":n.current=null}}}}}}let lG=function(e){return e.startingStyle=\"data-starting-style\",e.endingStyle=\"data-ending-style\",e}({}),lQ={[lG.startingStyle]:\"\"},lJ={[lG.endingStyle]:\"\"},l0={transitionStatus:e=>\"starting\"===e?lQ:\"ending\"===e?lJ:null},l1=function(e){return e.open=\"data-open\",e.closed=\"data-closed\",e[e.startingStyle=lG.startingStyle]=\"startingStyle\",e[e.endingStyle=lG.endingStyle]=\"endingStyle\",e.anchorHidden=\"data-anchor-hidden\",e}({}),l2=function(e){return e.popupOpen=\"data-popup-open\",e.pressed=\"data-pressed\",e}({}),l4={[l2.popupOpen]:\"\"},l5={[l2.popupOpen]:\"\",[l2.pressed]:\"\"},l3={[l1.open]:\"\"},l6={[l1.closed]:\"\"},l9={[l1.anchorHidden]:\"\"},l8={open:e=>e?l4:null},l7={open:e=>e?l5:null},se={open:e=>e?l3:l6,anchorHidden:e=>e?l9:null},st=parseInt(x.version,10);function sn(e,t,n={}){let r=t.render,o=function(e,t={}){var n,r;let o,{className:a,render:i}=e,{state:l=iR,ref:s,props:c,disableStyleHooks:u,customStyleHookMapping:d,enabled:f=!0}=t,p=f?(n=a,r=l,\"function\"==typeof n?n(r):n):void 0;!0!==u&&(o=x.useMemo(()=>f?function(e,t){let n={};for(let r in e){let o=e[r];if(t?.hasOwnProperty(r)){let e=t[r](o);null!=e&&Object.assign(n,e);continue}!0===o?n[`data-${r.toLowerCase()}`]=\"\":o&&(n[`data-${r.toLowerCase()}`]=o.toString())}return n}(l,d):iR,[l,d,f]));let h=f?lN(o,Array.isArray(c)?function(e){if(0===e.length)return lR;if(1===e.length)return lF(e[0],lR);let t={...lF(e[0],lR)};for(let n=1;n<e.length;n+=1)t=lZ(t,e[n]);return t}(c):c)??iR:iR;return(\"undefined\"!=typeof document&&(f?Array.isArray(s)?h.ref=function(e){var t,n;let r=aa(lK).current;return t=r,n=e,(t.refs.length!==n.length||t.refs.some((e,t)=>e!==n[t]))&&lX(r,e),r.callback}([h.ref,sr(i),...s]):h.ref=lY(h.ref,sr(i),s):lY(null,null)),f)?(void 0!==p&&(h.className=lH(h.className,p)),h):iR}(t,n);return!1===n.enabled?null:function(e,t,n,r){if(t){if(\"function\"==typeof t)return t(n,r);let e=lM(n,t.props);return e.ref=n.ref,x.cloneElement(t,e)}if(e&&\"string\"==typeof e){var o,a;return o=e,a=n,\"button\"===o?(0,b.jsx)(\"button\",{type:\"button\",...a}):\"img\"===o?(0,b.jsx)(\"img\",{alt:\"\",...a}):x.createElement(o,a)}throw Error(\"Base UI: Render element or function are not defined.\")}(e,r,o,n.state??iR)}function sr(e){return e&&\"function\"!=typeof e?st>=19?e.props.ref:e.ref:null}let so=x.createContext(void 0);function sa(e=!1){let t=x.useContext(so);if(void 0===t&&!e)throw Error(\"Base UI: CompositeRootContext is missing. Composite parts must be placed within <Composite.Root>.\");return t}function si(e={}){let{disabled:t=!1,focusableWhenDisabled:n,tabIndex:r=0,native:o=!0}=e,a=x.useRef(null),i=void 0!==sa(!0),l=af(()=>{let e=a.current;return!!(e?.tagName===\"A\"&&e?.href)}),{props:s}=function(e){let{focusableWhenDisabled:t,disabled:n,composite:r=!1,tabIndex:o=0,isNativeButton:a}=e,i=r&&!1!==t,l=r&&!1===t;return{props:x.useMemo(()=>{let e={onKeyDown(e){n&&t&&\"Tab\"!==e.key&&e.preventDefault()}};return r||(e.tabIndex=o,!a&&n&&(e.tabIndex=t?o:-1)),(a&&(t||i)||!a&&n)&&(e[\"aria-disabled\"]=n),a&&(!t||l)&&(e.disabled=n),e},[r,n,t,i,l,a,o])}}({focusableWhenDisabled:n,disabled:t,composite:i,tabIndex:r,isNativeButton:o});return ax(()=>{let e=a.current;e instanceof HTMLButtonElement&&i&&t&&void 0===s.disabled&&e.disabled&&(e.disabled=!1)},[t,s.disabled,i]),{getButtonProps:x.useCallback((e={})=>{let{onClick:n,onMouseDown:r,onKeyUp:a,onKeyDown:i,onPointerDown:c,...u}=e;return lM({type:o?\"button\":void 0,onClick(e){if(t)return void e.preventDefault();n?.(e)},onMouseDown(e){t||r?.(e)},onKeyDown(e){if(t||(lq(e),i?.(e)),e.baseUIHandlerPrevented)return;let r=e.target===e.currentTarget&&!o&&!l()&&!t,a=\"Enter\"===e.key,s=\" \"===e.key;r&&((s||a)&&e.preventDefault(),a&&n?.(e))},onKeyUp(e){t||(lq(e),a?.(e)),!e.baseUIHandlerPrevented&&(e.target!==e.currentTarget||o||t||\" \"!==e.key||n?.(e))},onPointerDown(e){if(t)return void e.preventDefault();c?.(e)}},o?void 0:{role:\"button\"},s,u)},[t,s,o,l]),buttonRef:a}}let sl=x.createContext({register:()=>{},unregister:()=>{},subscribeMapChange:()=>()=>{},elementsRef:{current:[]},nextIndexRef:{current:0}}),ss=function(e){return e[e.None=0]=\"None\",e[e.GuessFromOrder=1]=\"GuessFromOrder\",e}({});function sc(e={}){let{label:t,metadata:n,textRef:r,indexGuessBehavior:o}=e,{register:a,unregister:i,subscribeMapChange:l,elementsRef:s,labelsRef:c,nextIndexRef:u}=x.useContext(sl),d=x.useRef(-1),[f,p]=x.useState(o===ss.GuessFromOrder?()=>{if(-1===d.current){let e=u.current;u.current+=1,d.current=e}return d.current}:-1),h=x.useRef(null),m=x.useCallback(e=>{if(h.current=e,-1!==f&&null!==e&&(s.current[f]=e,c)){let n=void 0!==t;c.current[f]=n?t:r?.current?.textContent??e.textContent}},[f,s,c,t,r]);return ax(()=>{let e=h.current;if(e)return a(e,n),()=>{i(e)}},[a,i,n]),ax(()=>l(e=>{let t=h.current?e.get(h.current)?.index:null;null!=t&&p(t)}),[l,p]),x.useMemo(()=>({ref:m,index:f}),[f,m])}function su(e){let{render:t,className:n,state:r=iR,props:o=iM,refs:a=iM,metadata:i,customStyleHookMapping:l,tag:s=\"div\",...c}=e,{compositeProps:u,compositeRef:d}=function(e={}){let{highlightItemOnHover:t,highlightedIndex:n,onHighlightedIndexChange:r}=sa(),{ref:o,index:a}=sc(e),i=n===a,l=x.useRef(null),s=lY(o,l);return{compositeProps:x.useMemo(()=>({tabIndex:i?0:-1,onFocus(){r(a)},onMouseMove(){let e=l.current;if(!t||!e)return;let n=e.hasAttribute(\"disabled\")||\"true\"===e.ariaDisabled;i||n||e.focus()}}),[i,r,a,t]),compositeRef:s,index:a}}({metadata:i});return sn(s,e,{state:r,ref:[...a,d],props:[u,...o,c],customStyleHookMapping:l})}let sd=x.forwardRef(function(e,t){let{render:n,className:r,disabled:o=!1,nativeButton:a=!0,...i}=e,{triggerProps:l,disabled:s,setTriggerElement:c,open:u,allowMouseUpTriggerRef:d,positionerRef:f,parent:p,lastOpenChangeReason:h,rootId:m}=lA(),g=o||s,y=x.useRef(null),v=ac(),{getButtonProps:A,buttonRef:w}=si({disabled:g,native:a}),C=lY(w,c),{events:_}=ak();x.useEffect(()=>{u||void 0!==p.type||(d.current=!1)},[d,u,p.type]);let k=af(e=>{if(!y.current)return;v.clear(),d.current=!1;let t=e.target;if(ig(y.current,t)||ig(f.current,t)||t===y.current||null!=t&&function e(t){return aD(t)&&t.hasAttribute(\"data-rootownerid\")?t.getAttribute(\"data-rootownerid\")??void 0:aY(t)?void 0:e(aG(t))}(t)===m)return;let n=function(e){let t=e.getBoundingClientRect(),n=window.getComputedStyle(e,\"::before\"),r=window.getComputedStyle(e,\"::after\");if(\"none\"===n.content&&\"none\"===r.content)return t;let o=parseFloat(n.width)||0,a=parseFloat(n.height)||0,i=parseFloat(r.width)||0,l=parseFloat(r.height)||0,s=Math.max(t.width,o,i),c=Math.max(t.height,a,l),u=s-t.width,d=c-t.height;return{left:t.left-u/2,right:t.right+u/2,top:t.top-d/2,bottom:t.bottom+d/2}}(y.current);e.clientX>=n.left-2&&e.clientX<=n.right+2&&e.clientY>=n.top-2&&e.clientY<=n.bottom+2||_.emit(\"close\",{domEvent:e,reason:\"cancel-open\"})});x.useEffect(()=>{u&&\"trigger-hover\"===h&&lE(y.current).addEventListener(\"mouseup\",k,{once:!0})},[u,k,h]);let E=\"menubar\"===p.type,j=x.useCallback(e=>lM(E?{role:\"menuitem\"}:{},{\"aria-haspopup\":\"menu\",ref:C,onMouseDown:e=>{u||(v.start(200,()=>{d.current=!0}),lE(e.currentTarget).addEventListener(\"mouseup\",k,{once:!0}))}},e,A),[A,C,u,d,v,k,E]),S=x.useMemo(()=>({disabled:g,open:u}),[g,u]),O=[y,t,w],B=[l,i,j],P=sn(\"button\",e,{enabled:!E,customStyleHookMapping:l7,state:S,ref:O,props:B});return E?(0,b.jsx)(su,{tag:\"button\",render:n,className:r,state:S,refs:O,props:B,customStyleHookMapping:l7}):P}),sf={clip:\"rect(0 0 0 0)\",overflow:\"hidden\",whiteSpace:\"nowrap\",position:\"fixed\",top:0,left:0,border:0,padding:0,width:1,height:1,margin:-1},sp=x.forwardRef(function(e,t){let[n,r]=x.useState();return ax(()=>{a8&&r(\"button\")},[]),(0,b.jsx)(\"span\",{...e,ref:t,tabIndex:0,role:n,\"aria-hidden\":!n||void 0,style:sf,\"data-base-ui-focus-guard\":\"\"})});var sh='input:not([inert]),select:not([inert]),textarea:not([inert]),a[href]:not([inert]),button:not([inert]),[tabindex]:not(slot):not([inert]),audio[controls]:not([inert]),video[controls]:not([inert]),[contenteditable]:not([contenteditable=\"false\"]):not([inert]),details>summary:first-of-type:not([inert]),details:not([inert])',sm=\"undefined\"==typeof Element,sg=sm?function(){}:Element.prototype.matches||Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector,sy=!sm&&Element.prototype.getRootNode?function(e){var t;return null==e||null==(t=e.getRootNode)?void 0:t.call(e)}:function(e){return null==e?void 0:e.ownerDocument},sv=function e(t,n){void 0===n&&(n=!0);var r,o=null==t||null==(r=t.getAttribute)?void 0:r.call(t,\"inert\");return\"\"===o||\"true\"===o||n&&t&&e(t.parentNode)},sb=function(e){var t,n=null==e||null==(t=e.getAttribute)?void 0:t.call(e,\"contenteditable\");return\"\"===n||\"true\"===n},sA=function(e,t,n){if(sv(e))return[];var r=Array.prototype.slice.apply(e.querySelectorAll(sh));return t&&sg.call(e,sh)&&r.unshift(e),r=r.filter(n)},sx=function e(t,n,r){for(var o=[],a=Array.from(t);a.length;){var i=a.shift();if(!sv(i,!1))if(\"SLOT\"===i.tagName){var l=i.assignedElements(),s=e(l.length?l:i.children,!0,r);r.flatten?o.push.apply(o,s):o.push({scopeParent:i,candidates:s})}else{sg.call(i,sh)&&r.filter(i)&&(n||!t.includes(i))&&o.push(i);var c=i.shadowRoot||\"function\"==typeof r.getShadowRoot&&r.getShadowRoot(i),u=!sv(c,!1)&&(!r.shadowRootFilter||r.shadowRootFilter(i));if(c&&u){var d=e(!0===c?i.children:c.children,!0,r);r.flatten?o.push.apply(o,d):o.push({scopeParent:i,candidates:d})}else a.unshift.apply(a,i.children)}}return o},sw=function(e){return!isNaN(parseInt(e.getAttribute(\"tabindex\"),10))},sC=function(e){if(!e)throw Error(\"No node provided\");return e.tabIndex<0&&(/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName)||sb(e))&&!sw(e)?0:e.tabIndex},s_=function(e,t){var n=sC(e);return n<0&&t&&!sw(e)?0:n},sk=function(e,t){return e.tabIndex===t.tabIndex?e.documentOrder-t.documentOrder:e.tabIndex-t.tabIndex},sE=function(e){return\"INPUT\"===e.tagName},sj=function(e,t){for(var n=0;n<e.length;n++)if(e[n].checked&&e[n].form===t)return e[n]},sS=function(e){if(!e.name)return!0;var t,n=e.form||sy(e),r=function(e){return n.querySelectorAll('input[type=\"radio\"][name=\"'+e+'\"]')};if(\"undefined\"!=typeof window&&void 0!==window.CSS&&\"function\"==typeof window.CSS.escape)t=r(window.CSS.escape(e.name));else try{t=r(e.name)}catch(e){return console.error(\"Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s\",e.message),!1}var o=sj(t,e.form);return!o||o===e},sO=function(e){var t;return sE(t=e)&&\"radio\"===t.type&&!sS(e)},sB=function(e){var t,n,r,o,a,i,l,s=e&&sy(e),c=null==(t=s)?void 0:t.host,u=!1;if(s&&s!==e)for(u=!!(null!=(n=c)&&null!=(r=n.ownerDocument)&&r.contains(c)||null!=e&&null!=(o=e.ownerDocument)&&o.contains(e));!u&&c;)u=!!(null!=(i=c=null==(a=s=sy(c))?void 0:a.host)&&null!=(l=i.ownerDocument)&&l.contains(c));return u},sP=function(e){var t=e.getBoundingClientRect(),n=t.width,r=t.height;return 0===n&&0===r},sI=function(e,t){var n=t.displayCheck,r=t.getShadowRoot;if(\"hidden\"===getComputedStyle(e).visibility)return!0;var o=sg.call(e,\"details>summary:first-of-type\")?e.parentElement:e;if(sg.call(o,\"details:not([open]) *\"))return!0;if(n&&\"full\"!==n&&\"legacy-full\"!==n){if(\"non-zero-area\"===n)return sP(e)}else{if(\"function\"==typeof r){for(var a=e;e;){var i=e.parentElement,l=sy(e);if(i&&!i.shadowRoot&&!0===r(i))return sP(e);e=e.assignedSlot?e.assignedSlot:i||l===e.ownerDocument?i:l.host}e=a}if(sB(e))return!e.getClientRects().length;if(\"legacy-full\"!==n)return!0}return!1},sz=function(e){if(/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName))for(var t=e.parentElement;t;){if(\"FIELDSET\"===t.tagName&&t.disabled){for(var n=0;n<t.children.length;n++){var r=t.children.item(n);if(\"LEGEND\"===r.tagName)return!!sg.call(t,\"fieldset[disabled] *\")||!r.contains(e)}return!0}t=t.parentElement}return!1},sT=function(e,t){var n,r;return!(t.disabled||sv(t)||sE(n=t)&&\"hidden\"===n.type||sI(t,e)||\"DETAILS\"===(r=t).tagName&&Array.prototype.slice.apply(r.children).some(function(e){return\"SUMMARY\"===e.tagName})||sz(t))},sD=function(e,t){return!(sO(t)||0>sC(t))&&!!sT(e,t)},sL=function(e){var t=parseInt(e.getAttribute(\"tabindex\"),10);return!!isNaN(t)||!!(t>=0)},sN=function e(t){var n=[],r=[];return t.forEach(function(t,o){var a=!!t.scopeParent,i=a?t.scopeParent:t,l=s_(i,a),s=a?e(t.candidates):i;0===l?a?n.push.apply(n,s):n.push(i):r.push({documentOrder:o,tabIndex:l,item:t,isScope:a,content:s})}),r.sort(sk).reduce(function(e,t){return t.isScope?e.push.apply(e,t.content):e.push(t.content),e},[]).concat(n)},sR=function(e,t){return sN((t=t||{}).getShadowRoot?sx([e],t.includeContainer,{filter:sD.bind(null,t),flatten:!1,getShadowRoot:t.getShadowRoot,shadowRootFilter:sL}):sA(e,t.includeContainer,sD.bind(null,t)))},sM=function(e,t){return(t=t||{}).getShadowRoot?sx([e],t.includeContainer,{filter:sT.bind(null,t),flatten:!0,getShadowRoot:t.getShadowRoot}):sA(e,t.includeContainer,sT.bind(null,t))},sZ=function(e,t){if(t=t||{},!e)throw Error(\"No node provided\");return!1!==sg.call(e,sh)&&sD(t,e)};let sU=()=>({getShadowRoot:!0,displayCheck:\"function\"==typeof ResizeObserver&&ResizeObserver.toString().includes(\"[native code]\")?\"full\":\"none\"});function sF(e,t){let n=sR(e,sU()),r=n.length;if(0===r)return;let o=im(ib(e)),a=n.indexOf(o);return n[-1===a?1===t?0:r-1:a+t]}function sq(e){return sF(ib(e).body,1)||e}function sH(e){return sF(ib(e).body,-1)||e}function sV(e,t){let n=t||e.currentTarget,r=e.relatedTarget;return!r||!ig(n,r)}function s$(e){sR(e,sU()).forEach(e=>{e.dataset.tabindex=e.getAttribute(\"tabindex\")||\"\",e.setAttribute(\"tabindex\",\"-1\")})}function sW(e){e.querySelectorAll(\"[data-tabindex]\").forEach(e=>{let t=e.dataset.tabindex;delete e.dataset.tabindex,t?e.setAttribute(\"tabindex\",t):e.removeAttribute(\"tabindex\")})}let sY=x.createContext(null),sK=()=>x.useContext(sY),sX=iC(\"portal\");function sG(e={}){let{id:t,root:n}=e,r=ab(),o=sK(),[a,i]=x.useState(null),l=x.useRef(null);return ax(()=>()=>{a?.remove(),queueMicrotask(()=>{l.current=null})},[a]),ax(()=>{if(!r||l.current)return;let e=t?document.getElementById(t):null;if(!e)return;let n=document.createElement(\"div\");n.id=r,n.setAttribute(sX,\"\"),e.appendChild(n),l.current=n,i(n)},[t,r]),ax(()=>{if(null===n||!r||l.current)return;let e=n||o?.portalNode;e&&!az(e)&&(e=e.current),e=e||document.body;let a=null;t&&((a=document.createElement(\"div\")).id=t,e.appendChild(a));let s=document.createElement(\"div\");s.id=r,s.setAttribute(sX,\"\"),(e=a||e).appendChild(s),l.current=s,i(s)},[t,n,r,o]),a}function sQ(e){let{children:t,id:n,root:r,preserveTabOrder:o=!0}=e,a=sG({id:n,root:r}),[i,l]=x.useState(null),s=x.useRef(null),c=x.useRef(null),u=x.useRef(null),d=x.useRef(null),f=i?.modal,p=i?.open,h=!!i&&!i.modal&&i.open&&o&&!!(r||a);return x.useEffect(()=>{if(a&&o&&!f)return a.addEventListener(\"focusin\",e,!0),a.addEventListener(\"focusout\",e,!0),()=>{a.removeEventListener(\"focusin\",e,!0),a.removeEventListener(\"focusout\",e,!0)};function e(e){if(a&&sV(e)){let t=\"focusin\"===e.type;(t?sW:s$)(a)}}},[a,o,f]),x.useEffect(()=>{a&&(p||sW(a))},[p,a]),(0,b.jsxs)(sY.Provider,{value:x.useMemo(()=>({preserveTabOrder:o,beforeOutsideRef:s,afterOutsideRef:c,beforeInsideRef:u,afterInsideRef:d,portalNode:a,setFocusManagerState:l}),[o,a]),children:[h&&a&&(0,b.jsx)(sp,{\"data-type\":\"outside\",ref:s,onFocus:e=>{if(sV(e,a))u.current?.focus();else{let e=sH(i?i.domReference:null);e?.focus()}}}),h&&a&&(0,b.jsx)(\"span\",{\"aria-owns\":a.id,style:sf}),a&&ef.createPortal(t,a),h&&a&&(0,b.jsx)(sp,{\"data-type\":\"outside\",ref:c,onFocus:e=>{if(sV(e,a))d.current?.focus();else{let t=sq(i?i.domReference:null);t?.focus(),i?.closeOnFocusOut&&i?.onOpenChange(!1,e.nativeEvent,\"focus-out\")}}})]})}let sJ=x.createContext(void 0);function s0(e){let{children:t,keepMounted:n=!1,container:r}=e,{mounted:o}=lA();return o||n?(0,b.jsx)(sJ.Provider,{value:n,children:(0,b.jsx)(sQ,{root:r,children:t})}):null}let s1=x.createContext(void 0);function s2(e,t,n){let r,{reference:o,floating:a}=e,i=i6(t),l=i4(i6(t)),s=i5(l),c=i1(t),u=\"y\"===i,d=o.x+o.width/2-a.width/2,f=o.y+o.height/2-a.height/2,p=o[s]/2-a[s]/2;switch(c){case\"top\":r={x:d,y:o.y-a.height};break;case\"bottom\":r={x:d,y:o.y+o.height};break;case\"right\":r={x:o.x+o.width,y:f};break;case\"left\":r={x:o.x-a.width,y:f};break;default:r={x:o.x,y:o.y}}switch(i2(t)){case\"start\":r[l]-=p*(n&&u?-1:1);break;case\"end\":r[l]+=p*(n&&u?-1:1)}return r}let s4=async(e,t,n)=>{let{placement:r=\"bottom\",strategy:o=\"absolute\",middleware:a=[],platform:i}=n,l=a.filter(Boolean),s=await (null==i.isRTL?void 0:i.isRTL(t)),c=await i.getElementRects({reference:e,floating:t,strategy:o}),{x:u,y:d}=s2(c,r,s),f=r,p={},h=0;for(let n=0;n<l.length;n++){let{name:a,fn:m}=l[n],{x:g,y:y,data:v,reset:b}=await m({x:u,y:d,initialPlacement:r,placement:f,strategy:o,middlewareData:p,rects:c,platform:i,elements:{reference:e,floating:t}});u=null!=g?g:u,d=null!=y?y:d,p={...p,[a]:{...p[a],...v}},b&&h<=50&&(h++,\"object\"==typeof b&&(b.placement&&(f=b.placement),b.rects&&(c=!0===b.rects?await i.getElementRects({reference:e,floating:t,strategy:o}):b.rects),{x:u,y:d}=s2(c,f,s)),n=-1)}return{x:u,y:d,placement:f,strategy:o,middlewareData:p}};async function s5(e,t){var n;void 0===t&&(t={});let{x:r,y:o,platform:a,rects:i,elements:l,strategy:s}=e,{boundary:c=\"clippingAncestors\",rootBoundary:u=\"viewport\",elementContext:d=\"floating\",altBoundary:f=!1,padding:p=0}=i0(t,e),h=lr(p),m=l[f?\"floating\"===d?\"reference\":\"floating\":d],g=lo(await a.getClippingRect({element:null==(n=await (null==a.isElement?void 0:a.isElement(m)))||n?m:m.contextElement||await (null==a.getDocumentElement?void 0:a.getDocumentElement(l.floating)),boundary:c,rootBoundary:u,strategy:s})),y=\"floating\"===d?{x:r,y:o,width:i.floating.width,height:i.floating.height}:i.reference,v=await (null==a.getOffsetParent?void 0:a.getOffsetParent(l.floating)),b=await (null==a.isElement?void 0:a.isElement(v))&&await (null==a.getScale?void 0:a.getScale(v))||{x:1,y:1},A=lo(a.convertOffsetParentRelativeRectToViewportRelativeRect?await a.convertOffsetParentRelativeRectToViewportRelativeRect({elements:l,rect:y,offsetParent:v,strategy:s}):y);return{top:(g.top-A.top+h.top)/b.y,bottom:(A.bottom-g.bottom+h.bottom)/b.y,left:(g.left-A.left+h.left)/b.x,right:(A.right-g.right+h.right)/b.x}}function s3(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function s6(e){return i$.some(t=>e[t]>=0)}let s9=new Set([\"left\",\"top\"]);async function s8(e,t){let{placement:n,platform:r,elements:o}=e,a=await (null==r.isRTL?void 0:r.isRTL(o.floating)),i=i1(n),l=i2(n),s=\"y\"===i6(n),c=s9.has(i)?-1:1,u=a&&s?-1:1,d=i0(t,e),{mainAxis:f,crossAxis:p,alignmentAxis:h}=\"number\"==typeof d?{mainAxis:d,crossAxis:0,alignmentAxis:null}:{mainAxis:d.mainAxis||0,crossAxis:d.crossAxis||0,alignmentAxis:d.alignmentAxis};return l&&\"number\"==typeof h&&(p=\"end\"===l?-1*h:h),s?{x:p*u,y:f*c}:{x:f*c,y:p*u}}function s7(e){let t=aK(e),n=parseFloat(t.width)||0,r=parseFloat(t.height)||0,o=aD(e),a=o?e.offsetWidth:n,i=o?e.offsetHeight:r,l=iK(n)!==a||iK(r)!==i;return l&&(n=a,r=i),{width:n,height:r,$:l}}function ce(e){return aT(e)?e:e.contextElement}function ct(e){let t=ce(e);if(!aD(t))return iG(1);let n=t.getBoundingClientRect(),{width:r,height:o,$:a}=s7(t),i=(a?iK(n.width):n.width)/r,l=(a?iK(n.height):n.height)/o;return i&&Number.isFinite(i)||(i=1),l&&Number.isFinite(l)||(l=1),{x:i,y:l}}let cn=iG(0);function cr(e){let t=aP(e);return a$()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:cn}function co(e,t,n,r){var o,a,i;void 0===t&&(t=!1),void 0===n&&(n=!1);let l=e.getBoundingClientRect(),s=ce(e),c=iG(1);t&&(r?aT(r)&&(c=ct(r)):c=ct(e));let u=(o=s,void 0===(a=n)&&(a=!1),(i=r)&&(!a||i===aP(o))&&a)?cr(s):iG(0),d=(l.left+u.x)/c.x,f=(l.top+u.y)/c.y,p=l.width/c.x,h=l.height/c.y;if(s){let e=aP(s),t=r&&aT(r)?aP(r):r,n=e,o=aJ(n);for(;o&&r&&t!==n;){let e=ct(o),t=o.getBoundingClientRect(),r=aK(o),a=t.left+(o.clientLeft+parseFloat(r.paddingLeft))*e.x,i=t.top+(o.clientTop+parseFloat(r.paddingTop))*e.y;d*=e.x,f*=e.y,p*=e.x,h*=e.y,d+=a,f+=i,o=aJ(n=aP(o))}}return lo({width:p,height:h,x:d,y:f})}function ca(e,t){let n=aX(e).scrollLeft;return t?t.left+n:co(aI(e)).left+n}function ci(e,t,n){void 0===n&&(n=!1);let r=e.getBoundingClientRect(),o=r.left+t.scrollLeft-(n?0:ca(e,r));return{x:o,y:r.top+t.scrollTop}}let cl=new Set([\"absolute\",\"fixed\"]);function cs(e,t,n){let r;if(\"viewport\"===t)r=function(e,t){let n=aP(e),r=aI(e),o=n.visualViewport,a=r.clientWidth,i=r.clientHeight,l=0,s=0;if(o){a=o.width,i=o.height;let e=a$();(!e||e&&\"fixed\"===t)&&(l=o.offsetLeft,s=o.offsetTop)}return{width:a,height:i,x:l,y:s}}(e,n);else if(\"document\"===t)r=function(e){let t=aI(e),n=aX(e),r=e.ownerDocument.body,o=iY(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),a=iY(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight),i=-n.scrollLeft+ca(e),l=-n.scrollTop;return\"rtl\"===aK(r).direction&&(i+=iY(t.clientWidth,r.clientWidth)-o),{width:o,height:a,x:i,y:l}}(aI(e));else if(aT(t))r=function(e,t){let n=co(e,!0,\"fixed\"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,a=aD(e)?ct(e):iG(1),i=e.clientWidth*a.x,l=e.clientHeight*a.y,s=o*a.x;return{width:i,height:l,x:s,y:r*a.y}}(t,n);else{let n=cr(e);r={x:t.x-n.x,y:t.y-n.y,width:t.width,height:t.height}}return lo(r)}function cc(e){return\"static\"===aK(e).position}function cu(e,t){if(!aD(e)||\"fixed\"===aK(e).position)return null;if(t)return t(e);let n=e.offsetParent;return aI(e)===n&&(n=n.ownerDocument.body),n}function cd(e,t){var n;let r=aP(e);if(aU(e))return r;if(!aD(e)){let t=aG(e);for(;t&&!aY(t);){if(aT(t)&&!cc(t))return t;t=aG(t)}return r}let o=cu(e,t);for(;o&&(n=o,aM.has(aB(n)))&&cc(o);)o=cu(o,t);return o&&aY(o)&&cc(o)&&!aV(o)?r:o||function(e){let t=aG(e);for(;aD(t)&&!aY(t);){if(aV(t))return t;if(aU(t))break;t=aG(t)}return null}(e)||r}let cf=async function(e){let t=this.getOffsetParent||cd,n=this.getDimensions,r=await n(e.floating);return{reference:function(e,t,n){let r=aD(t),o=aI(t),a=\"fixed\"===n,i=co(e,!0,a,t),l={scrollLeft:0,scrollTop:0},s=iG(0);if(r||!r&&!a)if((\"body\"!==aB(t)||aR(o))&&(l=aX(t)),r){let e=co(t,!0,a,t);s.x=e.x+t.clientLeft,s.y=e.y+t.clientTop}else o&&(s.x=ca(o));a&&!r&&o&&(s.x=ca(o));let c=!o||r||a?iG(0):ci(o,l),u=i.left+l.scrollLeft-s.x-c.x;return{x:u,y:i.top+l.scrollTop-s.y-c.y,width:i.width,height:i.height}}(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}},cp={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:o}=e,a=\"fixed\"===o,i=aI(r),l=!!t&&aU(t.floating);if(r===i||l&&a)return n;let s={scrollLeft:0,scrollTop:0},c=iG(1),u=iG(0),d=aD(r);if((d||!d&&!a)&&((\"body\"!==aB(r)||aR(i))&&(s=aX(r)),aD(r))){let e=co(r);c=ct(r),u.x=e.x+r.clientLeft,u.y=e.y+r.clientTop}let f=!i||d||a?iG(0):ci(i,s,!0);return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-s.scrollLeft*c.x+u.x+f.x,y:n.y*c.y-s.scrollTop*c.y+u.y+f.y}},getDocumentElement:aI,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e,a=[...\"clippingAncestors\"===n?aU(t)?[]:function(e,t){let n=t.get(e);if(n)return n;let r=aQ(e,[],!1).filter(e=>aT(e)&&\"body\"!==aB(e)),o=null,a=\"fixed\"===aK(e).position,i=a?aG(e):e;for(;aT(i)&&!aY(i);){let t=aK(i),n=aV(i);n||\"fixed\"!==t.position||(o=null),(a?!n&&!o:!n&&\"static\"===t.position&&!!o&&cl.has(o.position)||aR(i)&&!n&&function e(t,n){let r=aG(t);return!(r===n||!aT(r)||aY(r))&&(\"fixed\"===aK(r).position||e(r,n))}(e,i))?r=r.filter(e=>e!==i):o=t,i=aG(i)}return t.set(e,r),r}(t,this._c):[].concat(n),r],i=a[0],l=a.reduce((e,n)=>{let r=cs(t,n,o);return e.top=iY(r.top,e.top),e.right=iW(r.right,e.right),e.bottom=iW(r.bottom,e.bottom),e.left=iY(r.left,e.left),e},cs(t,i,o));return{width:l.right-l.left,height:l.bottom-l.top,x:l.left,y:l.top}},getOffsetParent:cd,getElementRects:cf,getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){let{width:t,height:n}=s7(e);return{width:t,height:n}},getScale:ct,isElement:aT,isRTL:function(e){return\"rtl\"===aK(e).direction}};function ch(e,t){return e.x===t.x&&e.y===t.y&&e.width===t.width&&e.height===t.height}function cm(e,t,n,r){let o;void 0===r&&(r={});let{ancestorScroll:a=!0,ancestorResize:i=!0,elementResize:l=\"function\"==typeof ResizeObserver,layoutShift:s=\"function\"==typeof IntersectionObserver,animationFrame:c=!1}=r,u=ce(e),d=a||i?[...u?aQ(u):[],...aQ(t)]:[];d.forEach(e=>{a&&e.addEventListener(\"scroll\",n,{passive:!0}),i&&e.addEventListener(\"resize\",n)});let f=u&&s?function(e,t){let n,r=null,o=aI(e);function a(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return!function i(l,s){void 0===l&&(l=!1),void 0===s&&(s=1),a();let c=e.getBoundingClientRect(),{left:u,top:d,width:f,height:p}=c;if(l||t(),!f||!p)return;let h=iX(d),m=iX(o.clientWidth-(u+f)),g=iX(o.clientHeight-(d+p)),y={rootMargin:-h+\"px \"+-m+\"px \"+-g+\"px \"+-iX(u)+\"px\",threshold:iY(0,iW(1,s))||1},v=!0;function b(t){let r=t[0].intersectionRatio;if(r!==s){if(!v)return i();r?i(!1,r):n=setTimeout(()=>{i(!1,1e-7)},1e3)}1!==r||ch(c,e.getBoundingClientRect())||i(),v=!1}try{r=new IntersectionObserver(b,{...y,root:o.ownerDocument})}catch(e){r=new IntersectionObserver(b,y)}r.observe(e)}(!0),a}(u,n):null,p=-1,h=null;l&&(h=new ResizeObserver(e=>{let[r]=e;r&&r.target===u&&h&&(h.unobserve(t),cancelAnimationFrame(p),p=requestAnimationFrame(()=>{var e;null==(e=h)||e.observe(t)})),n()}),u&&!c&&h.observe(u),h.observe(t));let m=c?co(e):null;return c&&function t(){let r=co(e);m&&!ch(m,r)&&n(),m=r,o=requestAnimationFrame(t)}(),n(),()=>{var e;d.forEach(e=>{a&&e.removeEventListener(\"scroll\",n),i&&e.removeEventListener(\"resize\",n)}),null==f||f(),null==(e=h)||e.disconnect(),h=null,c&&cancelAnimationFrame(o)}}var cg=\"undefined\"!=typeof document,cy=cg?x.useLayoutEffect:function(){};function cv(e,t){let n,r,o;if(e===t)return!0;if(typeof e!=typeof t)return!1;if(\"function\"==typeof e&&e.toString()===t.toString())return!0;if(e&&t&&\"object\"==typeof e){if(Array.isArray(e)){if((n=e.length)!==t.length)return!1;for(r=n;0!=r--;)if(!cv(e[r],t[r]))return!1;return!0}if((n=(o=Object.keys(e)).length)!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!({}).hasOwnProperty.call(t,o[r]))return!1;for(r=n;0!=r--;){let n=o[r];if((\"_owner\"!==n||!e.$$typeof)&&!cv(e[n],t[n]))return!1}return!0}return e!=e&&t!=t}function cb(e){return\"undefined\"==typeof window?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function cA(e,t){let n=cb(e);return Math.round(t*n)/n}function cx(e){let t=x.useRef(e);return cy(()=>{t.current=e}),t}function cw(e,t,n){let r=\"inline-start\"===e||\"inline-end\"===e;return({top:\"top\",right:r?n?\"inline-start\":\"inline-end\":\"right\",bottom:\"bottom\",left:r?n?\"inline-end\":\"inline-start\":\"left\"})[t]}function cC(e,t,n){let{rects:r,placement:o}=e;return{side:cw(t,i1(o),n),align:i2(o)||\"center\",anchor:{width:r.reference.width,height:r.reference.height},positioner:{width:r.floating.width,height:r.floating.height}}}function c_(e){var t,n,r,o,a;let i,l,s,c,u,d,f,p,h,m,g,y,v,{anchor:b,positionMethod:A=\"absolute\",side:w=\"bottom\",sideOffset:C=0,align:_=\"center\",alignOffset:k=0,collisionBoundary:E,collisionPadding:j=5,sticky:S=!1,arrowPadding:O=5,trackAnchor:B=!0,keepMounted:P=!1,floatingRootContext:I,mounted:z,collisionAvoidance:T,shiftCrossAxis:D=!1,nodeId:L,adaptiveOrigin:N}=e,R=T.side||\"flip\",M=T.align||\"flip\",Z=T.fallbackAxisSide||\"end\",U=\"function\"==typeof b?b:void 0,F=af(U),q=U?F:b,H=a0(b),V=\"rtl\"===lk(),$={top:\"top\",right:\"right\",bottom:\"bottom\",left:\"left\",\"inline-end\":V?\"left\":\"right\",\"inline-start\":V?\"right\":\"left\"}[w],W=\"center\"===_?$:`${$}-${_}`,Y={boundary:\"clipping-ancestors\"===E?\"clippingAncestors\":E,padding:j},K=x.useRef(null),X=a0(C),G=a0(k),Q=\"function\"!=typeof C?C:0,J=[(i=e=>{let t=cC(e,w,V),n=\"function\"==typeof X.current?X.current(t):X.current,r=\"function\"==typeof G.current?G.current(t):G.current;return{mainAxis:n,crossAxis:r,alignmentAxis:r}},l=[Q,\"function\"!=typeof k?k:0,V,w],{...(void 0===(t=i)&&(t=0),{name:\"offset\",options:t,async fn(e){var n,r;let{x:o,y:a,placement:i,middlewareData:l}=e,s=await s8(e,t);return i===(null==(n=l.offset)?void 0:n.placement)&&null!=(r=l.arrow)&&r.alignmentOffset?{}:{x:o+s.x,y:a+s.y,data:{...s,placement:i}}}}),options:[i,l]})],ee=\"none\"===M&&\"shift\"!==R,et=!ee&&(S||D||\"shift\"===R),en=\"none\"===R?null:{...{name:\"flip\",options:n=s={...Y,mainAxis:!D&&\"flip\"===R,crossAxis:\"flip\"===M&&\"alignment\",fallbackAxisSideDirection:Z},async fn(e){var t,r,o,a,i;let{placement:l,middlewareData:s,rects:c,initialPlacement:u,platform:d,elements:f}=e,{mainAxis:p=!0,crossAxis:h=!0,fallbackPlacements:m,fallbackStrategy:g=\"bestFit\",fallbackAxisSideDirection:y=\"none\",flipAlignment:v=!0,...b}=i0(n,e);if(null!=(t=s.arrow)&&t.alignmentOffset)return{};let A=i1(l),x=i6(u),w=i1(u)===u,C=await (null==d.isRTL?void 0:d.isRTL(f.floating)),_=m||(w||!v?[ln(u)]:function(e){let t=ln(e);return[i9(e),t,i9(t)]}(u)),k=\"none\"!==y;!m&&k&&_.push(...function(e,t,n,r){let o=i2(e),a=function(e,t,n){switch(e){case\"top\":case\"bottom\":if(n)return t?i7:i8;return t?i8:i7;case\"left\":case\"right\":return t?le:lt;default:return[]}}(i1(e),\"start\"===n,r);return o&&(a=a.map(e=>e+\"-\"+o),t&&(a=a.concat(a.map(i9)))),a}(u,v,y,C));let E=[u,..._],j=await s5(e,b),S=[],O=(null==(r=s.flip)?void 0:r.overflows)||[];if(p&&S.push(j[A]),h){let e=function(e,t,n){void 0===n&&(n=!1);let r=i2(e),o=i4(i6(e)),a=i5(o),i=\"x\"===o?r===(n?\"end\":\"start\")?\"right\":\"left\":\"start\"===r?\"bottom\":\"top\";return t.reference[a]>t.floating[a]&&(i=ln(i)),[i,ln(i)]}(l,c,C);S.push(j[e[0]],j[e[1]])}if(O=[...O,{placement:l,overflows:S}],!S.every(e=>e<=0)){let e=((null==(o=s.flip)?void 0:o.index)||0)+1,t=E[e];if(t&&(\"alignment\"!==h||x===i6(t)||O.every(e=>i6(e.placement)!==x||e.overflows[0]>0)))return{data:{index:e,overflows:O},reset:{placement:t}};let n=null==(a=O.filter(e=>e.overflows[0]<=0).sort((e,t)=>e.overflows[1]-t.overflows[1])[0])?void 0:a.placement;if(!n)switch(g){case\"bestFit\":{let e=null==(i=O.filter(e=>{if(k){let t=i6(e.placement);return t===x||\"y\"===t}return!0}).map(e=>[e.placement,e.overflows.filter(e=>e>0).reduce((e,t)=>e+t,0)]).sort((e,t)=>e[1]-t[1])[0])?void 0:i[0];e&&(n=e);break}case\"initialPlacement\":n=u}if(l!==n)return{reset:{placement:n}}}return{}}},options:[s,c]},er=ee?null:(u=e=>{var t;let n,r,o=lE(e.elements.floating).documentElement;return{...Y,rootBoundary:D?{x:0,y:0,width:o.clientWidth,height:o.clientHeight}:void 0,mainAxis:\"none\"!==M,crossAxis:et,limiter:S||D?void 0:{...(void 0===(t=n=()=>{if(!K.current)return{};let{height:e}=K.current.getBoundingClientRect();return{offset:e/2+(\"number\"==typeof j?j:0)}})&&(t={}),{options:t,fn(e){let{x:n,y:r,placement:o,rects:a,middlewareData:i}=e,{offset:l=0,mainAxis:s=!0,crossAxis:c=!0}=i0(t,e),u={x:n,y:r},d=i6(o),f=i4(d),p=u[f],h=u[d],m=i0(l,e),g=\"number\"==typeof m?{mainAxis:m,crossAxis:0}:{mainAxis:0,crossAxis:0,...m};if(s){let e=\"y\"===f?\"height\":\"width\",t=a.reference[f]-a.floating[e]+g.mainAxis,n=a.reference[f]+a.reference[e]-g.mainAxis;p<t?p=t:p>n&&(p=n)}if(c){var y,v;let e=\"y\"===f?\"width\":\"height\",t=s9.has(i1(o)),n=a.reference[d]-a.floating[e]+(t&&(null==(y=i.offset)?void 0:y[d])||0)+(t?0:g.crossAxis),r=a.reference[d]+a.reference[e]+(t?0:(null==(v=i.offset)?void 0:v[d])||0)-(t?g.crossAxis:0);h<n?h=n:h>r&&(h=r)}return{[f]:p,[d]:h}}}),options:[n,r]}}},d=[Y,S,D,j,M],{...(void 0===(r=u)&&(r={}),{name:\"shift\",options:r,async fn(e){let{x:t,y:n,placement:o}=e,{mainAxis:a=!0,crossAxis:i=!1,limiter:l={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...s}=i0(r,e),c={x:t,y:n},u=await s5(e,s),d=i6(i1(o)),f=i4(d),p=c[f],h=c[d];if(a){let e=\"y\"===f?\"top\":\"left\",t=\"y\"===f?\"bottom\":\"right\",n=p+u[e],r=p-u[t];p=iY(n,iW(p,r))}if(i){let e=\"y\"===d?\"top\":\"left\",t=\"y\"===d?\"bottom\":\"right\",n=h+u[e],r=h-u[t];h=iY(n,iW(h,r))}let m=l.fn({...e,[f]:p,[d]:h});return{...m,data:{x:m.x-t,y:m.y-n,enabled:{[f]:a,[d]:i}}}}}),options:[u,d]});\"shift\"===R||\"shift\"===M||\"center\"===_?J.push(er,en):J.push(en,er),J.push({...{name:\"size\",options:o=f={...Y,apply({elements:{floating:e},rects:{reference:t},availableWidth:n,availableHeight:r}){Object.entries({\"--available-width\":`${n}px`,\"--available-height\":`${r}px`,\"--anchor-width\":`${t.width}px`,\"--anchor-height\":`${t.height}px`}).forEach(([t,n])=>{e.style.setProperty(t,n)})}},async fn(e){var t,n;let r,a,{placement:i,rects:l,platform:s,elements:c}=e,{apply:u=()=>{},...d}=i0(o,e),f=await s5(e,d),p=i1(i),h=i2(i),m=\"y\"===i6(i),{width:g,height:y}=l.floating;\"top\"===p||\"bottom\"===p?(r=p,a=h===(await (null==s.isRTL?void 0:s.isRTL(c.floating))?\"start\":\"end\")?\"left\":\"right\"):(a=p,r=\"end\"===h?\"top\":\"bottom\");let v=y-f.top-f.bottom,b=g-f.left-f.right,A=iW(y-f[r],v),x=iW(g-f[a],b),w=!e.middlewareData.shift,C=A,_=x;if(null!=(t=e.middlewareData.shift)&&t.enabled.x&&(_=b),null!=(n=e.middlewareData.shift)&&n.enabled.y&&(C=v),w&&!h){let e=iY(f.left,0),t=iY(f.right,0),n=iY(f.top,0),r=iY(f.bottom,0);m?_=g-2*(0!==e||0!==t?e+t:iY(f.left,f.right)):C=y-2*(0!==n||0!==r?n+r:iY(f.top,f.bottom))}await u({...e,availableWidth:_,availableHeight:C});let k=await s.getDimensions(c.floating);return g!==k.width||y!==k.height?{reset:{rects:!0}}:{}}},options:[f,p]},(h=()=>({element:K.current||document.createElement(\"div\"),padding:O,offsetParent:\"floating\"}),m=[O],{...{name:\"arrow\",options:g=h,async fn(e){let{x:t,y:n,placement:r,rects:o,platform:a,elements:i,middlewareData:l}=e,{element:s,padding:c=0,offsetParent:u=\"real\"}=i0(g,e)||{};if(null==s)return{};let d=lr(c),f={x:t,y:n},p=i4(i6(r)),h=i5(p),m=await a.getDimensions(s),y=\"y\"===p,v=y?\"clientHeight\":\"clientWidth\",b=o.reference[h]+o.reference[p]-f[p]-o.floating[h],A=f[p]-o.reference[p],x=\"real\"===u?await a.getOffsetParent?.(s):i.floating,w=i.floating[v]||o.floating[h];w&&await a.isElement?.(x)||(w=i.floating[v]||o.floating[h]);let C=w/2-m[h]/2-1,_=Math.min(d[y?\"top\":\"left\"],C),k=Math.min(d[y?\"bottom\":\"right\"],C),E=w-m[h]-k,j=w/2-m[h]/2+(b/2-A/2),S=iY(_,iW(j,E)),O=!l.arrow&&null!=i2(r)&&j!==S&&o.reference[h]/2-(j<_?_:k)-m[h]/2<0,B=O?j<_?j-_:j-E:0;return{[p]:f[p]+B,data:{[p]:S,centerOffset:j-S-B,...O&&{alignmentOffset:B}},reset:O}}},options:[h,m]}),{...(void 0===(a=y)&&(a={}),{name:\"hide\",options:a,async fn(e){let{rects:t}=e,{strategy:n=\"referenceHidden\",...r}=i0(a,e);switch(n){case\"referenceHidden\":{let n=s3(await s5(e,{...r,elementContext:\"reference\"}),t.reference);return{data:{referenceHiddenOffsets:n,referenceHidden:s6(n)}}}case\"escaped\":{let n=s3(await s5(e,{...r,altBoundary:!0}),t.floating);return{data:{escapedOffsets:n,escaped:s6(n)}}}default:return{}}}}),options:[y,v]},{name:\"transformOrigin\",fn(e){let{elements:t,middlewareData:n,placement:r,rects:o,y:a}=e,i=i1(r),l=i6(i),s=K.current,c=n.arrow?.x||0,u=n.arrow?.y||0,d=s?.clientWidth||0,f=s?.clientHeight||0,p=c+d/2,h=u+f/2,m=Math.abs(n.shift?.y||0),g=o.reference.height/2,y=m>(\"function\"==typeof C?C(cC(e,w,V)):C),v={top:`${p}px calc(100% + ${C}px)`,bottom:`${p}px ${-C}px`,left:`calc(100% + ${C}px) ${h}px`,right:`${-C}px ${h}px`}[i],b=`${p}px ${o.reference.y+g-a}px`;return t.floating.style.setProperty(\"--transform-origin\",et&&\"y\"===l&&y?b:v),{}}},N);let eo=I;!z&&I&&(eo={...I,elements:{reference:null,floating:null,domReference:null}});let ea=x.useMemo(()=>({elementResize:B&&\"undefined\"!=typeof ResizeObserver,layoutShift:B&&\"undefined\"!=typeof IntersectionObserver}),[B]),{refs:ei,elements:el,x:es,y:ec,middlewareData:eu,update:ed,placement:ep,context:eh,isPositioned:em,floatingStyles:eg}=function(e={}){let{nodeId:t}=e,n=aS({...e,elements:{reference:null,floating:null,...e.elements}}),r=e.rootContext||n,o=r.elements,[a,i]=x.useState(null),[l,s]=x.useState(null),c=o?.domReference||a,u=x.useRef(null),d=ak();ax(()=>{c&&(u.current=c)},[c]);let f=function(e){void 0===e&&(e={});let{placement:t=\"bottom\",strategy:n=\"absolute\",middleware:r=[],platform:o,elements:{reference:a,floating:i}={},transform:l=!0,whileElementsMounted:s,open:c}=e,[u,d]=x.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[f,p]=x.useState(r);cv(f,r)||p(r);let[h,m]=x.useState(null),[g,y]=x.useState(null),v=x.useCallback(e=>{e!==C.current&&(C.current=e,m(e))},[]),b=x.useCallback(e=>{e!==_.current&&(_.current=e,y(e))},[]),A=a||h,w=i||g,C=x.useRef(null),_=x.useRef(null),k=x.useRef(u),E=null!=s,j=cx(s),S=cx(o),O=cx(c),B=x.useCallback(()=>{if(!C.current||!_.current)return;let e={placement:t,strategy:n,middleware:f};S.current&&(e.platform=S.current),((e,t,n)=>{let r=new Map,o={platform:cp,...n},a={...o.platform,_c:r};return s4(e,t,{...o,platform:a})})(C.current,_.current,e).then(e=>{let t={...e,isPositioned:!1!==O.current};P.current&&!cv(k.current,t)&&(k.current=t,ef.flushSync(()=>{d(t)}))})},[f,t,n,S,O]);cy(()=>{!1===c&&k.current.isPositioned&&(k.current.isPositioned=!1,d(e=>({...e,isPositioned:!1})))},[c]);let P=x.useRef(!1);cy(()=>(P.current=!0,()=>{P.current=!1}),[]),cy(()=>{if(A&&(C.current=A),w&&(_.current=w),A&&w){if(j.current)return j.current(A,w,B);B()}},[A,w,B,j,E]);let I=x.useMemo(()=>({reference:C,floating:_,setReference:v,setFloating:b}),[v,b]),z=x.useMemo(()=>({reference:A,floating:w}),[A,w]),T=x.useMemo(()=>{let e={position:n,left:0,top:0};if(!z.floating)return e;let t=cA(z.floating,u.x),r=cA(z.floating,u.y);return l?{...e,transform:\"translate(\"+t+\"px, \"+r+\"px)\",...cb(z.floating)>=1.5&&{willChange:\"transform\"}}:{position:n,left:t,top:r}},[n,l,z.floating,u.x,u.y]);return x.useMemo(()=>({...u,update:B,refs:I,elements:z,floatingStyles:T}),[u,B,I,z,T])}({...e,elements:{...o,...l&&{reference:l}}}),p=x.useCallback(e=>{let t=aT(e)?{getBoundingClientRect:()=>e.getBoundingClientRect(),getClientRects:()=>e.getClientRects(),contextElement:e}:e;s(t),f.refs.setReference(t)},[f.refs]),h=x.useCallback(e=>{(aT(e)||null===e)&&(u.current=e,i(e)),(aT(f.refs.reference.current)||null===f.refs.reference.current||null!==e&&!aT(e))&&f.refs.setReference(e)},[f.refs]),m=x.useMemo(()=>({...f.refs,setReference:h,setPositionReference:p,domReference:u}),[f.refs,h,p]),g=x.useMemo(()=>({...f.elements,domReference:c}),[f.elements,c]),y=x.useMemo(()=>({...f,...r,refs:m,elements:g,nodeId:t}),[f,m,g,t,r]);return ax(()=>{r.dataRef.current.floatingContext=y;let e=d?.nodesRef.current.find(e=>e.id===t);e&&(e.context=y)}),x.useMemo(()=>({...f,context:y,refs:m,elements:g}),[f,m,g,y])}({rootContext:eo,placement:W,middleware:J,strategy:A,whileElementsMounted:P?void 0:(...e)=>cm(...e,ea),nodeId:L}),{sideX:ey,sideY:ev}=eu.adaptiveOrigin||{},eb=x.useMemo(()=>N?{position:A,[ey]:`${es}px`,[ev]:`${ec}px`}:eg,[N,ey,ev,A,es,ec,eg]),eA=x.useRef(null);ax(()=>{if(!z)return;let e=H.current,t=\"function\"==typeof e?e():e,n=(ck(t)?t.current:t)||null;n!==eA.current&&(ei.setPositionReference(n),eA.current=n)},[z,ei,q,H]),x.useEffect(()=>{if(!z)return;let e=H.current;\"function\"!=typeof e&&ck(e)&&e.current!==eA.current&&(ei.setPositionReference(e.current),eA.current=e.current)},[z,ei,q,H]),x.useEffect(()=>{if(P&&z&&el.domReference&&el.floating)return cm(el.domReference,el.floating,ed,ea)},[P,z,el,ed,ea]);let ex=cw(w,i1(ep),V),ew=i2(ep)||\"center\",eC=!!eu.hide?.referenceHidden,e_=x.useMemo(()=>({position:\"absolute\",top:eu.arrow?.y,left:eu.arrow?.x}),[eu.arrow]),ek=eu.arrow?.centerOffset!==0;return x.useMemo(()=>({positionerStyles:eb,arrowStyles:e_,arrowRef:K,arrowUncentered:ek,side:ex,align:ew,anchorHidden:eC,refs:ei,context:eh,isPositioned:em,update:ed}),[eb,e_,K,ek,ex,ew,eC,ei,eh,em,ed])}function ck(e){return null!=e&&\"current\"in e}function cE(e){let{children:t,elementsRef:n,labelsRef:r,onMapChange:o}=e,a=x.useRef(0),i=aa(cS).current,l=aa(cj).current,[s,c]=x.useState(0),u=x.useRef(s),d=af((e,t)=>{l.set(e,t??null),u.current+=1,c(u.current)}),f=af(e=>{l.delete(e),u.current+=1,c(u.current)}),p=x.useMemo(()=>{let e=new Map;return Array.from(l.keys()).sort(cO).forEach((t,n)=>{let r=l.get(t)??{};e.set(t,{...r,index:n})}),e},[l,s]);ax(()=>{u.current===s&&(n.current.length!==p.size&&(n.current.length=p.size),r&&r.current.length!==p.size&&(r.current.length=p.size)),o?.(p)},[o,p,n,r,s,u]);let h=af(e=>(i.add(e),()=>{i.delete(e)}));ax(()=>{i.forEach(e=>e(p))},[i,p]);let m=x.useMemo(()=>({register:d,unregister:f,subscribeMapChange:h,elementsRef:n,labelsRef:r,nextIndexRef:a}),[d,f,h,n,r,a]);return(0,b.jsx)(sl.Provider,{value:m,children:t})}function cj(){return new Map}function cS(){return new Set}function cO(e,t){let n=e.compareDocumentPosition(t);return n&Node.DOCUMENT_POSITION_FOLLOWING||n&Node.DOCUMENT_POSITION_CONTAINED_BY?-1:n&Node.DOCUMENT_POSITION_PRECEDING||n&Node.DOCUMENT_POSITION_CONTAINS?1:0}let cB=x.forwardRef(function(e,t){let n,{cutout:r,...o}=e;if(r){let e=r?.getBoundingClientRect();n=`polygon(\n      0% 0%,\n      100% 0%,\n      100% 100%,\n      0% 100%,\n      0% 0%,\n      ${e.left}px ${e.top}px,\n      ${e.left}px ${e.bottom}px,\n      ${e.right}px ${e.bottom}px,\n      ${e.right}px ${e.top}px,\n      ${e.left}px ${e.top}px\n    )`}return(0,b.jsx)(\"div\",{ref:t,role:\"presentation\",\"data-base-ui-inert\":\"\",...o,style:{position:\"fixed\",inset:0,userSelect:\"none\",WebkitUserSelect:\"none\",clipPath:n}})}),cP=x.forwardRef(function(e,t){var n;let{anchor:r,positionMethod:o=\"absolute\",className:a,render:i,side:l,align:s,sideOffset:c=0,alignOffset:u=0,collisionBoundary:d=\"clipping-ancestors\",collisionPadding:f=5,arrowPadding:p=5,sticky:h=!1,trackAnchor:m=!0,collisionAvoidance:g=iZ,...y}=e,{open:v,setOpen:A,floatingRootContext:w,setPositionerElement:C,itemDomElements:_,itemLabels:k,mounted:E,modal:j,lastOpenChangeReason:S,parent:O,setHoverEnabled:B,triggerElement:P}=lA(),I=function(){let e=x.useContext(sJ);if(void 0===e)throw Error(\"Base UI: <Menu.Portal> is missing.\");return e}(),z=function(e){let t=ab(),n=ak(),r=a_(),o=r;return ax(()=>{if(!t)return;let e={id:t,parentId:o};return n?.addNode(e),()=>{n?.removeNode(e)}},[n,t,o]),t}(),T=a_(),D=lD(!0),L=r,N=c,R=u,M=s;\"context-menu\"===O.type&&(L=O.context?.anchor??r,M=e.align??\"start\",R=e.alignOffset??2,N=e.sideOffset??-5);let Z=l,U=M;\"menu\"===O.type?(Z=Z??\"inline-end\",U=U??\"start\"):\"menubar\"===O.type&&(Z=Z??\"bottom\",U=U??\"start\");let F=\"context-menu\"===O.type,q=c_({anchor:L,floatingRootContext:w,positionMethod:D?\"fixed\":o,mounted:E,side:Z,sideOffset:N,align:U,alignOffset:R,arrowPadding:F?0:p,collisionBoundary:d,collisionPadding:f,sticky:h,nodeId:z,keepMounted:I,trackAnchor:m,collisionAvoidance:g,shiftCrossAxis:F}),{events:H}=ak(),V=x.useMemo(()=>{let e={};return v||(e.pointerEvents=\"none\"),{role:\"presentation\",hidden:!E,style:{...q.positionerStyles,...e}}},[v,E,q.positionerStyles]);x.useEffect(()=>{function e(e){e.open?(e.parentNodeId===z&&B(!1),e.nodeId!==z&&e.parentNodeId===T&&A(!1,void 0,\"sibling-open\")):e.parentNodeId===z&&B(!0)}return H.on(\"openchange\",e),()=>{H.off(\"openchange\",e)}},[H,z,T,A,B]),x.useEffect(()=>{H.emit(\"openchange\",{open:v,nodeId:z,parentNodeId:T})},[H,v,z,T]);let $=x.useMemo(()=>({open:v,side:q.side,align:q.align,anchorHidden:q.anchorHidden,nested:\"menu\"===O.type}),[v,q.side,q.align,q.anchorHidden,O.type]),W=x.useMemo(()=>({side:q.side,align:q.align,arrowRef:q.arrowRef,arrowUncentered:q.arrowUncentered,arrowStyles:q.arrowStyles,floatingContext:q.context}),[q.side,q.align,q.arrowRef,q.arrowUncentered,q.arrowStyles,q.context]),Y=sn(\"div\",e,{state:$,customStyleHookMapping:se,ref:[t,C],props:{...V,...y}}),K=E&&\"menu\"!==O.type&&(\"menubar\"!==O.type&&j&&\"trigger-hover\"!==S||\"menubar\"===O.type&&O.context.modal),X=null;return\"menubar\"===O.type?X=O.context.contentElement:void 0===O.type&&(X=P),(0,b.jsxs)(s1.Provider,{value:W,children:[K&&(0,b.jsx)(cB,{ref:\"context-menu\"===O.type||\"nested-context-menu\"===O.type?O.context.internalBackdropRef:null,inert:(n=!v,st>=19?n:n?\"true\":void 0),cutout:X}),(0,b.jsx)(aE,{id:z,children:(0,b.jsx)(cE,{elementsRef:_,labelsRef:k,children:Y})})]})}),cI={inert:new WeakMap,\"aria-hidden\":new WeakMap,none:new WeakMap};function cz(e){return\"inert\"===e?cI.inert:\"aria-hidden\"===e?cI[\"aria-hidden\"]:cI.none}let cT=new WeakSet,cD={},cL=0,cN=e=>e&&(e.host||cN(e.parentNode)),cR=[];function cM(){cR=cR.filter(e=>e.isConnected)}function cZ(){return cM(),cR[cR.length-1]}function cU(e,t){if(!t.current.includes(\"floating\")&&!e.getAttribute(\"role\")?.includes(\"dialog\"))return;let n=sU(),r=sM(e,n).filter(e=>{let t=e.getAttribute(\"data-tabindex\")||\"\";return sZ(e,n)||e.hasAttribute(\"data-tabindex\")&&!t.startsWith(\"-\")}),o=e.getAttribute(\"tabindex\");t.current.includes(\"floating\")||0===r.length?\"0\"!==o&&e.setAttribute(\"tabindex\",\"0\"):(\"-1\"!==o||e.hasAttribute(\"data-tabindex\")&&\"-1\"!==e.getAttribute(\"data-tabindex\"))&&(e.setAttribute(\"tabindex\",\"-1\"),e.setAttribute(\"data-tabindex\",\"-1\"))}function cF(e){let{context:t,children:n,disabled:r=!1,order:o=[\"content\"],initialFocus:a=0,returnFocus:i=!0,restoreFocus:l=!1,modal:s=!0,closeOnFocusOut:c=!0,getInsideElements:u=()=>[]}=e,{open:d,onOpenChange:f,events:p,dataRef:h,elements:{domReference:m,floating:g}}=t,y=af(()=>h.current.floatingContext?.nodeId),v=af(u),A=\"number\"==typeof a&&a<0,w=ix(m)&&A,C=a0(o),_=a0(a),k=a0(i),E=ak(),j=sK(),S=x.useRef(null),O=x.useRef(null),B=x.useRef(!1),P=x.useRef(!1),I=x.useRef(-1),z=ac(),T=null!=j,D=iw(g),L=af((e=D)=>e?sR(e,sU()):[]),N=af(e=>{let t=L(e);return C.current.map(()=>t).filter(Boolean).flat()});x.useEffect(()=>{if(r||!s)return;function e(e){\"Tab\"===e.key&&ig(D,im(ib(D)))&&0===L().length&&!w&&ir(e)}let t=ib(D);return t.addEventListener(\"keydown\",e),()=>{t.removeEventListener(\"keydown\",e)}},[r,m,D,s,C,w,L,N]),x.useEffect(()=>{if(!r&&g)return g.addEventListener(\"focusin\",e),()=>{g.removeEventListener(\"focusin\",e)};function e(e){let t=iy(e),n=L().indexOf(t);-1!==n&&(I.current=n)}},[r,g,L]),x.useEffect(()=>{if(r||!c)return;function e(){P.current=!0}function t(e){let t=e.relatedTarget,n=e.currentTarget,r=iy(e);queueMicrotask(()=>{let o=y(),a=!(ig(m,t)||ig(g,t)||ig(t,g)||ig(j?.portalNode,t)||t?.hasAttribute(iC(\"focus-guard\"))||E&&(iS(E.nodesRef.current,o).find(e=>ig(e.context?.elements.floating,t)||ig(e.context?.elements.domReference,t))||iO(E.nodesRef.current,o).find(e=>[e.context?.elements.floating,iw(e.context?.elements.floating)].includes(t)||e.context?.elements.domReference===t)));if(n===m&&D&&cU(D,C),l&&n!==m&&!r?.isConnected&&im(ib(D))===ib(D).body){aD(D)&&D.focus();let e=I.current,t=L(),n=t[e]||t[t.length-1]||D;aD(n)&&n.focus()}if(h.current.insideReactTree){h.current.insideReactTree=!1;return}if(P.current){P.current=!1;return}(w||!s)&&t&&a&&t!==cZ()&&(B.current=!0,f(!1,e,\"focus-out\"))})}let n=!!(!E&&j);function o(){h.current.insideReactTree=!0,z.start(0,()=>{h.current.insideReactTree=!1})}if(g&&aD(m))return m.addEventListener(\"focusout\",t),m.addEventListener(\"pointerdown\",e),g.addEventListener(\"focusout\",t),n&&g.addEventListener(\"focusout\",o,!0),()=>{m.removeEventListener(\"focusout\",t),m.removeEventListener(\"pointerdown\",e),g.removeEventListener(\"focusout\",t),n&&g.removeEventListener(\"focusout\",o,!0)}},[r,m,g,D,s,E,j,f,c,l,L,w,y,C,h,z]);let R=x.useRef(null),M=x.useRef(null),Z=lY(R,j?.beforeInsideRef),U=lY(M,j?.afterInsideRef);x.useEffect(()=>{if(r||!g)return;let e=Array.from(j?.portalNode?.querySelectorAll(`[${iC(\"portal\")}]`)||[]),t=E?iO(E.nodesRef.current,y()):[],n=function(e,t=!1,n=!1){let r=ib(e[0]).body;return function(e,t,n,r){let o,a=\"data-base-ui-inert\",i=r?\"inert\":n?\"aria-hidden\":null,l=(o=t,e.map(e=>{if(o.contains(e))return e;let t=cN(e);return o.contains(t)?t:null}).filter(e=>null!=e)),s=new Set,c=new Set(l),u=[];cD[a]||(cD[a]=new WeakMap);let d=cD[a];return l.forEach(function e(t){!(!t||s.has(t))&&(s.add(t),t.parentNode&&e(t.parentNode))}),function e(t){!t||c.has(t)||[].forEach.call(t.children,t=>{if(\"script\"!==aB(t))if(s.has(t))e(t);else{let e=i?t.getAttribute(i):null,n=null!==e&&\"false\"!==e,r=cz(i),o=(r.get(t)||0)+1,l=(d.get(t)||0)+1;r.set(t,o),d.set(t,l),u.push(t),1===o&&n&&cT.add(t),1===l&&t.setAttribute(a,\"\"),!n&&i&&t.setAttribute(i,\"inert\"===i?\"\":\"true\")}})}(t),s.clear(),cL+=1,()=>{u.forEach(e=>{let t=cz(i),n=(t.get(e)||0)-1,r=(d.get(e)||0)-1;t.set(e,n),d.set(e,r),n||(!cT.has(e)&&i&&e.removeAttribute(i),cT.delete(e)),r||e.removeAttribute(a)}),(cL-=1)||(cI.inert=new WeakMap,cI[\"aria-hidden\"]=new WeakMap,cI.none=new WeakMap,cT=new WeakSet,cD={})}}(e.concat(Array.from(r.querySelectorAll(\"[aria-live]\"))),r,t,n)}([g,t.find(e=>ix(e.context?.elements.domReference||null))?.context?.elements.domReference,...e,...v(),S.current,O.current,R.current,M.current,j?.beforeOutsideRef.current,j?.afterOutsideRef.current,w?m:null].filter(e=>null!=e),s||w);return()=>{n()}},[r,m,g,s,C,j,w,E,y,v]),ax(()=>{if(r||!aD(D))return;let e=im(ib(D));queueMicrotask(()=>{let t=N(D),n=_.current,r=(\"number\"==typeof n?t[n]:n.current)||D,o=ig(D,e);A||o||!d||lf(r,{preventScroll:r===D})})},[r,d,D,A,N,_]),ax(()=>{var e;if(r||!D)return;let t=ib(D);function n({reason:e,event:t,nested:n}){if([\"hover\",\"safe-polygon\"].includes(e)&&\"mouseleave\"===t.type&&(B.current=!0),\"outside-press\"===e)if(n)B.current=!1;else if(io(t)||ia(t))B.current=!1;else{let e=!1;document.createElement(\"div\").focus({get preventScroll(){return e=!0,!1}}),e?B.current=!1:B.current=!0}}e=im(t),cM(),e&&\"body\"!==aB(e)&&(cR.push(e),cR.length>20&&(cR=cR.slice(-20))),p.on(\"openchange\",n);let o=t.createElement(\"span\");return o.setAttribute(\"tabindex\",\"-1\"),o.setAttribute(\"aria-hidden\",\"true\"),Object.assign(o.style,sf),T&&m&&m.insertAdjacentElement(\"afterend\",o),()=>{p.off(\"openchange\",n);let e=im(t),r=ig(g,e)||E&&iS(E.nodesRef.current,y(),!1).some(t=>ig(t.context?.elements.floating,e)),a=function(){if(\"boolean\"==typeof k.current){let e=m||cZ();return e&&e.isConnected?e:o}return k.current.current||o}();queueMicrotask(()=>{let n=function(e){let t=sU();return sZ(e,t)?e:sR(e,t)[0]||e}(a);k.current&&!B.current&&aD(n)&&(n===e||e===t.body||r)&&n.focus({preventScroll:!0}),o.remove()})}},[r,g,D,k,h,p,E,T,m,y]),x.useEffect(()=>{queueMicrotask(()=>{B.current=!1})},[r]),x.useEffect(()=>{if(r||!d)return;function e(e){let t=iy(e);t?.closest(\"[data-base-ui-click-trigger]\")&&(P.current=!0)}let t=ib(D);return t.addEventListener(\"pointerdown\",e,!0),()=>{t.removeEventListener(\"pointerdown\",e,!0)}},[r,d,D]),ax(()=>{if(!r&&j)return j.setFocusManagerState({modal:s,closeOnFocusOut:c,open:d,onOpenChange:f,domReference:m}),()=>{j.setFocusManagerState(null)}},[r,j,s,d,f,c,m]),ax(()=>{if(!r&&D)return cU(D,C),()=>{queueMicrotask(cM)}},[r,D,C]);let F=!r&&(!s||!w)&&(T||s);return(0,b.jsxs)(x.Fragment,{children:[F&&(0,b.jsx)(sp,{\"data-type\":\"inside\",ref:Z,onFocus:e=>{if(s){let e=N();lf(e[e.length-1])}else if(j?.preserveTabOrder&&j.portalNode)if(B.current=!1,sV(e,j.portalNode)){let e=sq(m);e?.focus()}else j.beforeOutsideRef.current?.focus()}}),n,F&&(0,b.jsx)(sp,{\"data-type\":\"inside\",ref:U,onFocus:e=>{if(s)lf(N()[0]);else if(j?.preserveTabOrder&&j.portalNode)if(c&&(B.current=!0),sV(e,j.portalNode)){let e=sH(m);e?.focus()}else j.afterOutsideRef.current?.focus()}})]})}let cq={...se,...l0},cH=x.forwardRef(function(e,t){let{render:n,className:r,finalFocus:o,...a}=e,{open:i,setOpen:l,popupRef:s,transitionStatus:c,popupProps:u,mounted:d,instantType:f,onOpenChangeComplete:p,parent:h,lastOpenChangeReason:m,rootId:g}=lA(),{side:y,align:v,floatingContext:A}=function(){let e=x.useContext(s1);if(void 0===e)throw Error(\"Base UI: MenuPositionerContext is missing. MenuPositioner parts must be placed within <Menu.Positioner>.\");return e}();lC({open:i,ref:s,onComplete(){i&&p?.(!0)}});let{events:w}=ak();x.useEffect(()=>{function e(e){l(!1,e.domEvent,e.reason)}return w.on(\"close\",e),()=>{w.off(\"close\",e)}},[w,l]);let C=sn(\"div\",e,{state:x.useMemo(()=>({transitionStatus:c,side:y,align:v,open:i,nested:\"menu\"===h.type,instant:f}),[c,y,v,i,h.type,f]),ref:[t,s],customStyleHookMapping:cq,props:[u,\"starting\"===c?iN:iR,a,{\"data-rootownerid\":g}]}),_=void 0===h.type||\"context-menu\"===h.type;return\"menubar\"===h.type&&\"outside-press\"!==m&&(_=!0),(0,b.jsx)(cF,{context:A,modal:!1,disabled:!d,returnFocus:o||_,initialFocus:\"menu\"===h.type?-1:0,restoreFocus:!0,children:C})}),cV=x.createContext(void 0),c$=x.forwardRef(function(e,t){let{render:n,className:r,...o}=e,[a,i]=x.useState(void 0),l=x.useMemo(()=>({setLabelId:i}),[i]),s=sn(\"div\",e,{ref:t,props:{role:\"group\",\"aria-labelledby\":a,...o}});return(0,b.jsx)(cV.Provider,{value:l,children:s})});function cW(e){return ab(e,\"base-ui\")}let cY=x.forwardRef(function(e,t){let{className:n,render:r,id:o,...a}=e,i=cW(o),{setLabelId:l}=function(){let e=x.useContext(cV);if(void 0===e)throw Error(\"Base UI: MenuGroupRootContext is missing. Menu group parts must be used within <Menu.Group>.\");return e}();return ax(()=>(l(i),()=>{l(void 0)}),[l,i]),sn(\"div\",e,{ref:t,props:{id:i,role:\"presentation\",...a}})}),cK={type:\"regular-item\"},cX=x.memo(x.forwardRef(function(e,t){let{className:n,closeOnClick:r=!0,disabled:o=!1,highlighted:a,id:i,menuEvents:l,itemProps:s,render:c,allowMouseUpTriggerRef:u,typingRef:d,nativeButton:f,...p}=e,{getItemProps:h,itemRef:m}=function(e){let{closeOnClick:t,disabled:n=!1,highlighted:r,id:o,menuEvents:a,allowMouseUpTriggerRef:i,typingRef:l,nativeButton:s,itemMetadata:c}=e,u=x.useRef(null),{getButtonProps:d,buttonRef:f}=si({disabled:n,focusableWhenDisabled:!0,native:s}),p=x.useCallback(e=>lM({id:o,role:\"menuitem\",tabIndex:r?0:-1,onMouseEnter(){\"submenu-trigger\"===c.type&&c.setActive()},onKeyUp:e=>{\" \"===e.key&&l.current&&e.preventBaseUIHandler()},onClick:e=>{t&&a.emit(\"close\",{domEvent:e,reason:\"item-press\"})},onMouseUp:()=>{u.current&&i.current&&\"regular-item\"===c.type&&u.current.click()}},e,d),[o,r,d,l,t,a,i,c]),h=lY(u,f);return x.useMemo(()=>({getItemProps:p,itemRef:h}),[p,h])}({closeOnClick:r,disabled:o,highlighted:a,id:i,menuEvents:l,allowMouseUpTriggerRef:u,typingRef:d,nativeButton:f,itemMetadata:cK});return sn(\"div\",e,{state:x.useMemo(()=>({disabled:o,highlighted:a}),[o,a]),ref:[m,t],props:[s,p,h]})})),cG=x.forwardRef(function(e,t){let{id:n,label:r,nativeButton:o=!1,...a}=e,i=x.useRef(null),l=sc({label:r}),s=lY(t,l.ref,i),{itemProps:c,activeIndex:u,allowMouseUpTriggerRef:d,typingRef:f}=lA(),p=cW(n),h=l.index===u,{events:m}=ak();return(0,b.jsx)(cX,{...a,id:p,ref:s,highlighted:h,menuEvents:m,itemProps:c,allowMouseUpTriggerRef:d,typingRef:f,nativeButton:o})});var cQ=\"__next_builtin__\";function cJ(e){return e.replace(new RegExp(\"^\".concat(cQ)),\"\").replace(new RegExp(\"\".concat(\"@boundary\",\"$\")),\"\")}var c0=\"boundary:\";function c1(e){return e.startsWith(c0)}function c2(e){return e.replace(c0,\"\")}function c4(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function c5(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function c3(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}function c6(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n,r,o=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=o){var a=[],i=!0,l=!1;try{for(o=o.call(e);!(i=(n=o.next()).done)&&(a.push(n.value),!t||a.length!==t);i=!0);}catch(e){l=!0,r=e}finally{try{i||null==o.return||o.return()}finally{if(l)throw r}}return a}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return c4(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if(\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n)return Array.from(n);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c4(e,t)}}(e,t)||function(){throw TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}var c9=function(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){t.forEach(function(t){\"function\"==typeof t?t(e):t&&(t.current=e)})}};function c8(e){var t,n=e.nodeState,r=e.boundaries,o=n.pagePath,a=n.boundaryType,i=n.setBoundaryType,l=c6((0,x.useState)(!1),2),s=l[0],c=l[1],u=da().shadowRoot,d=(0,x.useRef)(null),f=(0,x.useRef)(null);t8(f,d,s,function(){c(!1)},null==(t=d.current)?void 0:t.ownerDocument);var p=(Object.values(r).find(function(e){return null!==e})||\"\").split(\".\").pop()||\"js\",h=(0,x.useMemo)(function(){return Object.fromEntries(Object.entries(r).map(function(e){var t=c6(e,2),n=t[0],r=cJ((t[1]||\"\").split(\"/\").pop()||\"\".concat(n,\".\").concat(p));return[n,r]}))},[r,p]),m=(o||\"\").split(\"/\").pop()||\"\",g=cJ(a?\"page.\".concat(p):m||\"page.\".concat(p)),y=[{label:h.loading,value:\"loading\",icon:(0,b.jsx)(c7,{}),disabled:!r.loading},{label:h.error,value:\"error\",icon:(0,b.jsx)(ue,{}),disabled:!r.error},{label:h[\"not-found\"],value:\"not-found\",icon:(0,b.jsx)(ut,{}),disabled:!r[\"not-found\"]}],v={label:a?\"Reset\":g,value:\"reset\",icon:(0,b.jsx)(un,{}),disabled:null===a},A=(0,x.useCallback)(function(e){var t=new URLSearchParams({file:e.filePath,isAppRelativePath:\"1\"});fetch(\"\".concat(process.env.__NEXT_ROUTER_BASEPATH||\"\",\"/__nextjs_launch-editor?\").concat(t.toString())).catch(console.warn)},[]),w=(0,x.useCallback)(function(e){switch(e){case\"not-found\":case\"loading\":case\"error\":i(e);break;case\"reset\":i(null);break;case\"open-editor\":o&&A({filePath:o})}},[i,o,A]),C=(0,x.useMemo)(function(){return\"layout\"!==n.type&&\"template\"!==n.type&&Object.values(r).some(function(e){return null!==e})},[n.type,r]);return(0,b.jsxs)(lW,{delay:0,modal:!1,open:s,onOpenChange:c,children:[(0,b.jsx)(sd,{className:\"segment-boundary-trigger\",\"data-nextjs-dev-overlay-segment-boundary-trigger-button\":!0,render:function(e){var t=c9(e.ref,d);return(0,b.jsx)(uo,c3(c5({},e),{ref:t}))},disabled:!C}),(0,b.jsx)(s0,{container:u,children:(0,b.jsx)(cP,{className:\"segment-boundary-dropdown-positioner\",side:\"bottom\",align:\"center\",sideOffset:6,arrowPadding:8,ref:f,children:(0,b.jsxs)(cH,{className:\"segment-boundary-dropdown\",children:[(0,b.jsxs)(c$,{children:[(0,b.jsx)(cY,{className:\"segment-boundary-group-label\",children:\"Toggle Overrides\"}),y.map(function(e){return(0,b.jsxs)(cG,{className:\"segment-boundary-dropdown-item\",onClick:function(){return w(e.value)},disabled:e.disabled,children:[e.icon,e.label]},e.value)})]}),(0,b.jsx)(c$,{children:(0,b.jsxs)(cG,{className:\"segment-boundary-dropdown-item\",onClick:function(){return w(v.value)},disabled:v.disabled,children:[v.icon,v.label]},v.value)})]})})})]})}function c7(){var e,t,n=(0,A.c)(2);return n[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"g\",{clipPath:\"url(#clip0_2759_1866)\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M10 3.5C13.5899 3.5 16.5 6.41015 16.5 10C16.5 13.5899 13.5899 16.5 10 16.5C6.41015 16.5 3.5 13.5899 3.5 10C3.5 6.41015 6.41015 3.5 10 3.5ZM2 10C2 14.4183 5.58172 18 10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2C5.58172 2 2 5.58172 2 10ZM10.75 9.62402V6H9.25V9.875C9.25 10.1898 9.39858 10.486 9.65039 10.6748L11.5498 12.0996L12.1504 12.5498L13.0498 11.3496L12.4502 10.9004L10.75 9.62402Z\",fill:\"currentColor\"})}),n[0]=e):e=n[0],n[1]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsxs)(\"svg\",{width:\"20px\",height:\"20px\",viewBox:\"0 0 20 20\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[e,(0,b.jsx)(\"defs\",{children:(0,b.jsx)(\"clipPath\",{id:\"clip0_2759_1866\",children:(0,b.jsx)(\"rect\",{width:\"16\",height:\"16\",fill:\"white\",transform:\"translate(2 2)\"})})})]}),n[1]=t):t=n[1],t}function ue(){var e,t,n=(0,A.c)(2);return n[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"g\",{clipPath:\"url(#clip0_2759_1881)\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M3.5 7.30762V12.6924L7.30762 16.5H12.6924L16.5 12.6924V7.30762L12.6924 3.5H7.30762L3.5 7.30762ZM18 12.8994L17.9951 12.998C17.9724 13.2271 17.8712 13.4423 17.707 13.6064L13.6064 17.707L13.5332 17.7734C13.3806 17.8985 13.1944 17.9757 12.998 17.9951L12.8994 18H7.10059L7.00195 17.9951C6.80562 17.9757 6.6194 17.8985 6.4668 17.7734L6.39355 17.707L2.29297 13.6064C2.12883 13.4423 2.02756 13.2271 2.00488 12.998L2 12.8994V7.10059C2 6.83539 2.10546 6.58109 2.29297 6.39355L6.39355 2.29297C6.55771 2.12883 6.77294 2.02756 7.00195 2.00488L7.10059 2H12.8994L12.998 2.00488C13.2271 2.02756 13.4423 2.12883 13.6064 2.29297L17.707 6.39355C17.8945 6.58109 18 6.83539 18 7.10059V12.8994ZM9.25 5.75H10.75L10.75 10.75H9.25L9.25 5.75ZM10 14C10.5523 14 11 13.5523 11 13C11 12.4477 10.5523 12 10 12C9.44772 12 9 12.4477 9 13C9 13.5523 9.44772 14 10 14Z\",fill:\"currentColor\"})}),n[0]=e):e=n[0],n[1]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsxs)(\"svg\",{width:\"20\",height:\"20\",viewBox:\"0 0 20 20\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[e,(0,b.jsx)(\"defs\",{children:(0,b.jsx)(\"clipPath\",{id:\"clip0_2759_1881\",children:(0,b.jsx)(\"rect\",{width:\"16\",height:\"16\",fill:\"white\",transform:\"translate(2 2)\"})})})]}),n[1]=t):t=n[1],t}function ut(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"20px\",height:\"20px\",viewBox:\"0 0 20 20\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M10.5586 2.5C11.1341 2.50004 11.6588 2.8294 11.9091 3.34766L17.8076 15.5654C18.1278 16.2292 17.6442 16.9997 16.9072 17H3.09274C2.35574 16.9997 1.8721 16.2292 2.19235 15.5654L8.09079 3.34766C8.34109 2.8294 8.86583 2.50004 9.44137 2.5H10.5586ZM3.89059 15.5H16.1093L10.5586 4H9.44137L3.89059 15.5ZM9.24997 6.75H10.75L10.75 10.75H9.24997L9.24997 6.75ZM9.99997 14C10.5523 14 11 13.5523 11 13C11 12.4477 10.5523 12 9.99997 12C9.44768 12 8.99997 12.4477 8.99997 13C8.99997 13.5523 9.44768 14 9.99997 14Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}function un(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"20\",height:\"20\",viewBox:\"0 0 20 20\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:(0,b.jsx)(\"path\",{d:\"M9.96484 3C13.8463 3.00018 17 6.13012 17 10C17 13.8699 13.8463 16.9998 9.96484 17C7.62404 17 5.54877 15.8617 4.27051 14.1123L3.82812 13.5068L5.03906 12.6221L5.48145 13.2275C6.48815 14.6053 8.12092 15.5 9.96484 15.5C13.0259 15.4998 15.5 13.0335 15.5 10C15.5 6.96654 13.0259 4.50018 9.96484 4.5C7.42905 4.5 5.29544 6.19429 4.63867 8.5H8V10H2.75C2.33579 10 2 9.66421 2 9.25V4H3.5V7.2373C4.57781 4.74376 7.06749 3 9.96484 3Z\",fill:\"currentColor\"})}),t[0]=e):e=t[0],e}function ur(e){var t,n,r=(0,A.c)(3);return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M8.7071 2.39644C8.31658 2.00592 7.68341 2.00592 7.29289 2.39644L4.46966 5.21966L3.93933 5.74999L4.99999 6.81065L5.53032 6.28032L7.99999 3.81065L10.4697 6.28032L11 6.81065L12.0607 5.74999L11.5303 5.21966L8.7071 2.39644ZM5.53032 9.71966L4.99999 9.18933L3.93933 10.25L4.46966 10.7803L7.29289 13.6035C7.68341 13.9941 8.31658 13.9941 8.7071 13.6035L11.5303 10.7803L12.0607 10.25L11 9.18933L10.4697 9.71966L7.99999 12.1893L5.53032 9.71966Z\",fill:\"currentColor\"}),r[0]=t):t=r[0],r[1]!==e?(n=(0,b.jsx)(\"svg\",c3(c5({strokeLinejoin:\"round\",viewBox:\"0 0 16 16\"},e),{children:t})),r[1]=e,r[2]=n):n=r[2],n}function uo(e){var t,n,r=(0,A.c)(3);return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"span\",{className:\"segment-boundary-trigger-text\",children:(0,b.jsx)(ur,{className:\"plus-icon\"})}),r[0]=t):t=r[0],r[1]!==e?(n=(0,b.jsx)(\"button\",c3(c5({},e),{children:t})),r[1]=e,r[2]=n):n=r[2],n}let ua=x.createContext(void 0);function ui(){let e=x.useContext(ua);if(void 0===e)throw Error(\"Base UI: TooltipRootContext is missing. Tooltip parts must be placed within <Tooltip.Root>.\");return e}let ul=x.forwardRef(function(e,t){let{className:n,render:r,...o}=e,{open:a,setTriggerElement:i,triggerProps:l}=ui();return sn(\"button\",e,{state:x.useMemo(()=>({open:a}),[a]),ref:[t,i],props:[l,o],customStyleHookMapping:l8})}),us=x.createContext(void 0);function uc(){let e=x.useContext(us);if(void 0===e)throw Error(\"Base UI: TooltipPositionerContext is missing. TooltipPositioner parts must be placed within <Tooltip.Positioner>.\");return e}let uu=x.forwardRef(function(e,t){let{className:n,render:r,...o}=e,{open:a,arrowRef:i,side:l,align:s,arrowUncentered:c,arrowStyles:u}=uc();return sn(\"div\",e,{state:x.useMemo(()=>({open:a,side:l,align:s,uncentered:c}),[a,l,s,c]),ref:[t,i],props:[{style:u,\"aria-hidden\":!0},o],customStyleHookMapping:se})}),ud={...se,...l0},uf=x.forwardRef(function(e,t){let{className:n,render:r,...o}=e,{open:a,instantType:i,transitionStatus:l,popupProps:s,popupRef:c,onOpenChangeComplete:u}=ui(),{side:d,align:f}=uc();return lC({open:a,ref:c,onComplete(){a&&u?.(!0)}}),sn(\"div\",e,{state:x.useMemo(()=>({open:a,side:d,align:f,instant:i,transitionStatus:l}),[a,d,f,i,l]),ref:[t,c],props:[s,\"starting\"===l?iN:iR,o],customStyleHookMapping:ud})}),up=x.createContext(void 0),uh=x.forwardRef(function(e,t){let{render:n,className:r,anchor:o,positionMethod:a=\"absolute\",side:i=\"top\",align:l=\"center\",sideOffset:s=0,alignOffset:c=0,collisionBoundary:u=\"clipping-ancestors\",collisionPadding:d=5,arrowPadding:f=5,sticky:p=!1,trackAnchor:h=!0,collisionAvoidance:m=iU,...g}=e,{open:y,setPositionerElement:v,mounted:A,floatingRootContext:w,trackCursorAxis:C,hoverable:_}=ui(),k=c_({anchor:o,positionMethod:a,floatingRootContext:w,mounted:A,side:i,sideOffset:s,align:l,alignOffset:c,collisionBoundary:u,collisionPadding:d,sticky:p,arrowPadding:f,trackAnchor:h,keepMounted:function(){let e=x.useContext(up);if(void 0===e)throw Error(\"Base UI: <Tooltip.Portal> is missing.\");return e}(),collisionAvoidance:m}),E=x.useMemo(()=>{let e={};return y&&\"both\"!==C&&_||(e.pointerEvents=\"none\"),{role:\"presentation\",hidden:!A,style:{...k.positionerStyles,...e}}},[y,C,_,A,k.positionerStyles]),j=x.useMemo(()=>({props:E,...k}),[E,k]),S=x.useMemo(()=>({open:y,side:j.side,align:j.align,anchorHidden:j.anchorHidden}),[y,j.side,j.align,j.anchorHidden]),O=x.useMemo(()=>({...S,arrowRef:j.arrowRef,arrowStyles:j.arrowStyles,arrowUncentered:j.arrowUncentered}),[S,j.arrowRef,j.arrowStyles,j.arrowUncentered]),B=sn(\"div\",e,{state:S,props:[j.props,g],ref:[t,v],customStyleHookMapping:se});return(0,b.jsx)(us.Provider,{value:O,children:B})});function um(e){let t=sG({root:e.root});return t&&ef.createPortal(e.children,t)}function ug(e){let{children:t,keepMounted:n=!1,container:r}=e,{mounted:o}=ui();return o||n?(0,b.jsx)(up.Provider,{value:n,children:(0,b.jsx)(um,{root:r,children:t})}):null}let uy=x.createContext({hasProvider:!1,timeoutMs:0,delayRef:{current:0},initialDelayRef:{current:0},timeout:new as,currentIdRef:{current:null},currentContextRef:{current:null}});function uv(e){let{children:t,delay:n,timeoutMs:r=0}=e,o=x.useRef(n),a=x.useRef(n),i=x.useRef(null),l=x.useRef(null),s=ac();return(0,b.jsx)(uy.Provider,{value:x.useMemo(()=>({hasProvider:!0,delayRef:o,initialDelayRef:a,currentIdRef:i,timeoutMs:r,currentContextRef:l,timeout:s}),[r,s]),children:t})}let ub=x.createContext(void 0),uA=function(e){let{delay:t,closeDelay:n,timeout:r=400}=e,o=x.useMemo(()=>({delay:t,closeDelay:n}),[t,n]),a=x.useMemo(()=>({open:t,close:n}),[t,n]);return(0,b.jsx)(ub.Provider,{value:o,children:(0,b.jsx)(uv,{delay:a,timeoutMs:r,children:e.children})})};function ux(e){return null!=e&&null!=e.clientX}function uw(e){let{disabled:t=!1,defaultOpen:n=!1,onOpenChange:r,open:o,delay:a,closeDelay:i,hoverable:l=!0,trackCursorAxis:s=\"none\",actionsRef:c,onOpenChangeComplete:u}=e,d=a??600,f=i??0,[p,h]=x.useState(null),[m,g]=x.useState(null),[y,v]=x.useState(),A=x.useRef(null),[w,C]=am({controlled:o,default:n,name:\"Tooltip\",state:\"open\"}),_=!t&&w;function k(e,t,n){let o=\"trigger-hover\"===n,a=e&&\"trigger-focus\"===n,i=!e&&(\"trigger-press\"===n||\"escape-key\"===n);function l(){r?.(e,t,n),C(e)}o?ef.flushSync(l):l(),a||i?v(a?\"focus\":\"dismiss\"):\"trigger-hover\"===n&&v(void 0)}let E=af(k);w&&t&&k(!1,void 0,\"disabled\");let{mounted:j,setMounted:S,transitionStatus:O}=lw(_),B=af(()=>{S(!1),u?.(!1)});lC({enabled:!c,open:_,ref:A,onComplete(){_||B()}}),x.useImperativeHandle(c,()=>({unmount:B}),[B]);let P=aS({elements:{reference:p,floating:m},open:_,onOpenChange(e,t,n){E(e,t,lz(n))}}),I=x.useContext(ub),{delayRef:z,isInstantPhase:T,hasProvider:D}=function(e,t={}){let{open:n,onOpenChange:r,floatingId:o}=e,{enabled:a=!0}=t,{currentIdRef:i,delayRef:l,timeoutMs:s,initialDelayRef:c,currentContextRef:u,hasProvider:d,timeout:f}=x.useContext(uy),[p,h]=x.useState(!1);return ax(()=>{function e(){h(!1),u.current?.setIsInstantPhase(!1),i.current=null,u.current=null,l.current=c.current}if(a&&i.current&&!n&&i.current===o){if(h(!1),s)return f.start(s,e),()=>{f.clear()};e()}},[a,n,o,i,l,s,c,u,f]),ax(()=>{if(!a||!n)return;let e=u.current,t=i.current;u.current={onOpenChange:r,setIsInstantPhase:h},i.current=o,l.current={open:0,close:ik(c.current,\"close\")},null!==t&&t!==o?(f.clear(),h(!0),e?.setIsInstantPhase(!0),e?.onOpenChange(!1)):(h(!1),e?.setIsInstantPhase(!1))},[a,n,o,r,i,l,s,c,u,f]),ax(()=>()=>{u.current=null},[u]),x.useMemo(()=>({hasProvider:d,delayRef:l,isInstantPhase:p}),[d,l,p])}(P),L=T?\"delay\":y,N=ij(P,{enabled:!t,mouseOnly:!0,move:!1,handleClose:l&&\"both\"!==s?iP():null,restMs(){let e=I?.delay,t=\"object\"==typeof z.current?z.current.open:void 0,n=d;return D&&(n=0!==t?a??e??d:0),n},delay(){let e=\"object\"==typeof z.current?z.current.close:void 0,t=f;return null==i&&D&&(t=e),{close:t}}}),R=iz(P,{enabled:!t}),M=iH(P,{enabled:!t,referencePress:!0}),{getReferenceProps:Z,getFloatingProps:U}=lg([N,R,M,function(e,t={}){let{open:n,dataRef:r,elements:{floating:o,domReference:a},refs:i}=e,{enabled:l=!0,axis:s=\"both\",x:c=null,y:u=null}=t,d=x.useRef(!1),f=x.useRef(null),[p,h]=x.useState(),[m,g]=x.useState([]),y=af((e,t)=>{if(!d.current&&(!r.current.openEvent||ux(r.current.openEvent))){var n,o;let l,c,u;i.setPositionReference((n=a,o={x:e,y:t,axis:s,dataRef:r,pointerType:p},l=null,c=null,u=!1,{contextElement:n||void 0,getBoundingClientRect(){let e=n?.getBoundingClientRect()||{width:0,height:0,x:0,y:0},t=\"x\"===o.axis||\"both\"===o.axis,r=\"y\"===o.axis||\"both\"===o.axis,a=[\"mouseenter\",\"mousemove\"].includes(o.dataRef.current.openEvent?.type||\"\")&&\"touch\"!==o.pointerType,i=e.width,s=e.height,d=e.x,f=e.y;return null==l&&o.x&&t&&(l=e.x-o.x),null==c&&o.y&&r&&(c=e.y-o.y),d-=l||0,f-=c||0,i=0,s=0,!u||a?(i=\"y\"===o.axis?e.width:0,s=\"x\"===o.axis?e.height:0,d=t&&null!=o.x?o.x:d,f=r&&null!=o.y?o.y:f):u&&!a&&(s=\"x\"===o.axis?e.height:s,i=\"y\"===o.axis?e.width:i),u=!0,{width:i,height:s,x:d,y:f,top:f,right:d+i,bottom:f+s,left:d}}}))}}),v=af(e=>{null==c&&null==u&&(n?f.current||g([]):y(e.clientX,e.clientY))}),b=ii(p)?o:n,A=x.useCallback(()=>{if(!b||!l||null!=c||null!=u)return;let e=aP(o);function t(n){ig(o,iy(n))?(e.removeEventListener(\"mousemove\",t),f.current=null):y(n.clientX,n.clientY)}if(!r.current.openEvent||ux(r.current.openEvent)){e.addEventListener(\"mousemove\",t);let n=()=>{e.removeEventListener(\"mousemove\",t),f.current=null};return f.current=n,n}i.setPositionReference(a)},[b,l,c,u,o,r,i,a,y]);x.useEffect(()=>A(),[A,m]),x.useEffect(()=>{l&&!o&&(d.current=!1)},[l,o]),x.useEffect(()=>{!l&&n&&(d.current=!0)},[l,n]),ax(()=>{l&&(null!=c||null!=u)&&(d.current=!1,y(c,u))},[l,c,u,y]);let w=x.useMemo(()=>{function e(e){h(e.pointerType)}return{onPointerDown:e,onPointerEnter:e,onMouseMove:v,onMouseEnter:v}},[v]);return x.useMemo(()=>l?{reference:w}:{},[l,w])}(P,{enabled:!t&&\"none\"!==s,axis:\"none\"===s?void 0:s})]),F=x.useMemo(()=>({open:_,setOpen:E,mounted:j,setMounted:S,setTriggerElement:h,positionerElement:m,setPositionerElement:g,popupRef:A,triggerProps:Z(),popupProps:U(),floatingRootContext:P,instantType:L,transitionStatus:O,onOpenChangeComplete:u}),[_,E,j,S,h,m,g,A,Z,U,P,L,O,u]),q=x.useMemo(()=>({...F,delay:d,closeDelay:f,trackCursorAxis:s,hoverable:l}),[F,d,f,s,l]);return(0,b.jsx)(ua.Provider,{value:q,children:e.children})}var uC=__webpack_require__(\"../../node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.4.5_@swc+helpers@0.5.15__webpack@5.98.0_@swc+core@1.11.24_@sw_wm7ee5ic4mofrhisudwon4qpq4/node_modules/css-loader/dist/cjs.js!./src/next-devtools/dev-overlay/components/tooltip/tooltip.css\"),u_={};u_.styleTagTransform=h(),u_.setAttributes=u(),u_.insert=s(),u_.domAPI=i(),u_.insertStyleElement=f(),o()(uC.Z,u_),uC.Z&&uC.Z.locals&&uC.Z.locals;var uk=(0,x.forwardRef)(function(e,t){var n,r,o,a,i,l,s,c,u,d,f,p,h=(0,A.c)(35),m=e.className,g=e.children,y=e.title,v=e.direction,x=e.arrowSize,w=e.offset,C=void 0===v?\"top\":v,_=void 0===x?6:x,k=da().shadowRoot;if(!y)return g;h[0]!==g?(n=function(e){var t,n;return(0,b.jsx)(\"span\",(t=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}({},e),n=n={children:g},Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}),t))},h[0]=g,h[1]=n):n=h[1],h[2]!==t||h[3]!==n?(r=(0,b.jsx)(ul,{ref:t,render:n}),h[2]=t,h[3]=n,h[4]=r):r=h[4];var E=(void 0===w?8:w)+_,j=\"\".concat(_,\"px\"),S=\"\".concat(_,\"px\");h[5]!==j||h[6]!==S?(o={\"--anchor-width\":j,\"--anchor-height\":S},h[5]=j,h[6]=S,h[7]=o):o=h[7];var O=o;h[8]!==m?(a=eG(\"tooltip\",m),h[8]=m,h[9]=a):a=h[9];var B=\"\".concat(_,\"px\");h[10]!==B?(i={\"--arrow-size\":B},h[10]=B,h[11]=i):i=h[11];var P=i,I=\"tooltip-arrow--\".concat(C);h[12]!==I?(l=eG(\"tooltip-arrow\",I),h[12]=I,h[13]=l):l=h[13];var z=\"\".concat(_,\"px\");h[14]!==z?(s={\"--arrow-size\":z},h[14]=z,h[15]=s):s=h[15];var T=s;return h[16]!==l||h[17]!==T?(c=(0,b.jsx)(uu,{className:l,style:T}),h[16]=l,h[17]=T,h[18]=c):c=h[18],h[19]!==a||h[20]!==P||h[21]!==c||h[22]!==y?(u=(0,b.jsxs)(uf,{className:a,style:P,children:[y,c]}),h[19]=a,h[20]=P,h[21]=c,h[22]=y,h[23]=u):u=h[23],h[24]!==C||h[25]!==O||h[26]!==u||h[27]!==E?(d=(0,b.jsx)(uh,{side:C,sideOffset:E,className:\"tooltip-positioner\",style:O,children:u}),h[24]=C,h[25]=O,h[26]=u,h[27]=E,h[28]=d):d=h[28],h[29]!==k||h[30]!==d?(f=(0,b.jsx)(ug,{container:k,children:d}),h[29]=k,h[30]=d,h[31]=f):f=h[31],h[32]!==f||h[33]!==r?(p=(0,b.jsx)(uA,{children:(0,b.jsxs)(uw,{delay:400,children:[r,f]})}),h[32]=f,h[33]=r,h[34]=p):p=h[34],p});function uE(e){var t,n,r=(0,A.c)(3),o=e.possibleExtension,a=e.missingGlobalError?\"No global-error.\".concat(o,\" found: Add one to ensure users see a helpful message when an unexpected error occurs.\"):null;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(uL,{}),r[0]=t):t=r[0],r[1]!==a?(n=(0,b.jsx)(\"span\",{className:\"segment-explorer-suggestions\",children:(0,b.jsx)(uk,{className:\"segment-explorer-suggestions-tooltip\",title:a,children:t})}),r[1]=a,r[2]=n):n=r[2],n}function uj(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);\"function\"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){var r,o,a;r=e,o=t,a=n[t],o in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a})}return e}function uS(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):(function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n.push.apply(n,r)}return n})(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}),e}var uO=function(e){var t,n;return!!(null==(t=e.value)?void 0:t.type)&&!!(null==(n=e.value)?void 0:n.pagePath)};function uB(e){var t,n,r=(0,A.c)(3),o=e.page;return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(uN,{}),r[0]=t):t=r[0],r[1]!==o?(n=(0,b.jsxs)(\"div\",{className:\"segment-explorer-page-route-bar\",children:[t,(0,b.jsx)(\"span\",{className:\"segment-explorer-page-route-bar-path\",children:o})]}),r[1]=o,r[2]=n):n=r[2],n}function uP(e){var t,n,r,o=(0,A.c)(9),a=e.activeBoundariesCount,i=e.onGlobalReset,l=a>0,s=\"segment-explorer-footer-button \".concat(l?\"\":\"segment-explorer-footer-button--disabled\"),c=l?i:void 0,u=!l;return o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"span\",{className:\"segment-explorer-footer-text\",children:\"Clear Segment Overrides\"}),o[0]=t):t=o[0],o[1]!==a||o[2]!==l?(n=l&&(0,b.jsx)(\"span\",{className:\"segment-explorer-footer-badge\",children:a}),o[1]=a,o[2]=l,o[3]=n):n=o[3],o[4]!==s||o[5]!==c||o[6]!==u||o[7]!==n?(r=(0,b.jsx)(\"div\",{className:\"segment-explorer-footer\",children:(0,b.jsxs)(\"button\",{className:s,onClick:c,disabled:u,type:\"button\",children:[t,n]})}),o[4]=s,o[5]=c,o[6]=u,o[7]=n,o[8]=r):r=o[8],r}function uI(e){var t,n,r,o,a,i=(0,A.c)(15),l=e.type,s=e.isBuiltin,c=e.isOverridden,u=e.filePath,d=e.fileName,f=\"segment-explorer-file-label--\".concat(l),p=s&&\"segment-explorer-file-label--builtin\",h=c&&\"segment-explorer-file-label--overridden\";return i[0]!==f||i[1]!==p||i[2]!==h?(t=eG(\"segment-explorer-file-label\",f,p,h),i[0]=f,i[1]=p,i[2]=h,i[3]=t):t=i[3],i[4]!==u?(n=function(){var e;e=new URLSearchParams({file:{filePath:u}.filePath,isAppRelativePath:\"1\"}),fetch(\"\".concat(process.env.__NEXT_ROUTER_BASEPATH||\"\",\"/__nextjs_launch-editor?\").concat(e.toString()))},i[4]=u,i[5]=n):n=i[5],i[6]!==d?(r=(0,b.jsx)(\"span\",{className:\"segment-explorer-file-label-text\",children:d}),i[6]=d,i[7]=r):r=i[7],i[8]!==s?(o=s?(0,b.jsx)(uL,{}):(0,b.jsx)(uR,{className:\"code-icon\"}),i[8]=s,i[9]=o):o=i[9],i[10]!==t||i[11]!==n||i[12]!==r||i[13]!==o?(a=(0,b.jsxs)(\"span\",{className:t,onClick:n,children:[r,o]}),i[10]=t,i[11]=n,i[12]=r,i[13]=o,i[14]=a):a=i[14],a}function uz(e){var t,n,r,o,a,i,l,s,c,u=(0,A.c)(17),d=e.page,f=(0,x.useSyncExternalStore)(o6,o9,o8);u[0]!==f?(n=function e(t){var n,r=0;return(null==(n=t.value)?void 0:n.setBoundaryType)&&null!==t.value.boundaryType&&!c1(t.value.type)&&r++,Object.values(t.children).forEach(function(t){t&&(r+=e(t))}),r}(f),u[0]=f,u[1]=n):n=u[1],t=n,u[2]!==f?(r=function(){!function e(t){var n;(null==(n=t.value)?void 0:n.setBoundaryType)&&t.value.setBoundaryType(null),Object.values(t.children).forEach(function(t){t&&e(t)})}(f)},u[2]=f,u[3]=r):r=u[3];var p=r;return u[4]===Symbol.for(\"react.memo_cache_sentinel\")?(o={display:\"flex\",flexDirection:\"column\",height:\"100%\"},u[4]=o):o=u[4],u[5]!==d?(a=(0,b.jsx)(uB,{page:d}),u[5]=d,u[6]=a):a=u[6],u[7]===Symbol.for(\"react.memo_cache_sentinel\")?(i={flex:\"1 1 auto\",overflow:\"auto\"},u[7]=i):i=u[7],u[8]!==f?(l=(0,b.jsx)(\"div\",{className:\"segment-explorer-content\",\"data-nextjs-devtool-segment-explorer\":!0,style:i,children:(0,b.jsx)(uD,{node:f,level:0,segment:\"\"})}),u[8]=f,u[9]=l):l=u[9],u[10]!==t||u[11]!==p?(s=(0,b.jsx)(uP,{activeBoundariesCount:t,onGlobalReset:p}),u[10]=t,u[11]=p,u[12]=s):s=u[12],u[13]!==a||u[14]!==l||u[15]!==s?(c=(0,b.jsxs)(\"div\",{\"data-nextjs-devtools-panel-segments-explorer\":!0,style:o,children:[a,l,s]}),u[13]=a,u[14]=l,u[15]=s,u[16]=c):c=u[16],c}var uT=\"global-error\";function uD(e){var t=e.segment,n=e.node,r=e.level,o=(0,x.useMemo)(function(){return Object.keys(n.children)},[n.children]),a=(0,x.useMemo)(function(){var e=[];return o.forEach(function(t){var r=n.children[t];if(r&&r.value){var o=c2(r.value.type),a=o===uT;(a&&!r.value.pagePath.startsWith(cQ)||!a&&c1(r.value.type))&&e.push(o)}}),0===r&&!e.includes(uT)},[n.children,o,r]),i=o.sort(function(e,t){var r=e.includes(\".\"),o=t.includes(\".\");if(r&&!o)return -1;if(!r&&o)return 1;if(r&&o){var a,i,l,s,c,u,d,f,p=null==(i=n.children[e])||null==(a=i.value)?void 0:a.type,h=null==(s=n.children[t])||null==(l=s.value)?void 0:l.type,m=function(e){return e?\"layout\"===e?1:\"template\"===e?2:\"page\"===e?3:c1(e)?4:5:5},g=m(p),y=m(h);if(g!==y)return g-y;var v=(null==(u=n.children[e])||null==(c=u.value)?void 0:c.pagePath)||\"\",b=(null==(f=n.children[t])||null==(d=f.value)?void 0:d.pagePath)||\"\";return v.localeCompare(b)}return e.localeCompare(t)}),l=0!==r||t?t:\"app\",s=[],c=[],u=!0,d=!1,f=void 0;try{for(var p,h=i[Symbol.iterator]();!(u=(p=h.next()).done);u=!0){var m=p.value,g=n.children[m];if(g){if(uO(g)){c.push(m);continue}s.push(m)}}}catch(e){d=!0,f=e}finally{try{u||null==h.return||h.return()}finally{if(d)throw f}}for(var y=cJ(c[0]||\"\").split(\".\").pop()||\"js\",v=null,A=i.length-1;A>=0;A--){var w=n.children[i[A]];if(w&&w.value){var C=c1(w.value.type);if(!v&&!C){v=w;break}}}var _=null,k=!0,E=!1,j=void 0;try{for(var S,O=i[Symbol.iterator]();!(k=(S=O.next()).done);k=!0){var B=S.value,P=n.children[B];if(P&&P.value&&c1(P.value.type)){_=P;break}}}catch(e){E=!0,j=e}finally{try{k||null==O.return||O.return()}finally{if(E)throw j}}v=v||_;var I=c.length>0,z={\"not-found\":null,loading:null,error:null,\"global-error\":null};return c.forEach(function(e){var t=n.children[e];if(t&&t.value&&c1(t.value.type)){var r=c2(t.value.type);r in z&&(z[r]=t.value.pagePath||null)}}),(0,b.jsxs)(b.Fragment,{children:[I&&(0,b.jsx)(\"div\",{className:\"segment-explorer-item\",\"data-nextjs-devtool-segment-explorer-segment\":t+\"-\"+r,children:(0,b.jsx)(\"div\",{className:\"segment-explorer-item-row\",style:uj({},{paddingLeft:\"\".concat((r+1)*8,\"px\")}),children:(0,b.jsx)(\"div\",{className:\"segment-explorer-item-row-main\",children:(0,b.jsxs)(\"div\",{className:\"segment-explorer-filename\",children:[l&&(0,b.jsxs)(\"span\",{className:\"segment-explorer-filename--path\",children:[l,(0,b.jsx)(\"small\",{children:\"/\"})]}),a&&(0,b.jsx)(uE,{possibleExtension:y,missingGlobalError:a}),c.length>0&&(0,b.jsx)(\"span\",{className:\"segment-explorer-files\",children:c.map(function(e){var t=n.children[e];if(!t||!t.value||c1(t.value.type))return null;var r=t.value.pagePath,o=r.split(\"/\").pop()||\"\",a=r.startsWith(cQ),i=cJ(o),l=a?\"The default Next.js \".concat(t.value.type,\" is being shown. You can customize this page by adding your own \").concat(i,\" file to the app/ directory.\"):null,s=null!==t.value.boundaryType;return(0,b.jsx)(uk,{className:\"segment-explorer-file-label-tooltip--\"+(a?\"lg\":\"sm\"),direction:a?\"right\":\"top\",title:l,offset:12,children:(0,b.jsx)(uI,{type:t.value.type,isBuiltin:a,isOverridden:s,filePath:r,fileName:i})},e)})}),v&&v.value&&(0,b.jsx)(c8,{nodeState:v.value,boundaries:z})]})})})}),s.map(function(e){var o=n.children[e];if(!o)return null;var a=I?e:t+\" / \"+e;return(0,b.jsx)(uD,{segment:a,node:o,level:I?r+1:r},e)})]})}function uL(e){var t,n,r,o=(0,A.c)(4);return o[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{d:\"M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8Z\",fill:\"var(--color-gray-400)\"}),n=(0,b.jsx)(\"path\",{d:\"M7.75 7C8.30228 7.00001 8.75 7.44772 8.75 8V11.25H7.25V8.5H6.25V7H7.75ZM8 4C8.55228 4 9 4.44772 9 5C9 5.55228 8.55228 6 8 6C7.44772 6 7 5.55228 7 5C7 4.44772 7.44772 4 8 4Z\",fill:\"var(--color-gray-900)\"}),o[0]=t,o[1]=n):(t=o[0],n=o[1]),o[2]!==e?(r=(0,b.jsxs)(\"svg\",uS(uj({width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\"},e),{children:[t,n]})),o[2]=e,o[3]=r):r=o[3],r}function uN(){var e,t=(0,A.c)(1);return t[0]===Symbol.for(\"react.memo_cache_sentinel\")?(e=(0,b.jsx)(\"svg\",{width:\"20\",height:\"20\",viewBox:\"0 0 20 20\",fill:\"var(--color-gray-600)\",xmlns:\"http://www.w3.org/2000/svg\",children:(0,b.jsx)(\"path\",{d:\"M4.5 11.25C4.5 11.3881 4.61193 11.5 4.75 11.5H14.4395L11.9395 9L13 7.93945L16.7803 11.7197L16.832 11.7764C17.0723 12.0709 17.0549 12.5057 16.7803 12.7803L13 16.5605L11.9395 15.5L14.4395 13H4.75C3.7835 13 3 12.2165 3 11.25V4.25H4.5V11.25Z\"})}),t[0]=e):e=t[0],e}function uR(e){var t,n,r=(0,A.c)(3);return r[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=(0,b.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M7.22763 14.1819L10.2276 2.18193L10.4095 1.45432L8.95432 1.09052L8.77242 1.81812L5.77242 13.8181L5.59051 14.5457L7.04573 14.9095L7.22763 14.1819ZM3.75002 12.0607L3.21969 11.5304L0.39647 8.70713C0.00594559 8.31661 0.00594559 7.68344 0.39647 7.29292L3.21969 4.46969L3.75002 3.93936L4.81068 5.00002L4.28035 5.53035L1.81068 8.00003L4.28035 10.4697L4.81068 11L3.75002 12.0607ZM12.25 12.0607L12.7804 11.5304L15.6036 8.70713C15.9941 8.31661 15.9941 7.68344 15.6036 7.29292L12.7804 4.46969L12.25 3.93936L11.1894 5.00002L11.7197 5.53035L14.1894 8.00003L11.7197 10.4697L11.1894 11L12.25 12.0607Z\",fill:\"currentColor\"}),r[0]=t):t=r[0],r[1]!==e?(n=(0,b.jsx)(\"svg\",uS(uj({width:\"12\",height:\"12\",strokeLinejoin:\"round\",viewBox:\"0 0 16 16\",fill:\"currentColor\"},e),{children:t})),r[1]=e,r[2]=n):n=r[2],n}function uM(){var e,t,n=(e=[\"\\n        .dev-tools-info-close-button:focus-visible {\\n          outline: var(--focus-ring);\\n        }\\n      \"],t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}})));return uM=function(){return n},n}function uZ(e){var t,n,r,o,a,i,l,s,c,u,d,f=(0,A.c)(18),p=e.title,h=e.children,m=e.ref,g=r2().setPanel,y=(0,x.useRef)(null);return f[0]===Symbol.for(\"react.memo_cache_sentinel\")?(t=function(){var e;null==(e=y.current)||e.focus()},n=[],f[0]=t,f[1]=n):(t=f[0],n=f[1]),(0,x.useLayoutEffect)(t,n),f[2]===Symbol.for(\"react.memo_cache_sentinel\")?(r={width:\"100%\",display:\"flex\",alignItems:\"center\",justifyCont